var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.2,1,2.576]],["body/classes/AbstractController.html",[0,0.242,1,3.948,2,0.959,3,0.154,4,0.129,5,0.145,6,5.324,7,0.393,8,0.908,9,2.838,10,3.239,11,1.017,12,3.667,13,5.824,14,7.439,15,1.749,16,5.234,17,7.203,18,0.782,19,7.586,20,1.531,21,0.006,22,1.075,23,0.466,24,3.293,25,3.022,26,5.968,27,5.968,28,5.968,29,0.263,30,2.394,31,5.324,32,1.507,33,4.582,34,5.324,35,5.324,36,1.058,37,0.206,38,1.609,39,2.345,40,0.705,41,1.907,42,2.127,43,2.087,44,2.394,45,2.798,46,2.943,47,4.118,48,5.324,49,3.196,50,4.329,51,4.582,52,4.329,53,2.127,54,5.324,55,0.768,56,1.39,57,5.324,58,0.005,59,0.005]],["title/interfaces/AbstractControllerContext.html",[17,4.063,38,1.334]],["body/interfaces/AbstractControllerContext.html",[0,0.254,1,3.268,3,0.162,4,0.136,5,0.153,6,5.602,7,0.414,8,0.938,9,2.545,10,2.986,11,0.955,12,3.76,14,5.602,16,4.333,17,7.008,18,0.56,21,0.006,23,0.351,29,0.268,30,2.519,31,5.602,32,1.585,33,4.822,34,5.602,35,5.602,36,1.113,37,0.213,38,1.693,39,3.078,40,0.794,41,2.503,42,2.238,43,2.197,44,2.519,45,2.945,46,3.097,47,4.333,48,5.602,49,3.363,50,4.555,51,4.822,52,4.555,53,2.238,54,5.602,55,0.808,56,1.462,57,5.602,58,0.005,59,0.005,60,2.572,61,4.555,62,6.28]],["title/classes/AbstractQueueProcessor.html",[0,0.2,63,3.8]],["body/classes/AbstractQueueProcessor.html",[0,0.195,2,0.775,3,0.124,4,0.104,5,0.118,7,0.318,8,0.789,9,2.83,10,2.627,11,1.03,12,2.893,13,5.063,15,1.414,16,4.55,18,0.846,20,1.238,21,0.006,22,0.869,23,0.508,24,2.663,25,2.444,29,0.262,36,0.856,37,0.131,49,2.584,50,3.501,53,2.677,55,1.186,56,1.124,58,0.004,59,0.004,63,5.063,64,4.826,65,1.06,66,4.188,67,4.351,68,7.332,69,6.7,70,4.277,71,7.162,72,2.701,73,5.136,74,1.638,75,3.339,76,3.339,77,1.72,78,1.992,79,6.478,80,5.856,81,4.826,82,4.826,83,4.956,84,4.826,85,4.826,86,4.826,87,3.172,88,2.584,89,2.444,90,2.584,91,2.584,92,2.584,93,4.826,94,1.259,95,4.826,96,4.826,97,3.33,98,4.305,99,4.826,100,2.32,101,2.943,102,2.663,103,3.056,104,6.594,105,4.305,106,2.444,107,4.826,108,2.841,109,4.826,110,4.826,111,5.882,112,1.868,113,6.7,114,4.826,115,4.826,116,3.882,117,4.305,118,4.826]],["title/classes/AbstractSchema.html",[0,0.2,119,2.818]],["body/classes/AbstractSchema.html",[0,0.263,2,1.044,3,0.167,4,0.14,5,0.158,7,0.428,8,0.958,11,1.103,18,0.713,21,0.006,23,0.485,29,0.26,37,0.177,42,2.316,43,2.273,44,2.606,49,3.48,55,1.217,58,0.005,59,0.005,65,1.285,74,2.153,119,4.555,120,6.498,121,3.789,122,2.584,123,4.389,124,3.081,125,6.498,126,7.116,127,1.353,128,3.204,129,7.116,130,6.498,131,3.845,132,2.04,133,2.661,134,1.695,135,6.498]],["title/injectables/AbstractService.html",[66,2.321,136,1.229]],["body/injectables/AbstractService.html",[0,0.197,3,0.125,4,0.105,5,0.118,7,0.32,8,0.793,9,2.833,10,3.058,11,1.033,12,3.507,13,5.085,15,1.424,16,4.57,18,0.823,20,1.246,21,0.006,22,0.875,23,0.452,24,3.655,25,2.459,29,0.254,30,1.948,36,0.861,37,0.18,38,1.309,39,1.909,40,0.701,41,1.552,42,2.686,43,2.636,44,3.023,45,2.278,46,2.395,47,3.352,49,2.601,50,3.523,51,3.729,52,3.523,53,2.36,55,0.852,56,1.755,58,0.004,59,0.004,66,3.106,72,2.408,74,1.872,75,3.816,76,4.098,80,5.871,89,4.098,100,2.335,106,2.459,108,2.859,136,1.645,137,2.032,138,4.333,139,4.876,140,7.556,141,6.723,142,6.623,143,4.857,144,4.857,145,4.857,146,4.857,147,4.857,148,4.857,149,4.857,150,4.857,151,4.857,152,1.989,153,3.987,154,3.729,155,4.333,156,3.987,157,3.816,158,6.187,159,5.908,160,4.333,161,4.333,162,1.948,163,4.333,164,2.601,165,3.205,166,1.499,167,3.352,168,4.333,169,4.333,170,0.964,171,4.333,172,4.333,173,4.333,174,4.333]],["title/interfaces/AbstractServiceContext.html",[38,1.334,80,3.59]],["body/interfaces/AbstractServiceContext.html",[0,0.21,3,0.134,4,0.112,5,0.126,7,0.342,8,0.829,9,2.584,10,2.727,11,1.087,12,3.642,16,3.584,18,0.618,21,0.006,23,0.387,24,2.866,29,0.26,30,2.083,36,0.921,37,0.188,38,1.4,39,2.723,40,0.774,41,2.214,42,2.779,43,2.727,44,3.127,45,2.435,46,2.561,47,3.584,49,2.781,50,3.767,51,3.987,52,3.767,53,2.469,55,0.891,56,1.816,58,0.004,59,0.004,60,2.127,61,3.767,66,2.435,72,1.659,74,1.29,75,2.63,76,4.388,80,5.656,89,4.388,100,2.496,106,2.63,108,3.057,136,1.721,138,4.633,139,4.774,140,6.956,141,4.633,152,2.127,153,4.263,154,3.987,155,4.633,156,6.829,157,3.948,158,6.401,159,6.181,160,4.633,161,4.633,162,2.083,163,4.633,164,2.781,165,3.427,166,1.602,167,3.584,168,4.633,169,4.633,170,1.031,171,4.633,172,4.633,173,4.633,174,4.633,175,5.194]],["title/injectables/AbstractServiceSchema.html",[136,1.229,176,3.134]],["body/injectables/AbstractServiceSchema.html",[0,0.064,3,0.041,4,0.034,5,0.039,7,0.104,8,0.329,9,2.058,10,1.272,11,0.907,12,1.401,13,2.107,15,0.463,16,1.894,18,0.688,20,2.064,21,0.006,22,1.203,23,0.468,24,0.872,25,4.072,29,0.174,36,0.28,37,0.043,41,0.505,42,0.978,43,0.553,49,2.326,53,2.651,55,1.116,56,1.555,58,0.002,59,0.002,65,0.441,66,2.715,67,1.043,72,0.877,74,0.682,75,1.39,76,1.39,77,0.716,78,2.286,80,3.151,87,1.707,88,0.847,89,0.8,90,0.847,91,0.847,92,0.847,94,1.675,98,1.41,105,1.41,106,3.596,119,0.9,121,1.59,122,1.991,123,0.8,124,2.473,133,0.647,134,0.412,136,0.682,137,0.661,154,2.107,162,3.519,164,1.47,170,1.75,176,1.738,177,1.581,178,2.4,179,2.887,180,1.256,181,1.353,182,2.304,183,2.218,184,2.218,185,2.071,186,4.323,187,2.649,188,2.783,189,2.745,190,1.738,191,4.704,192,3.466,193,1.581,194,3.919,195,4.734,196,2.451,197,1.738,198,2.751,199,1.581,200,2.903,201,1.738,202,5.148,203,2.74,204,1.581,205,1.001,206,4.393,207,4.439,208,1.581,209,1.001,210,1.581,211,1.043,212,1.581,213,1.001,214,1.581,215,0.9,216,3.666,217,1.581,218,1.043,219,1.581,220,1.298,221,1.581,222,4.139,223,1.298,224,2.745,225,1.147,226,1.41,227,1.581,228,1.581,229,2.253,230,1.581,231,1.41,232,1.894,233,4.344,234,2.448,235,2.745,236,1.581,237,6.158,238,2.676,239,1.581,240,1.581,241,5.391,242,1.581,243,1.581,244,1.581,245,1.581,246,7.44,247,7.44,248,7.44,249,7.44,250,7.44,251,4.908,252,1.581,253,1.214,254,1.581,255,5.789,256,7.44,257,3.637,258,3.637,259,3.637,260,3.566,261,2.102,262,3.637,263,5.789,264,5.789,265,1.581,266,1.581,267,7.44,268,4.344,269,5.789,270,3.637,271,3.637,272,1.581,273,1.581,274,4.917,275,1.581,276,1.581,277,1.581,278,1.41,279,1.581,280,1.581,281,1.581,282,2.745,283,2.745,284,1.674,285,0.741,286,3.637,287,3.414,288,1.581,289,2.745,290,1.581,291,2.745,292,1.581,293,1.091,294,5.391,295,5.391,296,1.091,297,2.591,298,1.298,299,1.298,300,2.713,301,1.581,302,1.581,303,1.581,304,1.214,305,3.637,306,1.581,307,1.581,308,2.745,309,4.425,310,1.581,311,1.991,312,2.745,313,2.448,314,1.991,315,2.448,316,2.745,317,2.745,318,1.613,319,2.745,320,2.745,321,2.745,322,1.581,323,1.581,324,1.581,325,1.581,326,1.581,327,2.658,328,1.581,329,1.581,330,1.581,331,1.581,332,1.581,333,1.581,334,1.581,335,3.414,336,1.581,337,1.581,338,1.581,339,1.091]],["title/classes/AdditionalFieldsPart.html",[0,0.2,340,3.415]],["body/classes/AdditionalFieldsPart.html",[0,0.246,2,0.974,3,0.156,4,0.131,5,0.148,7,0.399,8,0.917,11,0.934,18,0.749,21,0.006,23,0.52,29,0.252,37,0.208,40,0.821,58,0.005,59,0.005,65,0.974,112,2.381,121,3.35,122,1.808,127,1.749,128,4.143,131,4.242,132,1.904,134,1.582,170,1.203,203,1.904,261,3.774,318,2.46,340,5.288,341,5.41,342,4.499,343,4.499,344,4.254,345,5.026,346,3.653,347,6.064,348,4.853,349,3.073,350,6.064,351,6.064,352,2.837,353,2.99,354,3.07,355,3.156,356,3.156,357,3.156,358,4.978,359,5.41]],["title/classes/AgentCreateQuestions.html",[0,0.2,360,3.59]],["body/classes/AgentCreateQuestions.html",[0,0.299,2,0.749,3,0.12,4,0.101,5,0.114,7,0.307,9,1.39,11,0.899,12,3.215,15,1.366,18,0.658,20,1.893,21,0.006,22,1.7,23,0.467,29,0.239,30,1.869,37,0.2,40,0.889,42,2.295,43,2.252,44,2.582,45,3.019,46,3.175,55,0.828,56,1.718,58,0.004,59,0.004,65,1.035,72,2.057,74,1.599,77,1.679,78,1.707,94,1.924,127,1.536,170,0.925,180,3.377,192,2.384,196,1.987,203,1.463,238,2.057,284,2.842,300,2.572,360,4.67,361,3.826,362,6.439,363,6.439,364,6.439,365,5.285,366,6.58,367,4.53,368,4.661,369,5.957,370,5.285,371,4.371,372,4.661,373,5.285,374,4.028,375,4.661,376,4.078,377,4.671,378,4.443,379,5.489,380,4.443,381,4.078,382,2.842,383,2.842,384,2.842,385,3.579,386,4.498,387,3.579,388,6.055,389,4.443,390,2.629,391,4.943,392,3.216,393,1.953,394,2.947,395,3.79,396,3.79,397,4.078,398,3.826,399,2.186,400,3.826,401,3.826,402,3.075,403,2.038,404,2.582,405,3.216,406,3.216,407,2.842,408,2.952,409,3.216,410,2.744]],["title/classes/Agents.html",[0,0.2,407,3.018]],["body/classes/Agents.html",[0,0.179,2,0.709,3,0.114,4,0.095,5,0.108,7,0.291,8,0.742,11,0.756,18,0.806,21,0.006,23,0.545,29,0.246,37,0.168,39,1.735,40,0.918,55,1.277,58,0.004,59,0.004,65,0.709,112,1.251,119,3.53,124,2.387,127,1.883,128,4.459,131,4.452,132,1.386,170,1.23,203,1.386,261,2.65,318,2.643,346,3.553,349,3.404,352,2.295,353,2.177,354,3.139,355,2.297,356,2.297,367,4.08,371,3.628,374,3.628,407,3.78,411,3.938,412,5.501,413,4.538,414,3.36,415,5.501,416,3.444,417,5.501,418,4.415,419,1.77,420,4.415,421,4.415,422,5.937,423,4.415,424,4.415,425,5.882,426,5.882,427,4.415,428,5.882,429,5.882,430,4.415,431,6.391,432,4.415,433,4.415,434,2.913,435,4.415,436,4.415,437,3.389,438,2.796,439,3.202,440,3.624,441,3.938]],["title/classes/AgentsCommand.html",[0,0.2,409,3.415]],["body/classes/AgentsCommand.html",[0,0.308,2,0.796,3,0.128,4,0.107,5,0.121,7,0.326,9,1.477,11,0.818,12,3.523,15,1.967,18,0.598,20,1.722,21,0.006,22,1.648,23,0.426,29,0.245,30,1.987,37,0.207,40,0.836,42,2.392,43,2.348,44,2.692,45,3.147,46,3.31,55,0.979,56,1.773,58,0.004,59,0.004,65,1.078,72,2.145,74,1.667,77,1.751,78,2.164,94,1.292,170,0.983,180,3.485,192,3.022,196,2.349,203,1.555,238,2.145,284,3.021,300,2.733,360,3.593,361,4.066,365,4.066,367,3.822,369,5.253,370,4.066,371,3.855,373,4.066,374,3.398,376,4.251,377,4.821,378,4.632,379,5.631,380,4.632,381,4.251,382,3.021,383,3.021,384,3.021,385,3.803,386,4.642,387,3.803,388,6.249,389,4.632,390,2.713,391,5.153,392,3.418,393,2.036,394,3.073,395,3.951,396,3.951,397,4.821,398,4.066,399,2.323,400,4.066,401,4.066,402,3.268,403,2.165,404,2.692,405,3.418,406,3.418,407,3.021,408,3.137,409,4.632,410,2.916,442,4.428,443,3.021,444,4.954,445,4.954,446,3.418]],["title/controllers/AgentsController.html",[447,1.764,448,4.063]],["body/controllers/AgentsController.html",[0,0.138,1,2.676,3,0.088,4,0.074,5,0.083,7,0.225,9,1.018,11,0.9,18,0.658,20,1.895,21,0.006,22,1.493,23,0.49,29,0.277,32,0.862,36,0.605,37,0.093,40,0.575,55,1.187,56,1.719,58,0.003,59,0.003,65,0.826,74,1.277,77,1.341,78,2.428,94,1.926,122,2.65,124,3.265,127,1.537,133,1.399,134,0.891,152,1.399,164,1.829,170,1.465,180,2.354,181,1.684,186,3.413,196,2.665,200,3.021,206,1.729,215,1.945,238,2.359,285,3.638,335,2.163,367,1.945,371,1.729,374,1.729,384,4.198,385,2.622,386,3.136,393,1.036,407,2.083,414,1.601,416,1.641,439,2.477,447,1.217,448,4.221,449,1.195,450,3.415,451,1.684,452,4.75,453,4.749,454,4.542,455,2.622,456,4.671,457,4.919,458,3.415,459,5.356,460,3.415,461,5.32,462,2.477,463,3.73,464,5.628,465,5.628,466,4.487,467,3.415,468,3.415,469,2.622,470,3.948,471,3.415,472,3.415,473,2.253,474,5.628,475,4.993,476,5.628,477,4.993,478,2.477,479,3.415,480,4.993,481,4.221,482,3.415,483,3.415,484,1.641,485,2.163,486,2.803,487,3.027,488,3.046,489,1.945,490,2.622,491,5.356,492,2.803,493,4.993,494,1.945,495,2.477,496,3.73,497,4.542,498,2.622,499,1.601,500,2.477,501,2.356,502,2.477,503,2.477,504,2.477,505,2.356,506,2.477,507,2.622,508,2.356,509,2.477,510,3.548,511,2.477,512,2.477,513,2.356,514,3.415,515,2.01,516,2.622,517,1.684,518,1.945,519,3.415,520,2.803,521,2.622,522,2.477,523,3.38,524,2.356,525,3.415,526,5.143,527,2.803,528,2.803,529,3.548,530,2.477,531,4.198,532,4.052,533,4.487,534,3.415,535,4.487,536,2.477,537,1.884,538,3.415,539,2.803,540,3.415,541,2.622]],["title/classes/AgentsCreateCommand.html",[0,0.2,391,3.8]],["body/classes/AgentsCreateCommand.html",[0,0.306,2,0.786,3,0.126,4,0.106,5,0.119,7,0.322,9,1.457,11,0.811,12,3.512,15,1.95,18,0.593,20,1.707,21,0.006,22,1.643,23,0.423,29,0.244,30,1.961,37,0.205,40,0.833,42,2.371,43,2.327,44,2.668,45,3.119,46,3.28,55,0.973,56,1.761,58,0.004,59,0.004,65,1.069,72,2.126,74,1.653,77,1.735,78,2.152,94,1.275,170,0.97,180,3.462,192,3.005,196,2.333,203,1.535,238,2.126,284,2.981,300,2.698,360,3.546,361,4.013,365,4.013,367,3.788,369,5.218,370,4.013,371,3.829,373,4.013,374,3.368,376,4.213,377,4.789,378,5.601,379,5.601,380,4.59,381,4.213,382,2.981,383,2.981,384,2.981,385,3.754,386,5.465,387,3.754,388,6.208,389,4.59,390,2.695,391,5.806,392,5.218,393,2.017,394,3.045,395,3.916,396,3.916,397,4.789,398,4.013,399,2.292,400,4.013,401,4.013,402,3.226,403,2.137,404,2.668,405,3.374,406,3.374,407,2.981,408,3.096,409,3.374,410,2.878,442,4.389,443,2.981,446,3.374,542,4.889,543,4.889]],["title/classes/AgentsCreateDto.html",[0,0.2,384,3.018]],["body/classes/AgentsCreateDto.html",[0,0.328,2,0.691,3,0.111,4,0.093,5,0.105,7,0.283,8,0.729,11,1.077,18,0.822,21,0.006,23,0.543,29,0.253,32,1.086,37,0.192,40,0.9,55,1.285,58,0.004,59,0.004,65,1.234,87,1.69,122,1.282,127,1.919,203,1.35,318,1.198,367,4.022,371,3.576,374,3.576,384,4.307,412,5.423,413,3.854,414,3.312,415,5.423,416,3.395,417,5.423,419,1.725,439,3.119,459,3.119,480,3.119,516,5.423,544,3.53,545,4.521,546,5.799,547,4.874,548,4.301,549,4.301,550,3.836,551,4.301,552,3.081,553,3.53,554,4.301,555,4.415,556,4.301,557,3.53,558,3.53,559,4.301,560,5.807,561,3.836,562,4.301,563,6.104,564,3.302,565,4.301,566,4.301,567,4.301,568,2.837,569,2.968,570,3.107,571,2.121,572,3.332,573,4.792,574,3.483,575,4.2,576,4.015,577,3.854,578,4.158,579,3.543,580,1.374,581,1.969,582,3.53,583,3.53,584,2.724,585,2.724,586,2.238,587,3.53]],["title/classes/AgentsDto.html",[0,0.2,459,3.59]],["body/classes/AgentsDto.html",[0,0.322,2,0.66,3,0.106,4,0.089,5,0.1,7,0.27,8,0.705,11,1.065,18,0.823,21,0.006,23,0.542,29,0.249,32,1.037,37,0.187,40,0.902,55,1.284,58,0.004,59,0.004,65,1.209,87,3.589,122,2.053,127,1.921,203,1.289,318,1.144,367,3.921,371,3.486,374,3.486,384,5.676,412,5.286,413,3.73,414,3.229,415,5.286,416,3.309,417,5.286,419,1.647,439,2.979,459,4.272,480,2.979,516,5.286,544,3.371,545,4.053,546,5.652,547,4.751,550,3.663,552,2.982,553,3.371,555,4.272,557,3.371,558,3.371,560,5.719,561,3.663,563,6.011,564,3.153,568,2.709,569,2.834,570,3.082,571,2.025,572,3.287,573,4.719,574,3.395,575,4.064,576,3.885,577,3.73,578,4.053,579,3.481,580,1.312,581,1.88,582,3.371,583,3.371,584,2.601,585,2.601,586,2.137,587,3.371,588,3.371,589,4.107,590,4.107,591,4.107,592,4.107,593,4.107,594,4.107,595,4.107,596,4.107,597,4.107,598,4.107,599,4.107]],["title/modules/AgentsModule.html",[166,1.527,600,3.265]],["body/modules/AgentsModule.html",[0,0.253,3,0.161,4,0.135,5,0.152,21,0.006,22,1.124,29,0.281,36,1.106,37,0.17,58,0.005,59,0.005,132,1.959,166,2.627,386,6.012,407,3.806,409,4.306,440,6.405,448,6.988,449,2.729,488,5.567,600,6.268,601,2.728,602,2.857,603,3,604,3,605,3,606,3.992,607,4.092,608,5.567,609,5.567,610,5.567,611,3.75,612,2.791,613,3,614,6.241,615,3.806,616,5.123,617,6.241,618,6.241,619,3.16,620,4.118,621,6.241,622,3.674,623,5.567]],["title/injectables/AgentsService.html",[136,1.229,386,3.018]],["body/injectables/AgentsService.html",[0,0.122,3,0.078,4,0.065,5,0.073,7,0.199,8,0.56,9,2.439,10,2.004,11,1.08,12,2.206,15,0.884,18,0.798,20,2.365,21,0.006,22,1.506,23,0.526,25,4.638,29,0.246,36,0.535,37,0.082,49,2.505,55,1.193,56,1.089,58,0.003,59,0.003,65,0.752,66,3.026,72,1.495,74,1.162,75,2.368,76,2.368,77,1.22,78,2.458,87,3.48,88,1.616,89,1.527,90,1.616,91,1.616,92,1.616,94,2.134,121,1.319,122,2.082,124,2.969,132,0.947,133,1.235,134,0.787,136,1.162,137,1.262,162,3.718,176,5.546,178,4.258,179,2.505,180,2.623,181,2.307,182,2.962,183,2.852,184,2.852,185,2.664,186,4.514,187,2.852,188,3.357,190,1.911,191,5.097,192,3.467,194,4.514,195,4.112,196,2.626,197,1.911,198,4.088,200,1.636,201,1.911,202,5.503,203,2.876,205,1.911,206,4.034,207,4.858,209,1.911,211,1.99,213,1.911,215,1.718,216,4.088,218,1.99,223,2.477,225,2.188,238,2.232,314,2.188,315,2.691,384,3.936,386,2.852,393,0.915,407,1.84,560,3.228,616,2.477,624,3.017,625,2.082,626,3.017,627,3.017,628,3.017,629,2.082,630,2.082,631,2.082,632,2.082,633,2.082,634,2.082,635,2.082,636,2.082,637,2.082,638,2.082,639,3.017,640,3.017,641,2.477,642,2.477,643,2.691,644,3.017,645,3.017,646,3.017,647,3.017,648,4.678,649,3.017,650,3.017,651,3.017,652,4.678,653,3.017,654,3.017,655,3.017,656,3.017,657,3.017]],["title/classes/AgentsUpdateDto.html",[0,0.2,480,3.59]],["body/classes/AgentsUpdateDto.html",[0,0.357,2,0.88,3,0.141,4,0.118,5,0.133,21,0.006,23,0.523,29,0.272,32,1.383,37,0.217,40,0.9,55,1.246,58,0.004,59,0.004,65,1.365,122,1.633,318,1.526,367,3.119,371,2.773,374,2.773,384,4.377,412,4.206,414,2.569,415,4.206,416,2.633,417,4.206,439,3.973,459,3.973,480,5.206,516,4.206,544,4.497,545,4.225,546,4.497,552,2.773,560,5.862,563,6.162,570,3.223,571,2.701,572,3.551,573,5.153,574,3.947,575,4.953,576,4.736,577,4.546,578,4.712,579,3.855,580,1.75,581,2.508,582,4.497,583,4.497,584,3.469,585,3.469,586,2.851,587,5.892]],["title/classes/AllExceptionFilter.html",[0,0.2,658,4.063]],["body/classes/AllExceptionFilter.html",[0,0.261,2,1.037,3,0.166,4,0.139,5,0.157,7,0.425,10,2.258,11,0.787,18,0.576,20,1.657,21,0.006,22,1.163,23,0.361,29,0.239,36,1.144,37,0.175,56,1.503,58,0.005,59,0.005,67,5.257,77,2.078,94,1.684,152,2.644,170,1.715,390,2.301,403,3.945,404,2.589,456,4.034,523,2.955,658,7.095,659,7.968,660,6.456,661,7.095,662,6.541,663,5.964,664,7.409,665,6.456,666,4.259,667,4.088,668,5.299,669,4.956,670,5.299,671,5.299,672,4.859,673,6.456,674,5.759,675,5.759,676,6.456,677,6.456,678,5.299]],["title/classes/ApiSession.html",[0,0.2,679,3.59]],["body/classes/ApiSession.html",[0,0.25,2,0.99,3,0.159,4,0.133,5,0.15,7,0.406,8,0.927,11,0.751,15,1.806,18,0.816,20,1.582,21,0.006,22,1.111,23,0.511,37,0.167,39,2.422,40,0.891,55,1.276,58,0.005,59,0.005,74,2.445,122,2.523,170,1.223,200,2.708,374,4.286,414,3.969,679,5.616,680,9.336,681,5.498,682,4.068,683,7.742,684,5.162,685,7.742,686,5.498,687,5.498,688,5.498,689,6.164,690,6.164]],["title/controllers/AppController.html",[447,1.764,691,4.063]],["body/controllers/AppController.html",[0,0.262,1,4.152,3,0.167,4,0.14,5,0.158,7,0.426,11,0.789,18,0.577,20,1.66,21,0.006,22,1.166,23,0.362,29,0.278,36,1.147,37,0.176,55,1.194,56,1.507,58,0.005,59,0.005,65,1.282,74,1.607,77,2.081,94,1.688,127,1.347,152,2.649,393,1.962,447,2.844,449,2.263,456,4.784,461,4.926,489,3.684,517,3.19,691,6.55,692,6.47,693,7.117,694,6.47,695,6.47,696,6.275,697,5.771,698,4.967,699,6.47,700,6.47,701,6.47]],["title/modules/AppModule.html",[166,1.527,702,3.8]],["body/modules/AppModule.html",[0,0.188,3,0.119,4,0.1,5,0.113,21,0.006,24,2.556,29,0.291,30,1.858,36,0.821,37,0.126,56,1.079,58,0.004,59,0.004,70,4.906,78,1.949,83,5.94,100,3.081,101,2.825,102,2.556,103,2.934,116,2.727,132,1.454,134,1.672,139,2.481,166,2.268,170,0.919,192,1.715,318,1.291,449,2.242,500,3.36,601,2.025,602,2.121,603,2.227,604,2.227,605,2.227,606,3.447,607,2.227,611,3.081,612,2.072,613,2.227,615,2.825,619,4.218,622,4.328,658,3.803,663,3.197,691,6.035,696,6.25,697,4.132,702,7.104,703,4.132,704,4.132,705,4.132,706,6.042,707,6.042,708,4.633,709,4.132,710,3.803,711,6.092,712,4.633,713,4.633,714,3.36,715,3.056,716,4.132,717,3.557,718,4.633,719,6.411,720,6.558,721,6.411,722,6.411,723,4.922,724,4.633,725,5.263,726,4.633,727,3.803,728,4.922,729,4.633,730,4.132,731,4.132,732,4.132,733,4.132,734,5.073,735,5.719,736,4.132,737,4.132,738,4.132,739,4.132,740,4.132,741,4.132,742,2.934,743,4.132,744,4.132,745,3.36,746,4.132,747,4.132,748,4.132,749,4.132,750,3.803,751,4.132,752,4.633,753,4.633,754,6.513,755,7.078]],["title/injectables/AppService.html",[136,1.229,696,3.59]],["body/injectables/AppService.html",[0,0.226,3,0.143,4,0.12,5,0.136,7,0.367,8,0.869,9,2.829,10,2.823,11,1.081,12,3.687,15,1.632,18,0.825,20,1.429,21,0.006,22,1.307,23,0.496,29,0.273,30,2.234,36,0.987,37,0.151,55,1.141,56,1.297,58,0.005,59,0.005,65,1.166,66,4.341,72,2.318,74,1.802,75,3.674,76,3.674,77,1.893,87,3.36,88,2.982,89,2.82,90,2.982,91,2.982,92,2.982,94,1.453,133,2.281,136,1.802,137,2.33,393,1.689,410,3.278,443,3.396,684,5.214,693,7.627,696,5.263,756,5.569,757,5.9,758,7.256,759,5.569,760,5.569,761,3.843,762,4.276,763,4.276,764,3.843,765,5.569,766,4.04,767,5.569,768,5.569,769,4.276,770,4.276,771,5.569,772,4.276]],["title/classes/AskTokenDto.html",[0,0.2,773,3.415]],["body/classes/AskTokenDto.html",[0,0.326,2,1.055,3,0.169,4,0.142,5,0.16,7,0.433,8,0.964,18,0.718,21,0.006,23,0.45,29,0.242,32,1.658,37,0.178,40,0.844,58,0.005,59,0.005,127,1.677,157,4.078,499,3.776,570,2.884,572,3.354,580,2.099,773,5.557,774,8.71,775,5.859,776,5.01,777,4.664,778,5.392,779,8.054,780,3.362,781,8.054,782,6.569,783,6.569,784,5.392,785,6.611,786,6.569,787,3.871]],["title/controllers/AuthController.html",[447,1.764,788,4.063]],["body/controllers/AuthController.html",[0,0.177,1,3.21,3,0.113,4,0.095,5,0.107,7,0.289,9,1.306,11,0.944,12,2.748,15,1.284,18,0.691,20,1.987,21,0.006,22,1.395,23,0.473,29,0.275,30,1.758,32,1.106,36,0.777,37,0.119,40,0.72,55,1.219,56,1.804,58,0.004,59,0.004,65,0.991,72,1.4,74,1.089,77,1.609,78,2.476,94,2.02,127,1.612,152,1.795,157,4.404,164,3.822,165,4.708,170,1.416,196,2.74,238,2.475,251,2.891,287,3.906,393,1.329,419,2.474,447,1.562,449,1.533,451,2.161,456,4.765,457,4.648,461,5.14,484,2.106,487,2.58,489,2.495,494,2.495,513,3.024,531,4.352,682,2.964,698,3.365,723,3.365,788,5.063,789,4.382,790,3.597,791,5.501,792,6.168,793,6.168,794,4.382,795,6.002,796,4.382,797,4.382,798,4.382,799,4.52,800,6.168,801,4.382,802,4.382,803,6.168,804,4.382,805,4.382,806,3.938,807,4.382,808,4.382,809,4.382,810,4.382,811,3.63,812,3.179,813,2.775,814,6.366,815,4.382,816,4.382,817,3.365,818,4.382,819,4.382,820,4.382,821,4.382,822,6.358,823,4.382,824,4.382,825,4.382,826,4.382,827,4.382,828,6.168,829,5.501,830,6.168,831,4.382,832,3.909,833,4.382,834,4.382,835,4.382,836,4.382,837,4.382]],["title/injectables/AuthGuard.html",[136,1.229,723,3.8]],["body/injectables/AuthGuard.html",[0,0.247,3,0.157,4,0.132,5,0.149,7,0.402,11,0.938,15,1.788,18,0.686,20,1.974,21,0.006,22,1.386,23,0.43,24,3.367,29,0.274,30,2.447,36,1.082,37,0.166,55,1.173,56,1.421,58,0.005,59,0.005,65,1.236,74,1.516,77,2.007,94,1.591,136,1.911,137,2.552,170,1.211,196,2.374,393,1.85,517,3.009,552,3.895,698,4.684,723,6.468,813,3.864,838,6.101,839,7.693,840,7.693,841,6.101,842,9.312,843,6.101,844,7.693,845,7.891,846,6.101,847,7.515,848,6.101,849,5.009,850,5.443,851,7.693,852,6.101,853,6.101,854,6.101,855,6.101]],["title/modules/AuthModule.html",[166,1.527,856,3.415]],["body/modules/AuthModule.html",[0,0.22,3,0.14,4,0.117,5,0.132,21,0.006,29,0.286,36,0.962,37,0.147,58,0.004,59,0.004,78,1.892,83,6.071,103,3.438,166,2.459,449,2.496,600,5.956,601,2.373,602,2.485,603,2.609,604,2.609,605,2.609,606,3.737,607,3.831,611,3.429,612,2.428,613,2.609,619,4.286,622,4.2,711,6.119,734,4.923,788,6.543,811,5.691,813,3.438,856,6.767,857,4.842,858,4.842,859,4.842,860,4.842,861,5.956,862,6.93,863,6.93,864,5.428,865,5.428,866,4.842,867,4.456,868,5.428,869,4.842,870,5.428,871,4.456,872,3.937,873,5.428,874,5.428,875,4.842,876,5.428,877,5.428,878,5.428,879,5.428]],["title/injectables/AuthService.html",[136,1.229,811,2.913]],["body/injectables/AuthService.html",[0,0.094,3,0.06,4,0.05,5,0.093,7,0.153,8,0.455,9,2.748,10,1.686,11,0.964,12,2.891,15,1.114,18,0.778,20,1.784,21,0.006,22,1.253,23,0.459,25,1.925,29,0.259,30,0.933,36,0.412,37,0.063,40,0.824,42,0.829,43,0.813,44,0.933,53,1.355,55,1.163,56,1.912,58,0.002,59,0.002,65,0.611,66,3.261,67,1.534,68,5.409,72,1.779,73,4.093,74,2.167,75,1.925,76,1.925,77,0.991,78,2.367,87,2.188,88,1.245,89,1.177,90,1.245,91,1.245,92,1.245,94,1.814,100,1.118,101,1.418,102,1.283,106,1.925,112,1.366,122,1.66,123,1.177,136,0.944,137,0.973,157,2.441,162,2.462,164,1.245,165,1.534,170,1.746,192,1.785,196,2.572,200,2.538,206,1.177,238,2.7,287,2.407,300,1.283,349,2.643,371,3.108,374,1.925,386,4.24,387,1.785,393,0.705,394,1.064,399,2.879,403,2.434,407,1.418,443,1.418,537,1.283,616,1.909,641,1.909,642,1.909,682,2.317,762,1.785,763,1.785,764,1.604,766,1.687,769,1.785,770,1.785,791,3.391,795,5.006,799,2.407,806,4.531,811,2.237,817,1.785,832,7.325,872,1.687,880,2.325,881,4.821,882,4.821,883,4.821,884,4.821,885,4.821,886,4.821,887,3.801,888,4.821,889,3.801,890,3.801,891,3.801,892,4.24,893,6.954,894,3.801,895,3.801,896,2.325,897,3.801,898,2.325,899,2.325,900,2.325,901,3.801,902,2.325,903,2.325,904,3.801,905,2.325,906,3.801,907,2.325,908,1.283,909,2.947,910,3.391,911,3.801,912,2.325,913,5.339,914,2.325,915,3.801,916,3.801,917,2.325,918,2.918,919,3.801,920,3.801,921,2.325,922,2.325,923,3.12,924,2.918,925,1.785,926,2.623,927,2.325,928,2.325,929,2.074,930,3.391,931,2.074,932,2.325,933,1.473,934,1.909,935,3.391,936,3.12,937,2.325,938,2.325,939,1.785,940,1.785,941,2.325,942,2.074,943,1.909,944,3.801,945,2.325,946,2.325,947,2.325,948,2.325,949,2.325,950,2.325,951,2.074,952,2.074,953,4.713,954,2.325,955,2.325,956,2.325,957,2.325,958,3.801,959,2.325,960,4.275,961,2.325,962,1.473,963,3.702,964,2.325,965,4.821,966,2.074,967,2.325,968,2.325,969,2.325,970,1.909,971,3.391,972,2.325,973,2.325,974,2.325,975,2.325,976,3.801,977,2.325,978,2.325,979,3.801,980,2.325,981,2.325,982,3.801,983,2.325,984,2.325,985,2.325,986,2.325,987,1.785,988,2.325,989,2.325,990,3.801,991,2.325,992,2.325,993,3.801,994,2.325,995,3.702,996,2.325,997,2.325,998,2.918,999,3.801,1000,5.568,1001,4.821,1002,2.325,1003,2.325,1004,2.325,1005,2.325,1006,2.325,1007,3.801,1008,2.325,1009,2.325,1010,2.325,1011,2.325,1012,2.325,1013,3.801,1014,3.801,1015,2.325,1016,2.325,1017,2.325,1018,2.325]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.334,1019,4.063]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.118,4,0.099,5,0.112,7,0.302,8,0.763,11,1.148,21,0.006,22,1.318,23,0.493,29,0.138,37,0.199,38,1.717,40,0.897,41,2.816,42,1.636,43,1.606,44,1.841,58,0.004,59,0.004,60,1.88,121,2.785,122,2.356,134,1.197,179,4.232,188,4.13,285,2.987,314,5.732,349,3.704,352,1.699,394,2.101,499,2.987,537,3.515,909,3.713,1019,5.229,1020,3.524,1021,3.768,1022,6.439,1023,7.05,1024,7.05,1025,7.05,1026,7.05,1027,7.05,1028,6.815,1029,8.014,1030,5.682,1031,6.487,1032,5.682,1033,6.597,1034,4.621,1035,8.137,1036,5.682,1037,5.682,1038,4.891,1039,5.229,1040,5.682,1041,5.682,1042,5.682,1043,4.891,1044,5.682,1045,4.891,1046,5.682,1047,5.682,1048,5.682,1049,5.682,1050,2.799,1051,3.329,1052,3.768,1053,3.768,1054,3.768,1055,4.621]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.334,1054,4.063]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.136,4,0.114,5,0.129,7,0.348,8,0.839,21,0.006,22,1.263,23,0.468,29,0.159,37,0.214,38,1.89,40,0.895,41,2.785,42,1.884,43,1.849,44,2.12,58,0.004,59,0.004,60,2.164,121,2.31,122,2.09,134,1.379,179,4.895,188,4.306,285,2.478,314,5.085,349,3.496,352,2.595,394,2.419,499,2.478,537,2.916,1019,4.338,1020,4.058,1021,4.338,1022,6.546,1023,4.714,1024,4.714,1025,4.714,1026,4.714,1027,4.714,1028,6.457,1029,7.473,1030,4.714,1031,5.754,1032,4.714,1033,7.213,1034,3.833,1035,7.992,1036,4.714,1037,4.714,1038,4.058,1039,4.338,1040,4.714,1041,4.714,1042,4.714,1043,4.058,1044,4.714,1045,4.058,1046,4.714,1047,4.714,1048,4.714,1049,4.714,1050,3.223,1051,3.833,1052,4.338,1053,4.338,1054,5.754,1055,6.076]],["title/interfaces/BackendResultInfoInterface.html",[38,1.334,1056,4.063]],["body/interfaces/BackendResultInfoInterface.html",[3,0.176,4,0.147,5,0.166,7,0.449,8,0.987,11,1.121,21,0.006,23,0.495,37,0.224,38,2.222,40,0.855,41,2.939,58,0.005,59,0.005,60,2.794,200,3.217,261,3.786,390,3.278,404,2.736,672,5.743,1056,7.551,1057,5.601,1058,5.238,1059,4.949,1060,4.708,1061,6.086]],["title/interfaces/BackendResultInterface.html",[38,1.334,1059,3.59]],["body/interfaces/BackendResultInterface.html",[3,0.173,4,0.145,5,0.164,7,0.442,8,0.977,11,1.115,21,0.006,23,0.511,37,0.222,38,2.2,40,0.851,41,2.924,58,0.005,59,0.005,60,2.75,200,2.349,261,2.871,390,2.393,404,3.669,672,5.717,1056,7.921,1057,5.513,1058,5.156,1059,5.921,1060,6.313,1061,8.162]],["title/classes/BackendsCommand.html",[0,0.2,1062,3.8]],["body/classes/BackendsCommand.html",[0,0.296,2,0.907,3,0.145,4,0.122,5,0.137,7,0.372,9,1.682,11,0.892,12,3.625,15,2.145,18,0.652,20,1.878,21,0.006,22,1.548,23,0.409,29,0.244,30,2.263,37,0.199,40,0.799,42,2.608,43,2.56,44,2.935,45,3.431,46,3.608,55,1.045,58,0.005,59,0.005,65,1.176,72,1.803,74,1.402,77,1.909,78,2.361,94,1.472,170,1.452,192,3.182,196,2.506,238,1.803,284,3.441,318,1.572,327,2.782,376,4.634,377,5.143,381,4.634,382,3.441,383,3.441,393,2.219,394,3.35,395,4.307,396,4.307,397,5.143,408,3.574,410,3.321,442,4.828,443,3.441,446,3.894,806,3.113,1062,5.618,1063,5.033,1064,5.643,1065,5.643,1066,4.78,1067,4.093,1068,5.033,1069,6.007,1070,4.632,1071,5.033,1072,5.033,1073,3.574]],["title/controllers/BackendsController.html",[447,1.764,1074,4.063]],["body/controllers/BackendsController.html",[0,0.147,3,0.094,4,0.079,5,0.089,7,0.24,9,1.085,10,1.886,11,0.925,15,1.066,18,0.633,20,1.823,21,0.006,22,1.28,23,0.397,25,1.842,29,0.267,32,0.919,36,0.645,37,0.099,39,2.791,40,0.872,41,2.053,53,2.703,55,1.182,56,1.654,58,0.003,59,0.003,72,1.723,73,3.781,74,1.339,77,1.406,78,2.535,94,1.853,100,1.749,101,2.219,102,2.008,106,1.842,108,4.181,116,2.142,127,1.479,133,1.49,134,0.949,152,1.49,170,1.631,196,2.192,200,2.876,225,3.911,238,2.053,318,1.014,390,1.922,399,1.706,403,1.591,404,2.163,447,1.297,449,1.273,451,1.794,456,4.688,457,4.911,461,5.069,484,1.749,487,2.142,494,2.072,513,2.511,667,3.415,698,2.794,829,3.246,847,3.246,849,2.987,908,2.008,924,4.14,926,3.721,1050,2.219,1066,3.781,1070,2.987,1073,2.304,1074,4.426,1075,3.639,1076,5.73,1077,6.424,1078,4.81,1079,5.73,1080,3.639,1081,5.831,1082,8.624,1083,6.424,1084,6.766,1085,5.392,1086,3.639,1087,3.639,1088,3.639,1089,3.639,1090,3.639,1091,5.392,1092,3.639,1093,3.639,1094,5.831,1095,5.392,1096,3.639,1097,5.392,1098,5.392,1099,3.639,1100,3.639,1101,3.246,1102,3.639,1103,3.639,1104,7.104,1105,5.392,1106,6.424,1107,3.639,1108,3.639,1109,5.392,1110,3.639,1111,4.14,1112,3.639,1113,3.639,1114,3.639,1115,6.424,1116,6.424,1117,3.639,1118,5.73,1119,3.639,1120,3.639,1121,3.639,1122,3.246,1123,4.81,1124,3.639,1125,4.14,1126,3.639,1127,3.639,1128,3.639,1129,3.639,1130,3.639,1131,3.639,1132,3.639,1133,3.639,1134,3.639,1135,3.639,1136,3.639,1137,5.392,1138,3.639,1139,3.639,1140,4.426,1141,3.639,1142,3.639,1143,3.557,1144,3.639]],["title/modules/BackendsModule.html",[166,1.527,1145,3.265]],["body/modules/BackendsModule.html",[0,0.245,3,0.156,4,0.131,5,0.147,21,0.006,29,0.283,36,1.073,37,0.164,58,0.005,59,0.005,103,3.833,166,2.59,449,2.677,601,2.646,602,2.771,603,2.909,604,2.909,605,2.909,606,3.936,607,4.034,611,3.679,612,2.707,613,2.909,619,3.875,711,5.876,1066,5.779,1074,6.89,1101,5.399,1145,6.506,1146,5.399,1147,5.399,1148,5.399,1149,5.399,1150,5.885,1151,6.412,1152,6.412,1153,6.052,1154,6.052,1155,6.052,1156,5.399,1157,5.399]],["title/injectables/BackendsService.html",[136,1.229,1066,2.913]],["body/injectables/BackendsService.html",[0,0.089,3,0.057,4,0.047,5,0.053,7,0.144,8,0.434,9,2.448,10,1.62,11,0.864,12,2.916,15,1.062,18,0.72,20,1.38,21,0.006,22,1.072,23,0.434,25,2.722,29,0.246,30,0.88,36,0.389,37,0.06,39,1.424,40,0.431,42,0.782,43,0.768,44,0.88,45,1.029,46,1.082,53,3.006,55,1.085,56,1.492,58,0.002,59,0.002,63,5.443,65,0.582,66,2.521,68,4.413,69,3.233,70,2.064,71,3.801,72,1.718,73,2.726,74,0.9,75,1.835,76,1.835,77,0.945,78,2.208,79,2.629,83,1.448,87,2.888,88,1.175,89,1.111,90,1.175,91,1.175,92,1.175,94,1.402,106,2.722,112,0.622,124,1.783,133,0.899,134,0.572,136,0.9,137,0.918,162,0.88,167,1.514,170,1.805,187,1.338,192,2.721,196,1.977,238,2.877,297,3.408,314,5.754,318,1.658,327,3.624,345,2.637,390,2.121,393,0.665,394,1.005,395,1.292,396,1.292,399,1.699,403,1.584,404,2.72,416,4.179,442,1.448,443,1.338,456,2.344,484,1.055,499,1.029,667,3.405,672,2.824,806,4.377,908,4.284,942,1.957,951,1.957,1066,2.133,1076,4.13,1078,4.13,1079,3.233,1111,4.128,1125,5.206,1140,2.975,1143,2.391,1158,1.957,1159,4.295,1160,4.679,1161,4.679,1162,2.194,1163,2.194,1164,5.072,1165,4.422,1166,6.216,1167,2.194,1168,2.194,1169,3.624,1170,2.194,1171,3.624,1172,2.194,1173,2.194,1174,2.194,1175,2.194,1176,2.194,1177,2.932,1178,2.629,1179,3.624,1180,1.957,1181,1.292,1182,1.957,1183,4.458,1184,2.194,1185,2.194,1186,1.801,1187,2.194,1188,3.773,1189,2.194,1190,2.194,1191,2.194,1192,1.957,1193,1.592,1194,2.194,1195,2.194,1196,3.195,1197,2.194,1198,3.233,1199,1.957,1200,2.194,1201,2.194,1202,1.514,1203,2.194,1204,3.624,1205,2.194,1206,2.194,1207,2.194,1208,2.194,1209,3.624,1210,2.194,1211,3.624,1212,5.376,1213,3.769,1214,5.376,1215,4.413,1216,6.781,1217,5.309,1218,2.194,1219,2.194,1220,4.63,1221,2.194,1222,4.63,1223,2.194,1224,2.194,1225,4.63,1226,4.63,1227,2.194,1228,6.781,1229,2.194,1230,1.801,1231,3.624,1232,3.233,1233,1.957,1234,2.194,1235,3.624,1236,2.194,1237,2.194,1238,3.624,1239,2.194,1240,3.624,1241,2.194,1242,2.194,1243,2.194,1244,2.194,1245,2.194,1246,3.624,1247,2.194,1248,3.547,1249,3.624,1250,4.107,1251,3.624,1252,3.624,1253,6.409,1254,2.194,1255,5.376,1256,2.194,1257,2.194,1258,3.624,1259,4.63,1260,2.194,1261,2.194,1262,2.194,1263,2.194,1264,3.624,1265,2.194,1266,1.957,1267,2.391,1268,1.957,1269,2.194,1270,2.194,1271,2.194,1272,2.194,1273,2.194,1274,3.624,1275,3.624,1276,2.194,1277,2.194,1278,2.194,1279,2.194,1280,2.194,1281,1.448,1282,2.194,1283,2.194,1284,1.338,1285,2.194,1286,2.194,1287,1.957,1288,4.63,1289,2.194,1290,1.957,1291,2.194,1292,3.624,1293,3.624,1294,4.63,1295,1.801,1296,2.194,1297,2.194,1298,3.624,1299,2.194,1300,2.194,1301,1.801,1302,2.194,1303,2.194,1304,2.194,1305,2.194,1306,2.194,1307,2.194]],["title/classes/BackendsSyncallCommand.html",[0,0.2,1069,4.063]],["body/classes/BackendsSyncallCommand.html",[0,0.295,2,0.9,3,0.144,4,0.121,5,0.136,7,0.369,9,1.67,11,0.888,12,3.619,15,2.134,18,0.649,20,1.869,21,0.006,22,1.544,23,0.407,29,0.243,30,2.246,37,0.198,40,0.797,42,2.595,43,2.547,44,2.921,45,3.415,46,3.591,55,1.041,58,0.005,59,0.005,65,1.17,72,1.79,74,1.391,77,1.899,78,2.355,94,1.461,170,1.445,192,3.172,196,2.497,238,1.79,284,3.415,318,1.561,327,2.762,376,4.612,377,5.125,381,4.612,382,3.415,383,3.415,393,2.208,394,3.334,395,4.287,396,4.287,397,5.125,408,3.547,410,3.297,442,4.804,443,3.415,446,3.864,806,3.09,1062,4.3,1063,4.996,1066,5.457,1067,4.062,1068,4.996,1069,6.643,1070,4.597,1071,4.996,1072,4.996,1073,3.547,1308,5.601,1309,5.601]],["title/classes/ChangePasswordDto.html",[0,0.2,1310,3.415]],["body/classes/ChangePasswordDto.html",[0,0.306,2,0.955,3,0.153,4,0.128,5,0.145,7,0.391,8,0.906,18,0.742,21,0.006,23,0.537,29,0.227,32,1.501,37,0.161,40,0.911,53,2.697,55,1.236,58,0.005,59,0.005,127,1.733,157,3.831,261,3.235,371,4.436,499,3.548,570,2.901,572,3.374,580,1.899,777,4.457,780,3.425,784,6.833,785,6.211,787,4.001,1310,5.221,1311,8.762,1312,5.302,1313,6.038,1314,8.324,1315,6.75,1316,5.944,1317,7.567,1318,6.75,1319,5.944,1320,5.944]],["title/interfaces/CipherData.html",[38,1.334,1321,3.8]],["body/interfaces/CipherData.html",[0,0.174,3,0.11,4,0.093,5,0.104,7,0.282,8,0.727,9,1.811,15,1.257,21,0.006,23,0.34,29,0.279,36,0.76,37,0.116,38,1.637,40,0.847,53,1.528,55,1.156,56,1.786,58,0.004,59,0.004,60,1.756,65,0.689,66,2.848,72,1.37,73,4.151,74,2.147,78,2.229,100,2.061,101,2.615,102,2.366,106,2.171,112,1.721,136,1.509,170,1.807,196,2.367,222,3.292,238,2.87,327,2.115,393,1.3,399,2.011,403,1.875,404,1.72,515,4.515,682,2.061,764,2.959,773,4.191,776,4.467,777,4.502,806,3.351,918,3.292,925,4.663,926,4.191,963,4.663,995,4.663,998,3.292,1066,3.575,1067,3.111,1073,2.716,1159,3.847,1164,2.959,1177,2.716,1183,2.524,1188,2.524,1193,3.111,1310,4.191,1313,3.111,1321,4.663,1322,3.52,1323,3.52,1324,3.52,1325,3.52,1326,3.292,1327,3.292,1328,3.292,1329,4.663,1330,4.191,1331,3.292,1332,3.52,1333,5.415,1334,5.889,1335,6.297,1336,4.663,1337,2.829,1338,3.52,1339,3.292,1340,3.52,1341,3.292,1342,3.52,1343,3.52,1344,3.52,1345,3.52,1346,3.52,1347,3.52,1348,5.789,1349,5.415,1350,3.52,1351,3.52,1352,3.52,1353,3.52,1354,4.663,1355,3.52,1356,3.52,1357,3.52,1358,3.52,1359,6.297,1360,3.52,1361,3.52,1362,3.292,1363,5.789,1364,3.52,1365,3.52,1366,3.52,1367,3.52,1368,3.52,1369,3.52,1370,3.52,1371,3.52,1372,3.52,1373,3.52,1374,3.52,1375,3.52,1376,3.52,1377,3.52,1378,3.52,1379,3.52,1380,3.52,1381,3.52,1382,3.52,1383,3.52,1384,4.986,1385,3.52,1386,3.52,1387,3.52]],["title/modules/CliModule.html",[166,1.527,1388,3.8]],["body/modules/CliModule.html",[0,0.199,3,0.127,4,0.106,5,0.12,21,0.006,29,0.291,36,0.872,37,0.134,56,1.146,58,0.004,59,0.004,70,4.997,78,2.012,83,6.026,100,2.365,101,3.001,102,2.715,103,3.117,116,2.897,132,1.545,134,1.743,166,2.341,170,0.976,318,1.371,360,4.847,409,3.396,600,5.79,601,2.151,602,2.253,603,2.365,604,2.365,605,2.365,606,3.133,607,2.365,611,3.212,612,2.201,613,2.365,615,3.001,619,4.308,622,4.466,623,4.39,663,3.396,709,4.39,710,4.04,711,6.249,714,3.569,715,3.247,716,4.39,717,3.778,730,4.39,731,4.39,732,4.39,733,4.39,734,5.235,735,5.961,736,4.39,737,4.39,738,4.39,739,4.39,740,4.39,741,4.39,742,3.117,743,4.39,744,4.39,745,3.569,746,4.39,747,4.39,748,4.39,749,4.39,750,4.04,751,4.39,856,6.056,861,5.79,869,4.39,1062,3.778,1145,5.79,1388,7.311,1389,4.39,1390,4.921,1391,4.921,1392,4.921,1393,3.569,1394,4.847,1395,4.921,1396,4.921,1397,4.921,1398,4.39,1399,4.921,1400,4.921,1401,4.921]],["title/classes/ConcernedToPart.html",[0,0.2,1402,4.063]],["body/classes/ConcernedToPart.html",[0,0.247,2,0.978,3,0.157,4,0.131,5,0.148,7,0.401,8,0.92,11,0.937,18,0.751,21,0.006,22,1.516,23,0.52,29,0.231,37,0.209,40,0.889,55,1.241,58,0.005,59,0.005,65,0.978,112,1.725,121,3.358,122,1.815,124,3.241,127,1.752,128,4.15,131,4.249,132,1.912,133,2.494,134,1.588,167,5.808,170,1.208,203,1.912,318,2.463,346,3.473,352,2.845,353,3.002,499,3.947,1402,6.307,1403,7.885,1404,5.432,1405,6.089,1406,6.089,1407,6.089,1408,4.998,1409,5.432]],["title/classes/ConcernedToPartDTO.html",[0,0.2,1410,3.59]],["body/classes/ConcernedToPartDTO.html",[0,0.319,2,1.02,3,0.163,4,0.137,5,0.155,7,0.418,8,0.944,11,0.961,18,0.765,21,0.006,22,1.545,23,0.479,29,0.257,32,1.602,37,0.172,40,0.834,55,1.25,58,0.005,59,0.005,124,3.036,127,1.786,133,2.599,134,1.655,167,5.919,499,4.022,547,4.379,555,4.603,570,2.971,572,3.303,573,4.49,578,4.641,579,3.447,580,2.028,1410,5.719,1411,8.972,1412,6.347,1413,6.347,1414,5.21,1415,6.347,1416,6.347]],["title/interfaces/ConfigInstance.html",[38,1.334,1417,4.063]],["body/interfaces/ConfigInstance.html",[3,0.161,4,0.097,5,0.109,7,0.295,8,0.75,21,0.006,23,0.544,29,0.256,32,1.131,37,0.196,38,1.688,40,0.83,42,1.597,43,1.567,44,1.797,45,2.101,46,2.209,47,3.092,58,0.004,59,0.004,60,1.835,102,4.705,112,1.27,132,1.407,134,2.147,157,2.268,162,1.797,192,3.44,287,2.837,318,2.012,345,2.551,349,1.797,419,3.759,552,2.268,714,4.543,715,4.133,717,4.809,742,4.953,757,3.092,799,5.4,813,2.837,867,5.142,871,5.142,872,3.25,933,3.967,943,3.678,962,3.967,987,3.44,1034,3.25,1417,5.929,1418,3.997,1419,5.679,1420,7,1421,5.969,1422,7,1423,6.976,1424,5.588,1425,4.322,1426,5.142,1427,5.142,1428,4.543,1429,5.588,1430,3.997,1431,3.997,1432,3.997,1433,3.997,1434,3.678,1435,3.997,1436,7.808,1437,3.997,1438,3.997,1439,3.997,1440,3.997,1441,3.997,1442,3.997,1443,3.997,1444,3.997,1445,3.997,1446,3.997,1447,3.997,1448,3.997,1449,3.997,1450,3.997,1451,3.997,1452,3.997,1453,3.997,1454,3.997,1455,3.997,1456,3.997,1457,3.997,1458,3.997,1459,3.997]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.2,1460,3.8]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.366,2,0.953,3,0.153,4,0.128,5,0.144,7,0.391,8,0.905,18,0.781,21,0.006,22,1.577,23,0.541,29,0.25,37,0.226,40,0.874,58,0.005,59,0.005,127,1.823,318,2.106,342,4.047,343,3.177,346,3.268,552,3.826,572,3.662,574,4.101,576,5.487,580,1.896,581,2.716,586,3.933,1460,6.722,1461,4.87,1462,7.188,1463,5.933,1464,5.933,1465,5.933,1466,6.385,1467,5.933,1468,5.933,1469,6.204,1470,3.273,1471,4.87,1472,4.87,1473,6.385,1474,4.094]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.2,1473,3.8]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.368,2,0.972,3,0.156,4,0.131,5,0.147,7,0.399,8,0.916,18,0.748,21,0.006,22,1.589,23,0.528,29,0.252,37,0.228,40,0.888,58,0.005,59,0.005,127,1.747,318,2.133,342,4.723,343,3.241,346,2.378,552,3.064,572,3.677,574,4.139,576,5.049,580,1.934,581,2.771,586,3.983,1460,6.444,1461,4.968,1462,7.24,1466,5.876,1469,6.89,1470,3.339,1471,4.968,1472,4.968,1473,6.772,1474,4.176,1475,6.052,1476,6.052,1477,6.052]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.2,1474,3.415]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.37,2,0.988,3,0.158,4,0.133,5,0.15,7,0.405,8,0.926,18,0.689,21,0.006,22,1.393,23,0.522,29,0.254,37,0.23,40,0.85,58,0.005,59,0.005,127,1.61,318,2.155,342,4.751,343,4.529,346,2.417,552,3.114,572,3.593,574,4.17,576,5.102,580,1.966,581,2.816,586,4.024,1460,6.812,1461,5.05,1462,6.347,1466,5.937,1469,6.347,1470,3.394,1471,5.05,1472,5.05,1473,6.812,1474,5.335,1478,6.347,1479,6.347,1480,6.151,1481,6.151]],["title/classes/ConsoleSession.html",[0,0.2,936,4.063]],["body/classes/ConsoleSession.html",[0,0.258,2,1.024,3,0.164,4,0.138,5,0.155,7,0.42,8,0.946,15,2.519,18,0.801,21,0.006,23,0.48,37,0.173,40,0.875,55,1.266,58,0.005,59,0.005,74,2.415,122,2.562,349,3.447,374,4.351,414,4.03,681,5.685,686,5.685,687,7.052,688,5.685,909,3.843,936,6.489,1202,6.2,1482,9.238,1483,7.052]],["title/controllers/CoreController.html",[447,1.764,1484,4.063]],["body/controllers/CoreController.html",[0,0.292,3,0.185,4,0.155,5,0.175,21,0.006,29,0.272,32,1.817,36,1.276,37,0.196,55,0.926,58,0.005,59,0.005,74,1.788,447,2.566,449,2.518,451,3.55,494,4.099,513,4.967,517,3.55,518,4.099,1484,6.986,1485,7.199,1486,6.421,1487,6.173,1488,6.421,1489,7.199]],["title/modules/CoreModule.html",[166,1.527,706,3.59]],["body/modules/CoreModule.html",[0,0.214,3,0.136,4,0.114,5,0.129,18,0.471,21,0.006,29,0.287,30,2.12,36,0.937,37,0.144,55,0.68,56,1.231,58,0.004,59,0.004,77,1.379,94,1.379,166,2.585,449,2.452,515,4.126,600,5.911,601,2.31,602,2.419,603,2.54,604,2.54,605,2.54,606,3.688,607,2.54,611,3.369,612,2.363,613,2.54,619,3.982,706,7.199,856,6.182,861,5.911,875,4.714,933,3.347,1145,5.911,1151,6.182,1152,6.182,1156,4.714,1157,4.714,1484,6.457,1486,4.714,1487,6.499,1488,4.714,1490,4.714,1491,4.714,1492,4.714,1493,6.499,1494,5.285,1495,7.016,1496,5.285,1497,7.016,1498,4.714,1499,5.285,1500,5.285,1501,5.285,1502,5.285,1503,5.285,1504,4.714,1505,4.714,1506,4.714]],["title/injectables/CoreService.html",[136,1.229,1487,3.59]],["body/injectables/CoreService.html",[0,0.299,3,0.19,4,0.16,5,0.18,15,2.685,18,0.659,21,0.006,29,0.222,36,1.311,37,0.201,55,1.112,58,0.005,59,0.005,136,2.147,137,3.093,1487,6.271,1507,7.394,1508,7.394]],["title/classes/CustomFieldsDto.html",[0,0.2,545,2.913]],["body/classes/CustomFieldsDto.html",[0,0.336,2,1.106,3,0.177,4,0.149,5,0.168,7,0.453,8,0.992,11,1.01,18,0.614,21,0.006,23,0.463,29,0.249,37,0.187,39,2.705,40,0.64,55,1.144,58,0.005,59,0.005,127,1.433,354,4.196,355,3.583,356,3.583,413,5.631,419,2.761,545,4.878,568,4.543,574,4.086,579,3.623,580,2.2,1509,8.287,1510,6.885,1511,6.885,1512,4.313]],["title/classes/DataPart.html",[0,0.2,1513,4.063]],["body/classes/DataPart.html",[0,0.257,2,1.02,3,0.163,4,0.137,5,0.155,7,0.418,8,0.944,11,0.961,18,0.703,21,0.006,23,0.533,29,0.237,37,0.233,40,0.896,55,1.21,58,0.005,59,0.005,65,1.02,112,1.798,121,3.447,122,1.892,127,1.641,128,3.888,131,4.123,132,1.993,134,1.655,170,1.564,318,2.197,346,3.098,349,3.44,352,2.919,353,3.129,390,3.057,1513,6.472,1514,5.661,1515,6.347,1516,7.651,1517,6.347,1518,5.21,1519,5.661]],["title/injectables/DtoValidationPipe.html",[136,1.229,728,3.8]],["body/injectables/DtoValidationPipe.html",[0,0.187,3,0.119,4,0.1,5,0.112,7,0.304,9,1.377,10,1.615,11,0.895,15,1.353,18,0.654,20,1.884,21,0.006,22,1.322,23,0.41,29,0.22,30,1.852,36,0.819,37,0.125,38,1.245,39,1.815,40,0.737,53,1.646,55,1.158,56,1.845,58,0.004,59,0.004,65,1.028,74,1.147,77,1.669,78,1.946,94,1.669,123,4.012,136,1.589,137,1.932,139,4.727,152,1.891,170,1.572,181,2.277,196,1.974,238,1.476,253,3.546,318,1.783,344,4.555,349,1.852,390,2.28,393,1.401,404,2.944,451,3.907,484,2.22,523,2.114,537,3.53,728,5.635,734,3.187,909,3.282,939,3.546,940,3.546,1177,4.052,1267,3.047,1520,7.068,1521,3.791,1522,6.547,1523,6.025,1524,7.067,1525,4.618,1526,4.618,1527,5.252,1528,6.505,1529,4.618,1530,5.707,1531,6.388,1532,4.618,1533,5.252,1534,4.12,1535,4.12,1536,4.12,1537,4.12,1538,4.12,1539,4.12,1540,4.64,1541,4.12,1542,4.414,1543,3.791,1544,2.114,1545,2.403,1546,4.12,1547,3.546,1548,4.12,1549,4.12,1550,4.12,1551,3.791,1552,4.12,1553,4.12,1554,4.12,1555,4.12,1556,4.12,1557,4.12,1558,5.707,1559,4.12,1560,4.12,1561,4.12,1562,4.12,1563,4.12,1564,4.12,1565,5.707,1566,4.12,1567,4.12,1568,4.12]],["title/classes/ErrorSchemaDto.html",[0,0.2,1569,4.415]],["body/classes/ErrorSchemaDto.html",[0,0.245,2,0.972,3,0.156,4,0.131,5,0.147,7,0.399,8,0.916,11,1.075,18,0.786,21,0.006,23,0.519,29,0.23,32,1.528,36,1.073,37,0.164,39,3.007,40,0.846,42,2.157,43,2.117,44,2.427,55,1.263,58,0.005,59,0.005,127,1.836,203,1.9,344,4.25,390,2.991,394,2.771,419,3.069,484,4.034,523,3.842,570,3.161,1267,3.993,1569,6.827,1570,9.098,1571,6.052,1572,8.394,1573,6.052,1574,6.052,1575,4.968,1576,6.052,1577,6.052,1578,2.771]],["title/classes/ExecuteJobDto.html",[0,0.2,1081,4.063]],["body/classes/ExecuteJobDto.html",[0,0.31,2,0.97,3,0.156,4,0.13,5,0.147,7,0.398,8,0.915,18,0.748,21,0.006,23,0.527,29,0.252,32,1.525,37,0.164,40,0.864,55,1.239,58,0.005,59,0.005,127,1.746,157,3.87,261,3.768,345,4.352,499,4.263,570,2.918,573,4.352,578,4.499,579,3.341,580,1.93,780,2.83,785,6.275,787,2.903,908,4.627,1081,6.275,1164,5.786,1192,5.388,1193,4.381,1248,5.533,1470,3.333,1512,3.978,1579,8.814,1580,6.04,1581,6.04,1582,6.04,1583,6.04,1584,6.04,1585,6.04,1586,6.04,1587,6.04]],["title/interfaces/ExecuteJobOptions.html",[38,1.334,1166,4.063]],["body/interfaces/ExecuteJobOptions.html",[3,0.163,4,0.137,5,0.155,7,0.418,8,0.944,11,1.204,21,0.006,23,0.526,29,0.237,37,0.172,38,1.711,40,0.798,41,2.741,58,0.005,59,0.005,60,2.599,78,2.379,97,4.379,124,3.303,133,2.599,134,1.655,552,4.761,1084,8.003,1123,8.003,1125,7.083,1166,6.472,1250,6.191,1284,5.471,1588,6.347,1589,6.347,1590,8.972]],["title/classes/Form.html",[0,0.2,1591,3.415]],["body/classes/Form.html",[0,0.213,2,0.843,3,0.135,4,0.113,5,0.128,7,0.346,8,0.835,18,0.826,21,0.006,23,0.546,29,0.261,37,0.19,39,2.062,40,0.888,41,2.229,58,0.004,59,0.004,65,0.843,112,1.487,119,3.973,127,1.929,128,3.865,131,4.674,132,1.648,170,1.041,203,2.191,261,2.983,349,3.35,352,2.583,353,2.588,354,3.533,355,2.731,356,2.731,419,2.105,434,3.463,438,3.324,780,2.902,1045,4.029,1578,3.194,1591,4.815,1592,4.681,1593,5.685,1594,5.685,1595,4.463,1596,4.964,1597,4.78,1598,3.767,1599,5.248,1600,5.248,1601,5.248,1602,7.452,1603,6.434,1604,5.248,1605,5.248,1606,5.248,1607,5.248,1608,4.952,1609,5.248,1610,3.2,1611,4.308,1612,5.248,1613,5.248,1614,4.681,1615,4.308,1616,4.681]],["title/controllers/FormController.html",[447,1.764,1617,4.063]],["body/controllers/FormController.html",[0,0.142,1,2.725,3,0.09,4,0.076,5,0.085,7,0.23,9,1.043,11,0.91,18,0.665,20,1.914,21,0.006,22,1.504,23,0.505,29,0.276,32,0.883,36,0.62,37,0.095,40,0.584,55,1.183,56,1.737,58,0.003,59,0.003,65,0.841,74,1.301,77,1.366,78,2.438,94,1.946,122,2.664,124,3.287,127,1.553,133,1.433,134,0.913,152,1.433,170,1.48,180,2.397,181,1.725,186,3.463,196,1.616,200,3.04,206,1.771,215,1.992,238,2.384,285,3.498,335,2.216,393,1.061,447,1.247,449,1.224,451,1.725,452,4.331,453,4.021,454,4.141,455,2.686,456,4.69,457,4.949,461,5.34,462,2.538,463,3.798,464,5.679,465,5.679,466,4.552,469,2.686,470,4.021,473,2.308,474,5.679,475,5.054,476,5.679,477,5.054,478,2.538,481,4.299,484,1.682,485,2.216,486,2.872,487,3.083,489,1.992,490,2.686,491,5.411,492,2.872,493,5.054,494,1.992,495,2.538,496,3.798,497,4.597,501,2.414,502,2.538,503,2.538,504,2.538,505,2.414,506,2.538,507,2.686,508,2.414,509,2.538,510,3.613,511,2.538,512,2.538,515,2.059,517,1.725,518,1.992,520,2.872,521,2.686,522,2.538,523,3.415,524,2.414,529,3.613,530,2.538,531,4.249,532,4.101,533,4.552,535,2.538,536,2.538,539,2.872,541,2.686,667,4.413,780,1.295,1591,2.414,1595,1.992,1597,2.133,1598,1.682,1617,4.299,1618,3.499,1619,6.19,1620,3.499,1621,3.499,1622,3.499,1623,3.499,1624,3.499,1625,3.499,1626,3.499,1627,3.499,1628,5.054,1629,3.499,1630,3.499,1631,3.499,1632,3.798,1633,3.121,1634,4.671,1635,3.499,1636,3.499,1637,3.499,1638,3.499,1639,5.237,1640,3.499,1641,3.499,1642,3.499,1643,3.499,1644,3.499]],["title/classes/FormCreateDto.html",[0,0.2,1645,3.8]],["body/classes/FormCreateDto.html",[0,0.34,2,0.763,3,0.122,4,0.103,5,0.116,7,0.313,8,0.781,11,1.059,18,0.819,21,0.006,23,0.544,29,0.267,32,1.199,37,0.202,39,2.563,40,0.88,55,0.839,58,0.004,59,0.004,65,1.288,87,1.866,112,2.46,123,3.302,127,1.913,318,1.818,346,2.927,354,3.302,355,2.472,356,2.472,419,2.616,570,3.043,571,2.342,572,3.237,574,3.216,577,3.008,579,3.505,580,1.518,581,2.174,586,2.472,780,2.758,1470,2.621,1478,3.899,1479,3.899,1512,3.877,1578,2.174,1593,5.403,1594,5.403,1595,4.242,1596,4.718,1597,4.543,1598,3.581,1608,4.242,1610,2.896,1619,3.445,1628,3.445,1645,5.719,1646,3.899,1647,4.89,1648,5.818,1649,4.75,1650,3.899,1651,4.75,1652,4.75,1653,4.75,1654,4.718,1655,4.75,1656,4.75,1657,4.75,1658,4.237,1659,5.719,1660,4.75,1661,4.303,1662,3.445,1663,3.647,1664,3.134,1665,5.817,1666,3.899,1667,3.899,1668,3.899]],["title/classes/FormDto.html",[0,0.2,1619,3.59]],["body/classes/FormDto.html",[0,0.337,2,0.744,3,0.119,4,0.1,5,0.113,7,0.305,8,0.767,11,1.05,18,0.815,21,0.006,23,0.542,29,0.265,32,1.17,37,0.2,39,2.519,40,0.877,55,0.825,58,0.004,59,0.004,65,1.275,87,3.592,112,2.441,123,3.246,127,1.903,318,1.786,346,2.889,354,3.246,355,2.411,356,2.411,419,2.571,570,3.027,571,2.284,572,3.208,574,3.161,577,2.934,579,3.468,580,1.48,581,2.121,586,2.411,780,2.722,1470,2.556,1478,3.803,1479,3.803,1512,3.826,1578,2.121,1593,5.333,1594,5.333,1595,4.186,1596,4.656,1597,4.483,1598,3.534,1608,4.186,1610,2.825,1619,4.65,1628,3.36,1645,7.177,1646,3.803,1647,4.483,1648,5.719,1650,3.803,1654,4.656,1658,4.132,1659,5.645,1661,4.23,1662,3.36,1663,3.557,1664,3.056,1665,5.755,1666,3.803,1667,3.803,1668,3.803,1669,4.633,1670,4.633,1671,4.633,1672,4.633,1673,4.633,1674,4.633,1675,4.633,1676,4.633]],["title/classes/FormFieldDto.html",[0,0.2,1677,4.063]],["body/classes/FormFieldDto.html",[0,0.279,2,0.829,3,0.133,4,0.111,5,0.126,7,0.34,8,0.826,18,0.842,21,0.006,23,0.545,29,0.233,32,1.302,37,0.14,40,0.886,41,2.651,58,0.004,59,0.004,127,1.966,188,3.735,354,4.505,355,2.684,356,2.684,419,3.468,570,3.154,572,3.195,574,4.387,580,1.648,909,3.475,1654,4.921,1677,5.662,1678,5.158,1679,5.362,1680,5.362,1681,5.362,1682,5.362,1683,5.362,1684,5.362,1685,5.362,1686,4.739,1687,5.362,1688,8.647,1689,5.158,1690,5.158,1691,5.158,1692,5.158,1693,5.158,1694,6.897,1695,5.158,1696,5.158,1697,5.158,1698,5.158,1699,5.158,1700,5.362,1701,6.272]],["title/classes/FormFieldPart.html",[0,0.2,1702,4.063]],["body/classes/FormFieldPart.html",[0,0.192,2,0.763,3,0.122,4,0.103,5,0.116,7,0.313,8,0.781,18,0.829,21,0.006,23,0.549,29,0.196,37,0.177,40,0.873,41,2.562,58,0.004,59,0.004,127,1.936,128,4.144,131,4.655,132,1.491,170,0.942,188,3.581,203,2.639,261,4.199,349,3.729,352,2.415,353,2.342,354,4.396,355,2.472,356,2.472,419,3.371,909,3.331,1679,5.14,1680,5.14,1681,5.14,1682,5.14,1683,5.14,1684,5.14,1685,5.14,1686,4.543,1687,5.14,1701,6.096,1702,5.354,1703,4.237,1704,4.75,1705,4.75,1706,4.75,1707,4.75,1708,4.75,1709,4.75,1710,4.75,1711,4.75,1712,4.75,1713,4.75,1714,4.237,1715,4.237]],["title/modules/FormModule.html",[166,1.527,1716,3.8]],["body/modules/FormModule.html",[0,0.264,3,0.168,4,0.141,5,0.159,21,0.006,22,1.173,29,0.279,36,1.154,37,0.177,58,0.005,59,0.005,132,2.044,166,2.677,449,2.802,601,2.846,602,2.981,603,3.13,604,3.13,605,3.13,606,4.068,607,3.13,611,3.85,612,2.912,613,3.13,615,3.971,619,3.297,620,4.296,622,3.833,1591,4.493,1615,6.576,1617,7.123,1632,6.864,1633,5.809,1716,7.265,1717,5.809,1718,5.809,1719,6.512,1720,5.809,1721,6.512,1722,6.512]],["title/classes/FormSectionDto.html",[0,0.2,1665,3.59]],["body/classes/FormSectionDto.html",[0,0.318,2,0.848,3,0.136,4,0.114,5,0.128,7,0.347,8,0.838,11,1.092,18,0.798,21,0.006,23,0.548,29,0.261,32,1.332,37,0.143,40,0.863,58,0.004,59,0.004,112,2.537,127,1.864,318,1.951,346,3.289,419,2.808,570,3.025,572,3.224,574,3.875,579,3.659,580,1.686,581,2.415,586,3.644,780,2.91,1470,2.911,1512,4.09,1595,4.475,1608,4.475,1610,3.217,1650,5.748,1654,3.341,1665,6.495,1677,7.152,1686,4.792,1723,5.276,1724,4.977,1725,6.451,1726,5.276,1727,7.002,1728,5.276,1729,5.276,1730,5.276,1731,5.276,1732,5.276,1733,5.276,1734,5.276,1735,5.276,1736,5.276,1737,5.276,1738,4.05,1739,4.05]],["title/classes/FormSectionPart.html",[0,0.2,1611,4.063]],["body/classes/FormSectionPart.html",[0,0.226,2,0.898,3,0.144,4,0.121,5,0.136,7,0.368,8,0.871,11,1.109,18,0.811,21,0.006,23,0.55,29,0.243,37,0.198,40,0.903,41,2.324,58,0.005,59,0.005,112,1.584,122,1.666,127,1.894,128,4.487,131,4.454,132,1.755,170,1.109,203,1.755,349,2.917,352,2.693,353,2.756,780,2.993,1578,3.329,1595,4.603,1602,8.38,1603,4.589,1608,5.055,1610,3.409,1611,5.971,1614,4.986,1686,4.93,1702,4.589,1724,5.12,1725,6.637,1740,4.986,1741,5.59,1742,5.59,1743,5.59,1744,5.59,1745,5.59,1746,5.59,1747,5.59,1748,4.986]],["title/injectables/FormService.html",[136,1.229,1632,3.59]],["body/injectables/FormService.html",[0,0.133,3,0.085,4,0.071,5,0.08,7,0.217,8,0.598,9,2.55,10,2.114,11,1.099,12,3.348,15,1.464,18,0.811,20,2.397,21,0.006,22,1.541,23,0.532,25,4.703,29,0.23,30,1.319,36,0.583,37,0.089,49,2.676,55,1.195,58,0.003,59,0.003,65,0.803,66,3.166,72,1.597,74,1.501,75,2.53,76,2.53,77,1.303,78,2.463,87,3.541,88,1.761,89,1.665,90,1.761,91,1.761,92,1.761,94,2.188,122,1.802,124,2.945,132,1.032,134,0.858,136,1.241,137,1.375,162,3.766,176,5.65,178,4.455,179,2.676,180,2.288,181,2.464,182,3.165,183,3.047,184,3.047,185,2.845,186,4.22,187,3.047,188,3.49,190,2.082,191,5.216,192,3.439,194,4.629,195,4.275,196,2.588,197,2.082,198,3.165,200,1.15,201,2.082,202,5.496,203,2.917,205,2.082,206,4.147,207,4.994,209,2.082,211,2.169,213,2.082,215,1.872,216,4.276,218,2.169,393,0.997,625,2.269,629,2.269,630,2.269,631,2.269,632,2.269,633,2.269,634,2.269,635,2.269,636,2.269,637,2.269,638,2.269,1591,2.269,1632,3.625,1720,2.933,1749,3.288,1750,3.288,1751,2.524,1752,2.385,1753,3.288]],["title/classes/FormUpdateDto.html",[0,0.2,1628,3.59]],["body/classes/FormUpdateDto.html",[0,0.363,2,0.926,3,0.148,4,0.124,5,0.14,21,0.006,23,0.484,29,0.28,32,1.455,37,0.223,39,2.914,40,0.868,58,0.005,59,0.005,65,1.392,112,2.324,318,2.067,346,3.223,354,3.755,355,2.998,356,2.998,570,3.163,571,2.841,572,3.451,574,3.657,577,3.649,579,3.786,580,1.841,581,2.638,586,2.998,780,2.133,1470,3.179,1512,4.269,1578,2.638,1593,4.179,1594,4.179,1595,3.281,1596,3.649,1597,3.514,1598,2.769,1608,4.223,1610,3.514,1619,4.179,1628,5.38,1645,5.694,1646,4.73,1647,4.523,1659,5.694,1664,3.801,1665,6.282,1666,4.73,1667,4.73,1668,6.089]],["title/classes/Identities.html",[0,0.2,1183,2.913]],["body/classes/Identities.html",[0,0.215,2,0.854,3,0.137,4,0.115,5,0.129,7,0.35,8,0.842,18,0.779,21,0.006,23,0.535,29,0.275,37,0.214,40,0.781,41,2.682,58,0.004,59,0.004,65,0.854,112,2.235,119,4.006,121,3.075,127,1.818,128,4.306,131,4.313,132,1.668,134,1.386,170,1.054,203,2.476,318,1.96,340,5.442,346,3.298,349,3.599,352,2.605,353,2.62,357,4.67,358,6.474,416,3.791,434,3.505,438,3.365,1181,5.14,1183,4.642,1578,3.843,1754,4.361,1755,4.642,1756,7.887,1757,4.995,1758,5.313,1759,5.313,1760,6.474,1761,5.313,1762,5.761,1763,5.313,1764,5.313,1765,3.854,1766,5.313,1767,3.666,1768,5.313,1769,4.739,1770,5.313,1771,4.361,1772,4.079,1773,4.739]],["title/controllers/IdentitiesController.html",[447,1.764,1774,3.8]],["body/controllers/IdentitiesController.html",[0,0.085,1,1.823,3,0.054,4,0.045,5,0.051,7,0.139,9,1.341,11,0.882,15,0.617,18,0.645,20,1.857,21,0.006,22,1.439,23,0.49,29,0.263,32,0.532,36,0.373,37,0.057,39,1.377,40,0.766,41,0.673,53,1.868,55,1.168,56,1.891,58,0.002,59,0.002,65,0.563,74,1.117,77,0.914,78,2.408,94,1.888,106,2.278,112,0.993,121,0.921,122,2.489,124,3.075,127,1.507,133,0.863,134,0.549,152,0.863,162,0.845,164,1.128,170,1.555,179,2.409,180,2.059,181,1.039,186,2.482,187,4.06,195,2.063,196,2.634,200,3.041,206,1.067,215,1.199,225,1.528,238,2.385,285,2.109,300,1.933,318,0.976,335,1.334,344,3.53,348,1.334,349,0.845,354,2.654,355,1.096,356,1.096,357,1.096,390,2.661,393,0.639,399,1.643,403,1.532,404,1.804,416,2.797,419,2.103,447,0.751,449,0.737,451,1.039,452,3.617,453,3.454,454,2.968,455,1.617,456,4.619,457,5.09,461,5.276,462,1.528,463,2.541,464,5.057,465,5.057,466,3.263,469,1.617,470,2.69,473,1.39,474,5.415,475,4.83,476,5.558,477,4.83,478,1.528,481,4.304,484,1.013,485,1.334,486,1.729,487,2.063,489,1.199,490,1.617,491,4.222,492,1.729,493,4.222,494,1.199,495,1.528,496,2.541,497,3.84,498,1.617,499,0.988,500,1.528,501,1.454,502,1.528,503,1.528,504,1.528,505,1.454,506,1.528,507,1.617,508,1.454,509,1.528,510,2.418,511,1.528,512,1.528,515,1.24,518,1.199,521,1.617,522,1.528,523,3.718,524,2.418,529,4.016,530,1.528,531,4.06,532,3.92,533,3.263,535,3.803,536,2.541,537,1.162,539,1.729,541,1.617,667,1.334,672,2.137,727,1.729,772,1.617,806,2.893,909,0.942,1118,1.879,1159,2.219,1177,2.219,1181,2.648,1183,2.063,1266,1.879,1267,2.312,1295,2.876,1544,0.964,1545,1.096,1724,2.219,1755,1.24,1767,1.454,1774,2.69,1775,2.107,1776,4.499,1777,4.499,1778,2.107,1779,3.504,1780,2.107,1781,3.617,1782,2.107,1783,4.584,1784,2.107,1785,2.107,1786,2.107,1787,2.107,1788,2.107,1789,2.107,1790,4.217,1791,3.504,1792,2.107,1793,2.107,1794,2.107,1795,2.107,1796,2.107,1797,3.504,1798,2.107,1799,2.107,1800,3.617,1801,4.499,1802,5.243,1803,2.107,1804,2.107,1805,1.879,1806,1.879,1807,2.137,1808,1.879,1809,1.879,1810,2.107,1811,2.69,1812,1.879,1813,2.107,1814,1.729,1815,2.107,1816,2.107,1817,2.107,1818,3.126,1819,1.933,1820,3.126,1821,2.876,1822,3.126,1823,3.126,1824,3.126,1825,3.504,1826,2.876,1827,3.504,1828,4.499,1829,4.013,1830,2.648,1831,3.693,1832,3.126,1833,1.604,1834,1.933,1835,2.418,1836,2.312,1837,3.126,1838,2.312,1839,3.126,1840,2.107,1841,2.107,1842,2.107,1843,2.107,1844,2.107,1845,2.107,1846,4.676,1847,2.107,1848,2.107,1849,2.107,1850,2.107,1851,2.107,1852,2.107,1853,1.879,1854,1.879,1855,2.107,1856,2.107,1857,2.107,1858,2.107,1859,2.107,1860,3.504,1861,2.107,1862,3.126,1863,1.528,1864,2.107,1865,3.126,1866,2.107,1867,3.504,1868,2.107,1869,2.107,1870,1.617,1871,1.879,1872,2.107,1873,1.729,1874,1.285,1875,2.107,1876,2.107,1877,2.107,1878,2.107,1879,2.107,1880,2.107,1881,2.107,1882,2.107,1883,2.107]],["title/classes/IdentitiesCreateDto.html",[0,0.2,1781,3.415]],["body/classes/IdentitiesCreateDto.html",[0,0.349,2,0.745,3,0.12,4,0.1,5,0.113,7,0.306,8,0.768,11,0.968,18,0.743,21,0.006,23,0.523,29,0.27,32,1.171,37,0.216,40,0.597,41,2.051,55,0.826,58,0.004,59,0.004,65,1.339,87,1.823,112,1.819,123,3.249,127,1.735,203,1.457,311,3.365,342,3.94,343,3.94,346,1.823,357,3.829,416,3.537,570,2.76,571,2.288,579,3.216,580,1.483,581,2.124,684,2.829,780,2.376,787,3.085,1181,4.906,1470,2.56,1512,3.34,1544,3.634,1578,2.938,1647,4.841,1661,4.234,1662,3.365,1663,3.562,1664,3.061,1700,5.077,1755,4.331,1757,4.66,1762,4.855,1765,3.365,1767,3.201,1781,5.077,1783,2.938,1790,2.938,1800,3.201,1833,2.938,1834,4.381,1884,3.562,1885,5.46,1886,4.139,1887,4.927,1888,4.429,1889,4.234,1890,4.252,1891,4.234,1892,5.478,1893,5.238,1894,5.238,1895,4.234,1896,3.34,1897,4.429,1898,4.927,1899,4.927,1900,3.34,1901,3.437,1902,4.234,1903,4.64,1904,5.075,1905,4.139,1906,4.64,1907,4.139,1908,4.64,1909,4.139,1910,4.64,1911,3.562,1912,3.562,1913,3.562,1914,3.562,1915,3.914,1916,3.562,1917,3.562,1918,3.562,1919,3.562,1920,3.562,1921,3.562]],["title/classes/IdentitiesDto.html",[0,0.2,1783,3.134]],["body/classes/IdentitiesDto.html",[0,0.348,2,0.736,3,0.118,4,0.099,5,0.112,7,0.302,8,0.762,11,0.963,18,0.74,21,0.006,23,0.521,29,0.27,32,1.157,37,0.215,40,0.592,41,2.033,55,0.819,58,0.004,59,0.004,65,1.333,87,3.26,112,1.803,123,3.222,127,1.727,203,1.439,311,3.324,342,3.915,343,3.915,346,1.801,357,3.804,416,3.514,570,2.748,571,2.26,579,3.196,580,1.464,581,2.098,684,2.795,780,2.356,787,3.059,1181,4.884,1470,2.529,1512,3.312,1544,3.615,1578,2.913,1647,4.458,1661,4.198,1662,3.324,1663,3.519,1664,3.024,1700,5.044,1755,4.303,1757,4.63,1762,4.823,1765,3.324,1767,3.162,1781,6.078,1783,4.03,1790,2.902,1800,3.162,1833,2.913,1834,4.358,1884,3.519,1885,5.439,1886,4.088,1887,4.886,1888,4.391,1889,4.198,1890,4.229,1891,4.198,1892,5.45,1893,5.211,1894,5.211,1895,4.198,1896,3.312,1897,4.391,1898,4.886,1899,4.886,1900,3.312,1901,3.408,1902,4.198,1904,5.055,1905,4.088,1907,4.088,1909,4.088,1911,3.519,1912,3.519,1913,3.519,1914,3.519,1915,3.88,1916,3.519,1917,3.519,1918,3.519,1919,3.519,1920,3.519,1921,3.519,1922,4.583,1923,4.583,1924,4.583,1925,4.583]],["title/controllers/IdentitiesJsonFormsController.html",[447,1.764,1926,4.063]],["body/controllers/IdentitiesJsonFormsController.html",[0,0.196,1,3.435,3,0.125,4,0.104,5,0.118,7,0.318,11,0.985,18,0.72,20,2.073,21,0.006,22,1.455,23,0.452,29,0.242,36,0.857,37,0.131,40,0.699,56,1.881,58,0.004,59,0.004,65,1.061,74,1.201,77,1.722,78,2.517,94,2.107,127,1.682,152,1.98,162,3.392,170,1.603,196,2.806,200,2.826,238,2.581,327,4.485,349,1.939,352,3.308,393,1.466,447,1.723,449,1.691,451,2.384,454,4.355,456,4.84,457,2.752,461,5.253,473,3.189,484,2.323,485,3.061,487,2.845,489,2.752,517,2.384,518,2.752,523,3.698,531,4.926,532,4.755,909,2.162,933,3.061,1051,4.788,1926,5.419,1927,4.834,1928,4.834,1929,5.889,1930,5.889,1931,4.834,1932,6.602,1933,4.834,1934,4.834,1935,6.602,1936,4.834,1937,5.889,1938,4.834,1939,4.312,1940,4.834,1941,4.555,1942,4.312,1943,4.834,1944,4.834,1945,4.834,1946,4.834,1947,4.834,1948,4.834,1949,4.312,1950,4.312,1951,4.312,1952,4.312,1953,4.312,1954,4.312]],["title/modules/IdentitiesJsonformsModule.html",[166,1.527,1955,3.59]],["body/modules/IdentitiesJsonformsModule.html",[0,0.271,3,0.173,4,0.145,5,0.163,21,0.006,29,0.264,36,1.188,37,0.182,58,0.005,59,0.005,166,2.711,449,2.851,601,2.929,602,3.067,603,3.221,604,3.221,605,3.221,606,4.12,607,4.223,611,3.918,612,2.997,613,3.221,1926,7.213,1941,6.864,1942,5.977,1955,6.996,1956,5.977,1957,5.977,1958,5.977,1959,6.701,1960,6.701]],["title/injectables/IdentitiesJsonformsService.html",[136,1.229,1941,3.415]],["body/injectables/IdentitiesJsonformsService.html",[0,0.125,3,0.079,4,0.067,5,0.195,7,0.382,8,0.569,9,2.222,10,2.031,11,0.947,12,2.236,15,1.702,18,0.775,20,1.49,21,0.006,22,1.046,23,0.47,29,0.224,36,0.546,37,0.084,39,2.772,40,0.656,53,2.514,56,1.917,58,0.003,59,0.003,65,0.764,66,3.643,70,2.708,72,2.734,74,1.181,75,2.408,76,2.408,77,1.24,78,2.303,87,2.565,88,1.65,89,1.56,90,1.65,91,1.65,92,1.65,94,1.84,106,2.408,112,0.873,136,1.181,137,1.289,162,2.329,170,1.892,185,2.708,192,1.761,196,2.475,200,1.663,234,2.749,318,1.325,327,2.345,346,1.869,349,1.236,352,3.258,390,2.069,393,0.935,762,2.366,763,2.366,764,2.127,769,4.458,770,4.458,909,1.378,933,4.721,934,2.53,935,2.749,952,2.749,1051,4.212,1055,3.449,1533,3.904,1686,3.541,1870,4.458,1929,5.823,1941,3.281,1949,2.749,1961,3.082,1962,6.321,1963,5.18,1964,5.823,1965,4.756,1966,4.756,1967,3.082,1968,4.242,1969,3.082,1970,3.082,1971,3.082,1972,3.082,1973,4.756,1974,3.082,1975,4.242,1976,3.082,1977,2.749,1978,3.082,1979,2.127,1980,2.749,1981,4.007,1982,2.53,1983,2.749,1984,2.749,1985,5.807,1986,4.242,1987,6.649,1988,3.082,1989,6.649,1990,3.082,1991,2.749,1992,2.749,1993,3.082,1994,4.756,1995,6.93,1996,3.082,1997,4.756,1998,2.749,1999,3.082,2000,5.18,2001,6.528,2002,3.082,2003,5.807,2004,3.082,2005,4.756,2006,4.756,2007,4.756,2008,4.756,2009,7.054,2010,3.082,2011,3.082,2012,3.082,2013,3.082,2014,2.53,2015,3.082,2016,3.082,2017,4.756,2018,2.366,2019,4.756,2020,3.082,2021,3.082,2022,3.082,2023,3.082,2024,3.082,2025,2.749,2026,3.082,2027,3.082,2028,2.033,2029,3.082,2030,4.756,2031,3.082,2032,4.756,2033,3.082,2034,3.082,2035,3.082,2036,3.082,2037,3.082,2038,2.749,2039,2.749,2040,6.292,2041,4.242,2042,5.823,2043,4.242,2044,3.082,2045,2.53,2046,3.082,2047,6.119,2048,3.082,2049,3.082,2050,3.082,2051,3.082,2052,4.242,2053,3.082,2054,2.749,2055,2.749,2056,3.082,2057,2.749,2058,3.082,2059,3.082,2060,3.082]],["title/modules/IdentitiesModule.html",[166,1.527,1150,3.134]],["body/modules/IdentitiesModule.html",[0,0.228,3,0.145,4,0.122,5,0.137,21,0.006,22,1.015,29,0.29,30,2.259,36,0.998,37,0.153,58,0.005,59,0.005,132,1.768,166,2.503,449,2.556,601,2.462,602,2.578,603,2.707,604,2.707,605,2.707,606,3.805,607,3.9,611,3.513,612,2.519,613,2.707,615,3.434,619,3.7,620,3.716,622,3.315,720,6.519,727,4.623,734,3.886,754,4.623,755,5.024,1150,6.119,1159,6.156,1183,3.315,1772,5.611,1774,6.229,1806,5.024,1807,5.66,1808,5.024,1809,5.024,1811,5.611,1812,5.024,1941,6.405,1955,5.301,2061,5.024,2062,5.024,2063,5.024,2064,5.632,2065,5.632,2066,5.043,2067,5.632,2068,5.632,2069,5.632,2070,5.632]],["title/classes/IdentitiesUpdateDto.html",[0,0.2,1790,3.134]],["body/classes/IdentitiesUpdateDto.html",[0,0.366,2,0.88,3,0.141,4,0.118,5,0.133,21,0.006,23,0.493,29,0.281,32,1.383,37,0.231,40,0.509,41,1.75,58,0.004,59,0.004,65,1.417,112,1.552,311,3.973,342,3.844,343,3.844,346,2.152,357,2.851,416,2.633,570,2.92,571,2.701,579,3.499,580,1.75,581,2.508,684,3.34,780,2.028,787,2.633,1181,4.712,1470,3.023,1512,3.735,1544,3.286,1578,3.286,1647,4.377,1664,3.614,1700,5.524,1755,3.224,1757,3.469,1762,4.736,1765,3.973,1767,3.78,1781,4.953,1783,3.469,1790,4.546,1800,3.78,1833,2.508,1834,3.96,1884,4.206,1885,5.38,1887,4.206,1888,3.78,1889,3.614,1890,3.844,1891,3.614,1892,4.953,1893,4.736,1894,4.736,1895,3.614,1896,2.851,1897,3.78,1898,4.206,1899,4.206,1900,2.851,1901,2.933,1902,3.614,1904,5.001,1911,4.206,1912,4.206,1913,4.206,1914,4.206,1915,4.377,1916,4.206,1917,4.206,1918,4.206,1919,4.206,1920,5.511,1921,4.206]],["title/classes/IdentitiesUpsertDto.html",[0,0.2,1800,3.415]],["body/classes/IdentitiesUpsertDto.html",[0,0.364,2,0.861,3,0.138,4,0.116,5,0.131,7,0.353,8,0.847,11,0.863,18,0.478,21,0.006,23,0.503,29,0.279,32,1.353,37,0.229,40,0.498,41,1.713,58,0.004,59,0.004,65,1.407,112,1.519,311,5.745,342,3.789,343,3.789,346,2.106,357,2.79,416,2.577,570,2.9,571,2.643,579,3.463,580,1.713,581,2.454,684,4.315,780,1.985,787,2.577,1181,4.663,1470,2.958,1512,3.682,1544,3.239,1578,3.239,1647,4.315,1664,3.537,1700,5.466,1755,3.155,1757,3.395,1762,4.669,1765,3.888,1767,3.699,1781,4.883,1783,3.395,1790,3.395,1800,4.883,1833,2.454,1834,3.904,1884,4.116,1885,5.335,1887,4.116,1888,3.699,1889,3.537,1890,3.789,1891,3.537,1892,4.883,1893,4.669,1894,4.669,1895,3.537,1896,2.79,1897,3.699,1898,4.116,1899,4.116,1900,2.79,1901,2.871,1902,3.537,1904,4.959,1911,4.116,1912,4.116,1913,4.116,1914,4.116,1915,4.315,1916,4.116,1917,4.116,1918,4.116,1919,4.116,1920,4.116,1921,5.433,2071,5.361]],["title/controllers/IdentitiesValidationController.html",[447,1.764,2072,4.063]],["body/controllers/IdentitiesValidationController.html",[0,0.202,1,3.505,3,0.128,4,0.107,5,0.121,7,0.328,11,0.93,18,0.681,20,1.959,21,0.006,22,1.375,23,0.427,29,0.27,32,1.257,36,0.882,37,0.135,55,0.982,56,1.904,58,0.004,59,0.004,65,1.082,74,1.237,77,1.757,78,2.461,94,1.991,127,1.589,152,2.039,170,1.514,196,2.717,200,2.86,238,2.439,327,4.032,340,5.643,344,2.521,352,2.826,354,2.521,355,2.591,356,2.591,390,1.774,393,1.51,399,2.334,403,2.176,404,1.997,410,2.93,447,1.774,449,1.741,451,2.455,454,4.443,456,4.751,457,4.865,461,5.215,473,3.284,484,2.393,485,3.153,487,4.493,489,2.835,494,2.835,518,2.835,522,3.611,523,3.743,524,3.435,531,4.107,532,3.964,1267,3.284,1295,4.087,1807,4.107,1814,4.087,1862,4.441,1865,4.441,1930,6.008,1937,6.008,1939,4.441,1950,4.441,1951,4.441,1952,4.441,1953,4.441,1954,4.441,2072,5.528,2073,4.978,2074,4.978,2075,5.536,2076,4.978,2077,4.978,2078,4.978,2079,4.978,2080,4.441,2081,4.441,2082,4.978,2083,4.978]],["title/classes/IdentitiesValidationFilter.html",[0,0.2,1811,3.8]],["body/classes/IdentitiesValidationFilter.html",[0,0.26,2,1.031,3,0.165,4,0.138,5,0.156,7,0.422,10,2.244,11,0.782,18,0.572,20,1.646,21,0.006,22,1.156,23,0.359,29,0.259,36,1.137,37,0.174,56,1.494,58,0.005,59,0.005,67,5.236,77,2.07,94,1.673,152,2.627,170,1.71,344,3.248,390,2.286,403,3.767,456,4.018,523,2.936,661,7.075,662,6.515,663,5.947,664,7.392,666,4.232,668,5.265,669,4.925,670,5.265,671,5.265,672,4.84,674,5.722,1811,6.617,1982,5.265,2084,7.937,2085,5.722,2086,6.532,2087,6.414,2088,6.414,2089,6.414,2090,6.414,2091,6.414]],["title/modules/IdentitiesValidationModule.html",[166,1.527,2066,3.415]],["body/modules/IdentitiesValidationModule.html",[0,0.271,3,0.173,4,0.145,5,0.163,21,0.006,29,0.264,36,1.188,37,0.182,58,0.005,59,0.005,166,2.711,449,2.851,601,2.929,602,3.067,603,3.221,604,3.221,605,3.221,606,4.12,607,4.223,611,3.918,612,2.997,613,3.221,1807,6.066,2066,6.655,2072,7.213,2081,5.977,2092,5.977,2093,6.701,2094,5.977,2095,6.701,2096,6.701]],["title/injectables/IdentitiesValidationService.html",[136,1.229,1807,3.018]],["body/injectables/IdentitiesValidationService.html",[0,0.112,2,0.7,3,0.071,4,0.144,5,0.163,7,0.181,8,0.521,10,2.606,11,0.749,15,1.583,18,0.709,20,1.576,21,0.006,22,1.106,23,0.374,29,0.254,36,0.488,37,0.075,39,3.2,40,0.718,52,1.998,53,2.535,55,0.695,56,1.852,58,0.003,59,0.003,70,1.568,72,2.7,77,1.136,78,2.241,94,1.943,106,2.735,111,2.457,112,1.234,136,1.082,137,1.152,162,2.853,170,1.872,181,1.358,185,2.48,196,2.607,200,2.488,237,3.885,238,1.392,251,2.874,261,1.177,278,2.457,318,2.216,327,2.148,340,4.237,342,2.332,343,1.475,344,2.735,349,1.105,352,2.758,390,2.384,399,1.291,403,1.204,404,2.167,485,3.421,586,2.267,762,2.114,763,2.114,766,1.998,769,3.344,770,3.344,780,2,909,2.416,933,3.889,934,2.261,1038,3.344,1111,2.114,1183,3.615,1301,4.435,1336,2.114,1362,3.344,1474,3.728,1531,4.148,1540,3.919,1544,1.261,1545,3.877,1724,3.889,1807,2.656,1819,3.388,1820,3.885,1821,3.575,1834,1.52,1835,1.9,1836,1.817,1853,5.478,1870,2.114,1885,3.889,1900,2.267,1962,6.252,1963,4.819,1964,5.478,1968,3.885,1975,3.885,1977,2.457,1979,1.9,1980,2.457,1981,3.728,1982,2.261,1983,2.457,1984,2.457,1987,5.478,1989,5.478,1991,2.457,1992,2.457,1995,4.819,1998,2.457,2000,3.885,2025,2.457,2038,2.457,2039,2.457,2040,3.885,2041,2.457,2042,3.885,2043,2.457,2047,5.041,2052,2.457,2054,2.457,2055,2.457,2057,2.457,2075,5.768,2080,2.457,2097,2.754,2098,4.355,2099,4.355,2100,4.355,2101,3.885,2102,4.355,2103,2.754,2104,2.754,2105,4.355,2106,2.754,2107,3.885,2108,2.754,2109,6.141,2110,6.141,2111,4.355,2112,4.355,2113,3.885,2114,7.648,2115,2.754,2116,4.355,2117,4.355,2118,2.754,2119,2.754,2120,2.754,2121,2.754,2122,2.754,2123,2.261,2124,2.754,2125,2.457,2126,2.754,2127,3.159,2128,2.754,2129,2.754,2130,2.754,2131,2.754,2132,2.754,2133,2.754,2134,6.141,2135,2.754,2136,7.724,2137,2.754,2138,2.754,2139,2.261,2140,2.754,2141,2.656,2142,2.754,2143,5.967,2144,2.754,2145,1.998,2146,1.621,2147,1.9,2148,2.457,2149,2.261,2150,1.9,2151,2.754,2152,2.457,2153,2.754,2154,2.754,2155,4.355,2156,2.754,2157,1.998,2158,4.355,2159,2.754,2160,4.355,2161,2.754,2162,2.754,2163,2.754,2164,2.754,2165,2.754,2166,2.457,2167,2.754,2168,2.754,2169,2.754,2170,2.754,2171,2.754,2172,2.754,2173,2.754,2174,2.754,2175,2.457,2176,2.754,2177,2.754,2178,2.261,2179,2.754,2180,2.754,2181,2.754,2182,2.754,2183,2.754,2184,2.754,2185,2.754]],["title/interfaces/InternalLogOptions.html",[38,1.334,2186,3.8]],["body/interfaces/InternalLogOptions.html",[0,0.14,3,0.089,4,0.075,5,0.084,7,0.228,8,0.622,9,1.032,11,0.845,21,0.006,23,0.349,24,4.463,29,0.208,36,0.614,37,0.188,38,1.401,40,0.871,53,1.234,55,0.669,56,1.816,58,0.003,59,0.003,60,1.418,65,0.556,72,1.106,78,0.918,108,3.671,116,4.08,123,2.631,132,1.087,134,1.627,136,1.291,139,4.557,152,1.418,157,1.753,162,3.128,164,2.782,170,1.821,192,3.502,200,1.817,238,1.106,260,5.657,261,3.458,285,3.657,293,5.125,296,2.389,297,1.664,390,2.965,393,1.05,399,2.436,403,2.271,404,1.389,517,1.707,715,3.428,742,2.193,908,1.91,953,5.322,1202,4.304,1425,4.304,1542,2.389,1578,1.585,1863,5.867,2018,2.658,2028,2.284,2186,4.788,2187,2.658,2188,5.69,2189,5.322,2190,4.265,2191,3.989,2192,3.989,2193,3.989,2194,2.658,2195,2.842,2196,2.842,2197,2.842,2198,3.989,2199,5.12,2200,2.842,2201,2.842,2202,2.842,2203,2.842,2204,2.842,2205,2.842,2206,2.842,2207,2.842,2208,2.842,2209,7.727,2210,4.265,2211,2.842,2212,7.686,2213,6.402,2214,6.402,2215,6.402,2216,6.402,2217,6.035,2218,6.402,2219,2.842,2220,2.842,2221,2.842,2222,2.842,2223,2.842,2224,3.769,2225,2.842,2226,2.842,2227,2.842,2228,2.842,2229,2.842,2230,2.842,2231,2.842,2232,2.842,2233,2.842,2234,2.842,2235,2.284,2236,4.304,2237,4.265,2238,5.12,2239,2.842,2240,2.842,2241,2.842,2242,2.842,2243,2.842,2244,2.842,2245,2.842,2246,2.842,2247,2.842]],["title/injectables/InternalLogger.html",[136,1.229,2194,3.8]],["body/injectables/InternalLogger.html",[0,0.12,3,0.076,4,0.064,5,0.072,7,0.195,8,0.553,9,1.69,11,0.966,15,0.869,18,0.742,20,2.033,21,0.006,22,1.427,23,0.474,24,4.227,25,1.502,29,0.192,36,0.526,37,0.174,38,1.244,40,0.837,53,1.057,55,0.892,56,1.709,58,0.003,59,0.003,65,0.742,72,1.811,77,1.204,78,1.503,94,2.066,108,3.336,116,4.51,123,2.337,132,0.931,134,1.478,136,1.147,137,1.241,139,3.425,152,1.215,157,1.502,162,2.943,164,2.472,170,1.769,192,3.459,200,1.615,238,0.948,260,5.323,261,3.275,285,3.441,293,3.186,296,2.047,297,1.426,390,3.145,393,0.9,399,2.165,403,2.018,404,2.273,419,1.852,517,1.463,715,3.046,742,1.879,908,2.547,953,4.911,1202,3.911,1425,3.911,1542,3.911,1578,1.358,1863,5.557,2018,4.911,2028,1.957,2186,4.911,2187,2.277,2188,2.435,2189,3.544,2190,4.653,2191,3.544,2192,4.911,2193,3.544,2194,3.544,2195,3.79,2196,2.435,2197,2.435,2198,3.544,2199,4.653,2200,2.435,2201,2.435,2202,2.435,2203,2.435,2204,2.435,2205,2.435,2206,2.435,2207,2.435,2208,3.79,2209,7.903,2210,3.79,2211,2.435,2212,7.498,2213,6.024,2214,6.024,2215,6.024,2216,6.024,2217,5.747,2218,6.024,2219,2.435,2220,3.79,2221,4.653,2222,2.435,2223,3.79,2224,4.639,2225,2.435,2226,3.79,2227,2.435,2228,3.79,2229,4.653,2230,2.435,2231,3.79,2232,4.653,2233,2.435,2234,4.653,2235,5.227,2236,3.911,2237,3.79,2238,4.653,2239,2.435,2240,2.435,2241,2.435,2242,2.435,2243,2.435,2244,2.435,2245,2.435,2246,2.435,2247,2.435,2248,2.966,2249,4.617,2250,2.966,2251,2.966,2252,2.966,2253,2.966,2254,2.966,2255,2.966,2256,2.966,2257,2.966,2258,2.966]],["title/interfaces/InternalLoggerOptions.html",[38,1.334,2192,3.8]],["body/interfaces/InternalLoggerOptions.html",[0,0.142,3,0.09,4,0.076,5,0.085,7,0.23,8,0.627,9,1.043,21,0.006,23,0.389,24,4.479,29,0.209,36,0.62,37,0.189,38,1.412,40,0.861,53,1.247,55,0.674,56,1.823,58,0.003,59,0.003,60,1.433,65,0.562,72,1.118,78,0.928,108,3.694,116,4.101,123,2.651,132,1.098,134,2.042,136,1.301,139,3.731,152,1.433,157,1.771,162,3.14,164,2.804,170,1.825,192,3.507,200,1.832,238,1.118,260,5.679,261,3.47,285,3.671,293,3.613,296,2.414,297,1.682,390,2.975,393,1.061,399,2.456,403,2.289,404,1.403,419,2.1,517,1.725,715,3.455,742,2.216,908,1.931,953,5.349,1202,4.331,1425,5.759,1542,2.414,1578,1.602,1863,5.888,2018,2.686,2028,2.308,2186,4.021,2187,2.686,2188,2.872,2189,4.021,2190,4.299,2191,4.021,2192,4.819,2193,4.021,2194,2.686,2195,2.872,2196,2.872,2197,2.872,2198,4.021,2199,5.152,2200,2.872,2201,2.872,2202,2.872,2203,2.872,2204,2.872,2205,2.872,2206,2.872,2207,2.872,2208,2.872,2209,7.739,2210,4.299,2211,2.872,2212,7.698,2213,6.428,2214,6.428,2215,6.428,2216,6.428,2217,6.054,2218,6.428,2219,2.872,2220,2.872,2221,2.872,2222,2.872,2223,2.872,2224,3.798,2225,2.872,2226,2.872,2227,2.872,2228,2.872,2229,2.872,2230,2.872,2231,2.872,2232,2.872,2233,2.872,2234,2.872,2235,2.308,2236,4.331,2237,4.299,2238,5.152,2239,2.872,2240,2.872,2241,2.872,2242,2.872,2243,2.872,2244,2.872,2245,2.872,2246,2.872,2247,2.872]],["title/classes/Jobs.html",[0,0.2,1188,2.913]],["body/classes/Jobs.html",[0,0.178,2,0.707,3,0.113,4,0.095,5,0.107,7,0.29,8,0.741,11,1.156,18,0.817,21,0.006,23,0.546,29,0.245,37,0.194,40,0.869,41,1.977,55,1.274,58,0.004,59,0.004,65,0.707,112,1.247,119,3.523,121,2.704,124,2.755,127,1.906,128,4.515,131,4.45,132,1.382,133,1.803,134,1.148,170,0.873,203,2.436,261,3.801,297,4.273,318,2.363,327,3.527,346,3.332,349,3.4,352,2.291,353,2.17,416,3.438,434,2.904,438,2.788,1165,4.936,1186,6.711,1188,4.211,1213,4.53,1217,6.381,1232,6.381,1248,4.72,1250,4.936,1281,4.72,1284,4.362,1287,3.926,1402,5.872,1408,5.872,1578,2.832,2259,3.613,2260,4.402,2261,4.402,2262,4.402,2263,4.402,2264,4.402,2265,4.402,2266,4.402,2267,4.402,2268,4.402,2269,4.402,2270,4.402,2271,3.379,2272,4.402,2273,3.926,2274,3.613,2275,3.926]],["title/controllers/JobsController.html",[447,1.764,2276,4.063]],["body/controllers/JobsController.html",[0,0.186,1,3.312,3,0.118,4,0.099,5,0.112,7,0.302,9,1.366,11,0.776,18,0.567,20,1.633,21,0.006,22,1.317,23,0.441,29,0.285,32,1.157,36,0.812,37,0.125,40,0.426,55,1.133,56,1.482,58,0.004,59,0.004,65,1.022,74,1.581,77,1.66,78,2.277,94,1.66,122,2.354,123,2.32,124,2.815,127,1.325,133,1.877,134,1.195,152,1.877,164,2.454,170,1.263,196,2.437,200,2.762,206,2.32,238,2.033,285,4.027,318,1.277,327,2.26,371,2.32,393,1.39,447,1.633,449,1.603,451,2.26,452,5.45,454,5.211,456,4.459,461,5.113,462,3.324,463,4.616,464,4.616,465,4.616,466,3.324,473,3.024,474,6.229,475,5.729,476,6.229,477,5.729,478,3.324,484,2.203,485,2.902,489,2.61,491,4.616,493,4.616,494,2.61,496,3.324,497,4.198,498,3.519,499,2.149,500,3.324,501,3.162,502,3.324,503,3.324,504,3.324,505,3.162,508,3.162,509,3.324,510,4.391,511,3.324,512,3.324,513,3.162,515,2.698,517,2.26,518,2.61,523,2.913,527,3.762,528,3.762,529,4.391,530,3.324,531,3.88,532,3.746,533,3.324,535,3.324,536,3.324,537,2.529,1160,4.391,1165,3.162,1188,2.698,1213,2.902,1248,3.024,1281,3.024,2276,5.224,2277,4.583,2278,4.583,2279,4.583,2280,4.583,2281,3.324,2282,4.583,2283,4.088,2284,4.583,2285,4.583,2286,6.364,2287,4.583,2288,4.583]],["title/classes/JobsCreateDto.html",[0,0.2,2289,3.8]],["body/classes/JobsCreateDto.html",[0,0.346,2,0.799,3,0.128,4,0.107,5,0.121,7,0.327,8,0.805,11,0.82,18,0.816,21,0.006,23,0.537,29,0.264,32,1.255,37,0.207,40,0.851,55,1.281,58,0.004,59,0.004,65,1.313,87,1.953,122,1.482,124,2.591,127,1.906,133,2.035,134,1.296,261,3.494,327,3.76,413,4.26,419,1.993,545,4.81,564,3.816,568,3.279,569,3.429,570,3.072,571,2.451,572,3.147,573,3.831,574,3.317,578,4.489,580,1.588,581,2.275,584,3.148,585,3.148,1165,5.262,1213,4.83,1248,5.031,1250,5.262,1281,5.031,1284,4.65,1410,6.384,1414,4.08,1512,3.969,1654,4.83,2271,3.816,2281,3.605,2289,5.855,2290,4.08,2291,4.97,2292,4.97,2293,4.97,2294,4.97,2295,6.001,2296,4.97,2297,4.97,2298,4.97,2299,4.08,2300,3.816,2301,4.08]],["title/classes/JobsDto.html",[0,0.2,2281,3.59]],["body/classes/JobsDto.html",[0,0.341,2,0.764,3,0.123,4,0.103,5,0.116,7,0.313,8,0.782,11,0.796,18,0.82,21,0.006,23,0.536,29,0.261,32,1.201,37,0.203,40,0.865,55,1.28,58,0.004,59,0.004,65,1.289,87,3.561,122,2.223,124,2.515,127,1.914,133,1.948,134,1.241,261,3.431,327,3.676,413,4.135,419,1.908,545,4.389,564,3.652,568,3.139,569,3.283,570,3.044,571,2.346,572,3.09,573,3.718,574,3.22,578,4.389,580,1.52,581,2.178,584,3.013,585,3.013,588,3.905,1165,5.144,1213,4.722,1248,4.919,1250,5.144,1281,4.919,1284,4.546,1410,6.301,1414,3.905,1512,3.88,1654,4.722,2271,3.652,2281,4.736,2289,7.142,2290,3.905,2295,5.825,2299,3.905,2300,3.652,2301,3.905,2302,4.757,2303,4.757,2304,4.757,2305,4.757,2306,4.757,2307,4.757,2308,4.757,2309,4.757]],["title/modules/JobsModule.html",[166,1.527,1151,3.415]],["body/modules/JobsModule.html",[0,0.257,3,0.163,4,0.137,5,0.155,21,0.006,22,1.143,29,0.277,36,1.125,37,0.172,58,0.005,59,0.005,132,1.993,166,2.647,449,2.758,601,2.774,602,2.905,603,3.05,604,3.05,605,3.05,606,4.022,607,4.123,611,3.79,612,2.838,613,3.05,615,3.87,619,3.213,620,4.187,622,3.736,1151,6.579,1160,6.817,1188,3.736,2274,6.472,2276,7.041,2283,5.661,2310,5.661,2311,5.661,2312,5.661,2313,6.347,2314,5.661,2315,6.347,2316,6.347]],["title/injectables/JobsService.html",[136,1.229,1160,3.415]],["body/injectables/JobsService.html",[0,0.135,3,0.086,4,0.072,5,0.081,7,0.22,8,0.606,9,2.512,10,2.136,11,1.102,12,2.351,15,0.98,18,0.813,20,2.403,21,0.006,22,1.548,23,0.533,25,4.715,29,0.22,36,0.593,37,0.091,49,2.71,55,1.211,58,0.003,59,0.003,65,0.813,66,3.193,72,1.617,74,1.257,75,2.562,76,2.562,77,1.32,78,2.469,87,3.553,88,1.79,89,1.692,90,1.79,91,1.79,92,1.79,94,2.198,122,1.82,124,2.964,132,1.05,134,0.872,136,1.257,137,1.398,162,3.775,176,5.669,178,4.493,179,2.71,180,2.316,181,2.495,182,3.205,183,3.086,184,3.086,185,2.881,186,4.247,187,3.086,188,3.516,190,2.117,191,5.239,192,3.448,194,4.65,195,4.306,196,2.6,197,2.117,198,3.205,200,1.169,201,2.117,202,5.514,203,2.924,205,2.117,206,4.168,207,5.02,209,2.117,211,2.206,213,2.117,215,1.903,216,4.312,218,2.206,393,1.014,625,2.307,629,2.307,630,2.307,631,2.307,632,2.307,633,2.307,634,2.307,635,2.307,636,2.307,637,2.307,638,2.307,1160,3.492,1188,1.968,1751,2.566,1752,2.425,2314,2.982,2317,3.343,2318,3.343,2319,3.343]],["title/classes/JobsUpdateDto.html",[0,0.2,2300,3.8]],["body/classes/JobsUpdateDto.html",[0,0.368,2,0.967,3,0.155,4,0.13,5,0.147,21,0.006,23,0.492,29,0.278,32,1.519,37,0.227,40,0.844,55,1.227,58,0.005,59,0.005,65,1.414,122,1.793,124,2.317,133,2.464,134,1.569,261,3.26,327,2.966,545,4.488,570,3.187,571,2.966,572,3.389,573,4.341,574,3.759,578,4.927,580,1.922,581,2.754,584,3.81,585,3.81,1165,4.151,1213,3.81,1248,3.969,1250,4.151,1281,3.969,1284,3.668,1410,6.384,1512,4.356,2271,4.619,2281,4.363,2289,5.854,2290,4.938,2299,4.938,2300,5.854,2301,6.259]],["title/injectables/JwtStrategy.html",[136,1.229,862,3.8]],["body/injectables/JwtStrategy.html",[0,0.219,3,0.14,4,0.117,5,0.132,7,0.357,10,1.895,11,0.869,15,2.089,18,0.635,20,1.829,21,0.006,22,1.284,23,0.398,29,0.28,36,0.961,37,0.147,55,1.025,56,1.854,58,0.004,59,0.004,65,1.145,70,4.534,72,1.731,74,1.346,77,1.859,78,2.111,83,5.581,94,1.413,103,3.432,112,2.256,136,1.77,137,2.267,139,4.53,152,2.219,157,3.608,170,1.075,196,2.199,238,1.731,253,4.16,318,1.51,393,1.643,790,5.85,795,4.917,799,5.043,806,2.99,811,4.98,813,3.432,817,4.16,862,6.114,866,4.833,908,4.394,923,5.85,924,5.471,930,6.357,931,4.833,970,4.448,971,4.833,1421,3.93,2075,5.776,2320,5.419,2321,6.357,2322,4.833,2323,5.419,2324,4.833,2325,7.103,2326,8.46,2327,5.419,2328,5.85,2329,4.833,2330,5.419,2331,4.833,2332,5.419,2333,5.419,2334,5.419,2335,5.419,2336,5.419,2337,4.833,2338,5.419,2339,5.419,2340,7.127,2341,6.357,2342,5.419,2343,4.833]],["title/classes/Keyrings.html",[0,0.2,2344,3.134]],["body/classes/Keyrings.html",[0,0.231,2,0.917,3,0.147,4,0.123,5,0.139,7,0.376,8,0.882,11,1.052,18,0.769,21,0.006,22,1.471,23,0.533,29,0.245,37,0.222,40,0.9,55,1.253,58,0.005,59,0.005,65,0.917,112,1.617,119,4.197,121,3.222,127,1.797,128,4.255,131,4.295,132,1.792,134,1.489,170,1.132,203,2.314,297,4.148,318,2.405,349,2.956,352,2.729,353,2.814,422,6.26,434,3.765,438,3.614,682,3.925,2344,5.171,2345,4.685,2346,5.634,2347,5.634,2348,5.707,2349,5.707,2350,5.707,2351,5.707,2352,5.091,2353,5.707,2354,4.685,2355,5.091]],["title/classes/KeyringsCommand.html",[0,0.2,1393,3.59]],["body/classes/KeyringsCommand.html",[0,0.298,2,0.744,3,0.119,4,0.1,5,0.113,7,0.305,9,1.381,11,0.782,12,3.467,15,1.879,18,0.572,20,1.645,21,0.006,22,1.622,23,0.358,29,0.265,30,1.858,37,0.2,39,1.82,40,0.775,42,2.285,43,2.242,44,2.571,45,3.006,46,3.161,53,1.651,55,0.946,56,1.079,58,0.004,59,0.004,65,1.03,72,2.349,74,1.826,77,1.672,78,2.104,94,1.208,112,1.313,122,1.381,170,1.574,180,3.366,192,3.19,196,2.268,203,1.454,238,2.349,284,2.825,287,2.934,300,3.538,369,3.197,374,2.345,376,4.06,377,4.656,378,4.424,379,4.424,380,4.424,381,4.06,382,2.825,383,2.825,389,4.424,390,1.651,392,3.197,393,1.944,394,2.935,395,3.774,396,3.774,397,4.656,399,2.172,402,4.23,403,2.025,404,2.571,405,3.197,406,3.197,408,2.934,410,2.727,414,2.172,442,4.23,443,2.825,446,3.197,679,4.65,682,2.227,811,4.328,812,3.36,892,4.483,913,4.922,960,3.557,962,2.934,1393,4.65,1394,3.36,2344,5.025,2356,3.803,2357,4.633,2358,4.633,2359,3.803,2360,2.934,2361,3.557,2362,3.36,2363,3.557,2364,3.803,2365,4.922,2366,5.263,2367,3.803,2368,3.803,2369,5.263,2370,3.803,2371,3.803,2372,5.263,2373,3.803,2374,3.803,2375,3.803,2376,3.803,2377,3.803,2378,5.263,2379,3.803]],["title/controllers/KeyringsController.html",[447,1.764,2380,4.063]],["body/controllers/KeyringsController.html",[0,0.154,1,2.905,3,0.098,4,0.082,5,0.093,7,0.251,9,1.137,11,0.886,18,0.648,20,1.865,21,0.006,22,1.456,23,0.478,29,0.28,32,0.963,36,0.676,37,0.104,40,0.519,55,1.182,56,1.692,58,0.003,59,0.003,65,0.897,74,1.387,77,1.456,78,2.412,94,1.895,122,2.551,124,3.111,127,1.513,133,1.562,134,0.995,152,1.562,164,2.043,170,1.442,180,2.556,181,1.881,196,2.64,200,2.993,206,1.931,238,2.322,285,2.618,335,2.416,393,1.157,447,1.359,449,1.334,451,1.881,452,5.014,453,5.069,454,4.794,455,2.928,456,4.651,457,4.403,461,5.274,462,2.767,463,4.049,464,5.271,465,5.271,466,4.049,469,2.928,470,4.286,473,2.517,474,5.86,475,5.271,476,5.86,477,5.271,478,2.767,484,1.833,485,2.416,487,3.286,489,2.172,491,5.271,493,4.789,494,2.172,495,2.767,496,4.049,497,4.356,498,2.928,499,1.789,500,2.767,501,2.632,502,2.767,503,2.767,504,2.767,505,2.632,506,2.767,507,2.928,508,2.632,509,2.767,510,3.852,511,2.767,512,2.767,513,2.632,515,2.245,517,1.881,518,2.172,520,3.131,521,2.928,522,2.767,523,3.327,524,2.632,527,3.131,528,3.131,529,3.852,530,2.767,531,4.026,532,3.887,533,4.049,535,4.049,536,2.767,537,3.08,541,2.928,682,2.683,892,3.404,2344,2.416,2346,2.632,2347,2.632,2360,4.602,2361,2.928,2363,2.928,2380,4.583,2381,3.814,2382,3.814,2383,5.069,2384,3.814,2385,3.814,2386,3.814,2387,3.814,2388,3.814,2389,3.814,2390,3.814,2391,3.814,2392,3.814,2393,5.583,2394,3.814,2395,3.814]],["title/classes/KeyringsCreateCommand.html",[0,0.2,2365,3.8]],["body/classes/KeyringsCreateCommand.html",[0,0.295,2,0.731,3,0.117,4,0.098,5,0.111,7,0.3,9,1.356,11,0.772,12,3.452,15,1.855,18,0.564,20,1.624,21,0.006,22,1.615,23,0.354,29,0.264,30,1.824,37,0.198,39,1.787,40,0.769,42,2.256,43,2.214,44,2.539,45,2.968,46,3.121,53,1.621,55,0.937,56,1.059,58,0.004,59,0.004,65,1.017,72,2.326,74,1.809,77,1.651,78,2.087,94,1.186,112,1.289,122,1.356,170,1.562,180,3.333,192,3.172,196,2.246,203,1.428,238,2.326,284,2.774,287,2.88,300,3.493,369,3.138,374,2.303,376,4.009,377,4.611,378,5.432,379,4.368,380,4.368,381,4.009,382,2.774,383,2.774,389,4.368,390,1.621,392,5.024,393,1.92,394,2.898,395,3.726,396,3.726,397,4.611,399,2.133,402,4.176,403,1.988,404,2.539,405,3.138,406,3.138,408,2.88,410,2.677,414,2.133,442,4.176,443,2.774,446,3.138,679,4.591,682,2.186,811,5.174,812,3.299,892,5.36,913,4.86,960,3.492,962,2.88,1393,3.299,1394,3.299,2344,4.985,2356,3.734,2359,3.734,2360,2.88,2361,3.492,2362,3.299,2363,3.492,2364,3.734,2365,5.59,2366,5.196,2367,3.734,2368,3.734,2369,5.196,2370,3.734,2371,3.734,2372,5.196,2373,3.734,2374,3.734,2375,3.734,2376,3.734,2377,3.734,2378,5.196,2379,3.734,2396,4.548,2397,4.548]],["title/classes/KeyringsCreateDto.html",[0,0.2,2360,3.134]],["body/classes/KeyringsCreateDto.html",[0,0.328,2,0.902,3,0.145,4,0.121,5,0.137,7,0.369,8,0.873,11,1.11,18,0.792,21,0.006,22,1.459,23,0.518,29,0.243,32,1.417,37,0.198,40,0.874,55,1.267,58,0.005,59,0.005,65,1.301,87,2.205,122,1.673,127,1.85,297,3.504,318,2.257,413,4.617,419,2.25,545,5.047,555,5.288,568,3.702,569,3.872,570,2.839,572,3.302,573,4.612,578,4.292,580,1.793,584,3.554,585,3.554,586,4.215,682,3.893,2346,5.589,2347,5.589,2360,5.129,2383,4.308,2398,5.005,2399,5.005,2400,5.005,2401,5.611,2402,5.611,2403,7.225,2404,5.611,2405,5.611,2406,5.005,2407,5.005]],["title/classes/KeyringsCreateQuestions.html",[0,0.2,1394,3.59]],["body/classes/KeyringsCreateQuestions.html",[0,0.3,2,0.756,3,0.121,4,0.102,5,0.115,7,0.31,9,1.403,11,0.574,12,3.226,15,1.379,18,0.42,20,1.207,21,0.006,22,1.672,23,0.263,29,0.266,30,1.887,37,0.201,39,1.849,40,0.805,42,2.31,43,2.267,44,2.599,45,3.039,46,3.195,53,1.677,55,0.834,56,1.096,58,0.004,59,0.004,65,1.041,72,2.369,74,1.841,77,1.69,78,1.718,94,1.227,112,1.333,122,1.403,127,0.98,170,1.585,180,3.393,192,2.957,196,1.999,203,1.477,238,2.369,284,2.869,287,2.98,300,3.576,366,4.197,369,4.472,374,2.382,376,4.104,377,4.694,378,4.472,379,4.472,380,4.472,381,4.104,382,2.869,383,2.869,389,4.472,390,1.677,392,3.247,393,1.965,394,2.967,395,3.815,396,3.815,397,4.104,399,2.206,402,4.276,403,2.057,404,2.599,405,3.247,406,3.247,408,2.98,410,2.77,414,2.206,679,4.7,682,2.262,811,4.363,812,3.413,892,4.52,913,4.975,960,3.612,962,2.98,1393,3.413,1394,4.7,2344,5.058,2356,3.862,2359,3.862,2360,2.98,2361,3.612,2362,3.413,2363,3.612,2364,5.32,2365,4.975,2366,5.32,2367,3.862,2368,3.862,2369,5.32,2370,3.862,2371,3.862,2372,5.32,2373,3.862,2374,3.862,2375,3.862,2376,3.862,2377,3.862,2378,5.32,2379,3.862,2408,6.48,2409,4.705]],["title/classes/KeyringsDto.html",[0,0.2,2383,3.8]],["body/classes/KeyringsDto.html",[0,0.322,2,0.868,3,0.139,4,0.117,5,0.132,7,0.356,8,0.851,11,1.099,18,0.804,21,0.006,22,1.432,23,0.521,29,0.239,32,1.363,37,0.193,40,0.886,55,1.27,58,0.004,59,0.004,65,1.277,87,3.449,122,2.37,127,1.876,297,3.417,318,2.215,413,4.503,419,2.165,545,4.679,555,5.157,568,3.562,569,3.725,570,2.797,572,3.253,573,4.526,578,4.185,580,1.725,584,3.419,585,3.419,586,4.137,588,4.432,682,3.821,2346,5.485,2347,5.485,2360,5.82,2383,5.458,2398,4.816,2399,4.816,2400,4.816,2403,7.091,2406,4.816,2407,4.816,2410,5.399,2411,5.399,2412,5.399,2413,5.399,2414,5.399]],["title/modules/KeyringsModule.html",[166,1.527,861,3.265]],["body/modules/KeyringsModule.html",[0,0.258,3,0.164,4,0.137,5,0.155,21,0.006,22,1.146,29,0.277,36,1.127,37,0.173,58,0.005,59,0.005,132,1.997,166,2.649,449,2.761,601,2.78,602,2.911,603,3.057,604,3.057,605,3.057,606,4.026,607,4.127,611,3.795,612,2.844,613,3.057,615,3.878,619,3.22,620,4.196,622,3.744,861,6.294,892,6.026,2344,4.028,2354,6.481,2362,4.613,2380,7.048,2415,5.673,2416,5.673,2417,5.673,2418,6.36,2419,6.36,2420,6.36,2421,6.36]],["title/injectables/KeyringsService.html",[136,1.229,892,3.018]],["body/injectables/KeyringsService.html",[0,0.13,3,0.083,4,0.069,5,0.078,7,0.212,8,0.588,9,2.484,10,2.085,11,1.094,12,2.295,15,0.942,18,0.807,20,2.389,21,0.006,22,1.532,23,0.53,25,4.686,29,0.237,36,0.57,37,0.087,49,2.63,55,1.198,56,0.748,58,0.003,59,0.003,65,0.789,66,3.129,72,1.569,74,1.22,75,2.487,76,2.487,77,1.281,78,2.469,87,3.525,88,1.721,89,1.627,90,1.721,91,1.721,92,1.721,94,2.174,121,1.405,122,1.777,124,2.919,132,1.009,134,0.838,136,1.22,137,1.344,162,3.754,170,0.638,176,5.623,178,4.403,179,2.63,180,2.728,181,2.422,182,3.11,183,2.995,184,2.995,185,2.796,186,4.182,187,2.995,188,3.455,190,2.035,191,5.185,192,3.465,194,4.599,195,4.232,196,2.624,197,2.035,198,4.226,200,2.085,201,2.035,202,5.471,203,2.906,205,2.035,206,4.117,207,4.959,209,2.035,211,2.12,213,2.035,215,1.83,216,4.226,218,2.12,238,1.027,393,0.975,625,2.218,629,2.218,630,2.218,631,2.218,632,2.218,633,2.218,634,2.218,635,2.218,636,2.218,637,2.218,638,2.218,642,2.638,643,2.867,682,2.361,892,2.995,1752,2.331,2344,2.035,2360,4.226,2362,2.331,2422,3.214,2423,3.214,2424,3.214,2425,3.214,2426,3.214,2427,3.214,2428,3.214]],["title/injectables/LocalStrategy.html",[136,1.229,863,3.8]],["body/injectables/LocalStrategy.html",[0,0.217,3,0.138,4,0.115,5,0.13,7,0.352,10,1.872,11,0.862,15,1.568,18,0.63,20,1.814,21,0.006,22,1.273,23,0.395,29,0.275,36,0.949,37,0.145,40,0.836,42,1.907,43,1.872,44,2.146,55,1.126,58,0.004,59,0.004,65,1.136,74,1.329,77,1.844,78,2.098,94,1.396,112,2.242,136,1.756,137,2.238,139,4.508,152,2.191,157,4.262,158,5.802,164,2.865,165,3.53,170,1.062,192,2.617,196,2.181,238,1.71,318,1.491,371,4.262,374,4.262,393,1.623,394,2.45,404,2.835,437,4.108,517,2.638,766,3.881,790,5.802,795,4.877,811,4.955,812,3.881,813,3.389,817,4.108,863,6.076,923,4.393,924,5.426,929,4.773,966,4.773,970,4.393,1050,3.263,1421,3.881,2075,5.74,2235,4.663,2321,6.305,2322,4.773,2324,4.773,2325,7.06,2328,5.802,2329,4.773,2331,4.773,2337,4.773,2341,6.305,2343,4.773,2429,5.351,2430,5.351,2431,5.351,2432,7.914,2433,5.351,2434,6.305,2435,5.351,2436,5.351,2437,5.351,2438,5.351,2439,5.351]],["title/classes/Logger.html",[0,0.2,10,1.731]],["body/classes/Logger.html",[0,0.208,2,0.824,3,0.132,4,0.111,5,0.125,7,0.338,8,0.823,10,2.896,11,1.009,18,0.738,21,0.006,23,0.522,24,4.568,29,0.248,37,0.225,40,0.891,55,1.233,58,0.004,59,0.004,65,0.824,112,1.454,119,3.914,121,3.388,127,1.724,128,4.082,131,4.149,132,1.611,134,1.338,162,2.058,170,1.364,200,2.711,203,1.611,318,2.307,346,3.253,349,3.108,352,2.545,353,2.53,390,2.45,394,3.147,434,3.386,438,3.25,780,2.545,787,3.979,806,2.831,1045,3.94,1050,3.129,1513,6.362,1518,6.362,2217,5.622,2224,4.986,2235,4.535,2440,4.212,2441,8.279,2442,5.131,2443,5.131,2444,5.131,2445,5.131,2446,5.131,2447,6.131,2448,4.577,2449,5.131,2450,4.212,2451,4.577,2452,4.212,2453,4.577,2454,4.577,2455,4.577,2456,4.577]],["title/controllers/LoggerController.html",[447,1.764,2457,4.063]],["body/controllers/LoggerController.html",[0,0.289,1,4.41,3,0.184,4,0.154,5,0.174,10,2.5,21,0.006,29,0.271,36,1.267,37,0.194,58,0.005,59,0.005,65,1.362,74,1.775,393,2.168,447,2.547,449,2.5,451,3.524,489,4.07,517,3.524,518,4.07,2457,6.957,2458,7.147,2459,6.147,2460,6.376,2461,7.147]],["title/modules/LoggerModule.html",[166,1.527,1493,3.59]],["body/modules/LoggerModule.html",[0,0.264,3,0.168,4,0.141,5,0.159,10,2.278,21,0.006,22,1.173,29,0.279,36,1.154,37,0.177,58,0.005,59,0.005,132,2.044,166,2.677,449,2.802,601,2.846,602,2.981,603,3.13,604,3.13,605,3.13,606,4.068,607,3.13,611,3.85,612,2.912,613,3.13,615,3.971,619,3.297,620,4.296,622,3.833,1493,6.864,2450,6.576,2457,7.123,2459,6.864,2460,5.809,2462,5.809,2463,5.809,2464,6.512,2465,5.809,2466,6.512,2467,6.512]],["title/injectables/LoggerService.html",[136,1.229,2459,3.59]],["body/injectables/LoggerService.html",[0,0.136,3,0.086,4,0.072,5,0.082,7,0.221,8,0.607,9,2.514,10,2.384,11,1.103,12,2.355,15,0.982,18,0.814,20,2.404,21,0.006,22,1.549,23,0.533,25,4.717,29,0.22,36,0.594,37,0.091,49,2.714,55,1.199,58,0.003,59,0.003,65,0.814,66,3.197,72,1.62,74,1.259,75,2.566,76,2.566,77,1.322,78,2.47,87,3.554,88,1.794,89,1.696,90,1.794,91,1.794,92,1.794,94,2.2,122,1.823,124,2.966,132,1.052,134,0.874,136,1.259,137,1.402,162,3.776,176,5.672,178,4.498,179,2.714,180,2.32,181,2.499,182,3.21,183,3.091,184,3.091,185,2.886,186,4.25,187,3.091,188,3.519,190,2.122,191,5.242,192,3.449,194,4.653,195,4.31,196,2.602,197,2.122,198,3.21,200,1.172,201,2.122,202,5.516,203,2.925,205,2.122,206,4.171,207,5.023,209,2.122,211,2.21,213,2.122,215,1.908,216,4.317,218,2.21,393,1.016,625,2.312,629,2.312,630,2.312,631,2.312,632,2.312,633,2.312,634,2.312,635,2.312,636,2.312,637,2.312,638,2.312,1751,2.572,1752,2.43,2459,3.677,2465,2.989,2468,3.35,2469,3.35,2470,3.35]],["title/controllers/ManagementController.html",[447,1.764,2471,4.063]],["body/controllers/ManagementController.html",[0,0.292,3,0.185,4,0.155,5,0.175,21,0.006,29,0.272,32,1.817,36,1.276,37,0.196,55,0.926,58,0.005,59,0.005,74,1.788,447,2.566,449,2.518,451,3.55,494,4.099,517,3.55,518,4.099,1814,5.909,2471,6.986,2472,7.199,2473,6.421,2474,6.173,2475,6.421,2476,7.199]],["title/modules/ManagementModule.html",[166,1.527,707,3.59]],["body/modules/ManagementModule.html",[0,0.242,3,0.154,4,0.129,5,0.145,18,0.532,21,0.006,29,0.278,30,2.394,36,1.058,37,0.162,55,0.768,56,1.39,58,0.005,59,0.005,77,1.557,94,1.557,166,2.707,449,2.653,515,4.465,601,2.609,602,2.732,603,2.868,604,2.868,605,2.868,606,3.91,607,2.868,611,3.646,612,2.669,613,2.868,619,4.222,707,7.026,933,3.78,1150,5.864,1495,7.439,1497,7.439,1498,5.324,1504,5.324,1505,5.324,1506,5.324,2471,6.846,2473,5.324,2474,6.716,2475,5.324,2477,5.324,2478,5.324,2479,5.324,2480,6.716,2481,5.968,2482,5.968,2483,5.968,2484,5.324,2485,5.968]],["title/injectables/ManagementService.html",[136,1.229,2474,3.59]],["body/injectables/ManagementService.html",[0,0.299,3,0.19,4,0.16,5,0.18,15,2.685,18,0.659,21,0.006,29,0.222,36,1.311,37,0.201,55,1.112,58,0.005,59,0.005,136,2.147,137,3.093,2474,6.271,2486,7.394,2487,7.394]],["title/classes/MetadataDto.html",[0,0.2,1647,3.018]],["body/classes/MetadataDto.html",[0,0.356,2,1.079,3,0.173,4,0.145,5,0.164,7,0.442,8,0.977,11,0.995,18,0.599,21,0.006,23,0.511,29,0.275,32,1.695,37,0.182,55,1.132,58,0.005,59,0.005,123,4.453,127,1.398,570,2.703,574,4.025,579,3.568,580,2.146,581,3.074,1512,4.248,1647,4.978,1661,6.29,1662,4.871,2488,6.716,2489,6.716,2490,6.716]],["title/classes/MetadataPart.html",[0,0.2,126,4.063]],["body/classes/MetadataPart.html",[0,0.244,2,0.969,3,0.155,4,0.13,5,0.147,7,0.397,8,0.914,18,0.785,21,0.006,23,0.533,29,0.229,37,0.207,40,0.887,55,1.262,58,0.005,59,0.005,65,0.969,112,1.708,121,3.337,122,1.797,126,6.267,127,1.834,128,4.343,129,4.948,131,4.367,132,1.893,134,1.572,170,1.196,293,5.781,296,5.781,297,4.586,298,6.877,299,6.877,352,2.826,353,2.972,2491,5.377,2492,6.028,2493,6.028,2494,6.028,2495,6.028,2496,5.377]],["title/classes/MetadataPartDto.html",[0,0.2,1661,3.265]],["body/classes/MetadataPartDto.html",[0,0.313,2,0.988,3,0.158,4,0.133,5,0.15,7,0.405,8,0.926,11,1.168,18,0.791,21,0.006,23,0.496,29,0.232,32,1.553,37,0.167,40,0.825,55,1.266,58,0.005,59,0.005,127,1.847,293,5.835,296,5.835,297,4.264,298,6.942,299,6.942,547,5.335,570,3.027,572,3.257,579,3.996,580,1.966,1661,5.102,2497,6.151,2498,6.897,2499,6.151,2500,6.151,2501,6.151,2502,6.151,2503,7.544]],["title/classes/MongoDbTestInstance.html",[0,0.2,2504,4.063]],["body/classes/MongoDbTestInstance.html",[0,0.226,2,0.898,3,0.144,4,0.121,5,0.136,7,0.368,8,0.871,11,0.681,18,0.811,20,1.866,21,0.006,22,1.31,23,0.479,29,0.218,37,0.152,39,2.197,40,0.752,56,1.302,58,0.005,59,0.005,77,1.897,78,2.574,94,2.233,116,4.759,134,1.458,170,1.604,194,3.085,220,5.971,232,3.857,238,2.961,352,3.17,667,3.54,678,4.589,742,3.54,772,4.292,1043,6.574,2191,4.292,2504,5.971,2505,5.59,2506,7.212,2507,7.212,2508,7.638,2509,7.638,2510,5.59,2511,7.212,2512,5.59,2513,5.59,2514,7.273,2515,5.59,2516,5.59,2517,5.59,2518,4.986,2519,7.273,2520,5.59,2521,5.59,2522,5.59,2523,5.59,2524,5.59,2525,5.59,2526,5.59,2527,5.59,2528,5.59,2529,7.273,2530,5.59,2531,5.59,2532,5.59]],["title/interfaces/MongoosePlugin.html",[38,1.334,714,3.59]],["body/interfaces/MongoosePlugin.html",[3,0.168,4,0.102,5,0.115,7,0.312,8,0.779,11,0.976,21,0.006,23,0.416,29,0.26,32,1.195,37,0.202,38,1.754,40,0.864,42,1.687,43,1.656,44,1.899,45,2.22,46,2.335,47,3.267,58,0.004,59,0.004,60,1.939,102,4.104,112,1.342,132,1.487,134,1.698,157,2.397,162,1.899,192,3.549,287,2.999,318,2.072,345,4.235,349,1.899,552,3.765,714,5.394,715,4.294,717,4.997,742,5.072,757,5.526,799,4.71,813,2.999,867,5.343,871,5.343,872,3.434,933,4.122,943,6.574,962,4.122,987,3.635,1034,3.434,1417,5.343,1418,4.224,1419,4.491,1420,6.105,1421,4.721,1422,6.105,1423,5.806,1424,5.806,1425,4.491,1426,5.343,1427,5.343,1428,4.721,1429,5.806,1430,4.224,1431,4.224,1432,4.224,1433,4.224,1434,3.887,1435,4.224,1436,7.926,1437,4.224,1438,4.224,1439,4.224,1440,4.224,1441,4.224,1442,4.224,1443,4.224,1444,4.224,1445,4.224,1446,4.224,1447,4.224,1448,4.224,1449,4.224,1450,4.224,1451,4.224,1452,4.224,1453,4.224,1454,4.224,1455,4.224,1456,4.224,1457,4.224,1458,4.224,1459,4.224]],["title/classes/MongooseValidationFilter.html",[0,0.2,725,4.063]],["body/classes/MongooseValidationFilter.html",[0,0.272,2,0.799,3,0.128,4,0.107,5,0.121,7,0.327,9,2.273,10,1.738,11,0.82,18,0.6,20,1.726,21,0.006,22,1.212,23,0.376,29,0.245,36,0.881,37,0.135,39,1.953,42,1.771,43,1.738,44,1.993,55,0.981,56,1.157,58,0.004,59,0.004,67,4.438,77,1.755,94,1.755,134,1.296,139,3.602,152,2.035,170,1.786,344,3.861,345,3.831,390,1.771,394,2.275,403,3.334,404,2.698,456,3.406,484,2.389,523,2.275,580,1.588,661,6.26,662,5.522,663,5.262,664,6.708,666,4.438,668,4.08,669,3.816,670,4.08,671,4.08,675,4.433,725,6.26,939,3.816,940,3.816,1034,3.605,1111,5.855,1122,6.001,1178,3.605,1301,4.08,1531,7.029,1542,4.642,1551,4.08,1863,4.88,2085,4.433,2143,4.433,2175,4.433,2235,3.279,2533,7.626,2534,6.727,2535,9,2536,9.155,2537,4.97,2538,6.727,2539,4.97,2540,4.97,2541,4.97,2542,4.97,2543,4.97,2544,4.97,2545,4.97,2546,4.97,2547,4.97,2548,4.97,2549,4.97,2550,4.97,2551,4.97,2552,4.97,2553,4.97,2554,4.97,2555,4.97,2556,4.97]],["title/classes/NotFoundDto.html",[0,0.2,2557,4.415]],["body/classes/NotFoundDto.html",[0,0.274,2,1.086,3,0.174,4,0.146,5,0.165,7,0.445,8,0.981,18,0.731,21,0.006,23,0.458,29,0.246,32,1.707,36,1.198,37,0.184,40,0.762,55,1.228,58,0.005,59,0.005,127,1.706,203,2.123,390,3.144,484,4.24,523,4.038,570,3.036,1575,5.55,1578,3.095,2557,7.312,2558,8.821,2559,6.761,2560,6.761,2561,6.761,2562,6.761]],["title/injectables/ObjectIdValidationPipe.html",[136,1.229,497,3.265]],["body/injectables/ObjectIdValidationPipe.html",[0,0.259,3,0.165,4,0.138,5,0.156,7,0.421,11,0.779,18,0.569,20,1.639,21,0.006,22,1.151,23,0.357,29,0.238,36,1.132,37,0.174,40,0.8,42,2.821,43,2.234,53,2.821,55,1.107,56,1.487,58,0.005,59,0.005,67,4.214,77,2.065,94,1.666,106,3.234,124,3.56,133,2.616,134,1.666,136,1.966,137,2.672,339,4.407,497,5.223,499,3.712,909,2.856,1177,4.045,1521,5.243,1523,6.498,1527,6.498,1528,7.381,2563,7.916,2564,8.602,2565,6.387,2566,7.916,2567,6.387,2568,6.387,2569,6.387,2570,6.387]],["title/classes/PaginatedFilterDto.html",[0,0.2,2571,4.415]],["body/classes/PaginatedFilterDto.html",[0,0.299,2,1.188,3,0.19,4,0.16,5,0.18,18,0.659,21,0.006,37,0.201,39,3.397,40,0.804,42,2.635,43,2.586,44,2.965,58,0.005,59,0.005,61,5.363,394,3.385,2571,7.712,2572,7.712,2573,7.394,2574,7.394]],["title/classes/PaginatedResponseDto.html",[0,0.2,33,3.8]],["body/classes/PaginatedResponseDto.html",[0,0.264,2,1.046,3,0.168,4,0.141,5,0.159,7,0.429,8,0.959,18,0.774,21,0.006,23,0.485,29,0.24,32,1.644,33,6.15,36,1.154,37,0.177,41,2.56,55,1.255,58,0.005,59,0.005,127,1.806,200,3.035,203,2.044,484,4.17,523,3.972,529,5.987,532,3.833,570,3.133,1575,5.345,1578,2.981,2572,8.075,2575,6.512,2576,8.011,2577,6.512,2578,6.512,2579,6.512]],["title/controllers/PasswdController.html",[447,1.764,2580,4.063]],["body/controllers/PasswdController.html",[0,0.156,3,0.099,4,0.083,5,0.094,7,0.253,10,1.965,11,0.89,18,0.651,20,1.873,21,0.006,22,1.315,23,0.408,29,0.257,32,0.972,36,0.682,37,0.105,42,2.003,43,1.965,44,2.254,45,2.635,46,2.771,53,1.372,55,1.184,56,1.699,58,0.003,59,0.003,72,1.23,74,0.956,77,1.466,78,2.416,94,1.904,127,1.519,152,1.576,165,5.121,170,1.448,196,2.647,200,2.321,203,2.545,238,2.332,371,4.344,394,2.572,395,3.308,396,3.308,402,3.707,447,1.372,449,1.346,451,1.898,456,4.658,457,4.766,461,5.386,484,1.85,487,2.265,494,2.191,517,1.898,531,2.347,532,4.296,612,3.264,672,5.232,682,4.124,773,5.036,780,3.001,1267,4.815,1310,5.036,1318,5.012,1326,2.955,1327,4.314,1328,2.955,1329,4.314,1330,5.036,1331,2.955,1337,4.379,1354,2.955,1634,7.805,2328,4.613,2580,4.613,2581,3.849,2582,5.619,2583,5.012,2584,5.619,2585,3.849,2586,3.849,2587,7.298,2588,3.849,2589,4.314,2590,3.849,2591,3.849,2592,3.849,2593,7.298,2594,7.298,2595,3.849,2596,3.849,2597,5.012,2598,3.849,2599,3.849,2600,5.619,2601,3.849,2602,3.849,2603,5.991,2604,3.849,2605,3.849,2606,3.433,2607,7.762,2608,3.849,2609,3.849,2610,3.849,2611,3.849,2612,3.849,2613,7.298,2614,3.849,2615,3.849,2616,3.849,2617,3.849,2618,3.849,2619,6.637,2620,3.849,2621,3.849,2622,3.849,2623,3.849,2624,3.849,2625,3.849,2626,3.849,2627,3.849,2628,3.849,2629,3.849,2630,3.849,2631,3.849]],["title/modules/PasswdModule.html",[166,1.527,2480,3.59]],["body/modules/PasswdModule.html",[0,0.26,3,0.166,4,0.139,5,0.157,21,0.006,29,0.278,36,1.139,37,0.175,58,0.005,59,0.005,166,2.662,449,2.78,601,2.81,602,2.943,603,3.09,604,3.09,605,3.09,606,4.045,607,3.09,611,3.82,612,2.875,613,3.09,619,4.024,1145,6.224,1150,5.974,1337,6.224,1398,5.734,2480,7.108,2484,5.734,2580,7.082,2606,5.734,2632,5.734,2633,5.734,2634,6.428,2635,6.428,2636,6.428]],["title/injectables/PasswdService.html",[136,1.229,1337,3.265]],["body/injectables/PasswdService.html",[0,0.135,3,0.086,4,0.072,5,0.081,7,0.22,8,0.605,9,2.452,10,2.133,11,1.027,12,2.348,15,1.48,18,0.798,20,1.875,21,0.006,22,1.317,23,0.494,29,0.265,36,0.591,37,0.091,38,1.362,40,0.783,41,1.948,53,1.189,55,1.198,56,1.584,58,0.003,59,0.003,65,0.812,66,3.745,72,1.948,73,4.702,74,2.298,75,2.558,76,2.558,77,1.318,78,2.396,87,2.673,88,1.786,89,1.689,90,1.786,91,1.786,92,1.786,94,1.774,100,1.603,101,2.034,102,1.84,106,1.689,112,1.431,136,1.255,137,1.395,165,3.333,170,1.704,196,2.538,200,1.167,222,2.561,238,2.691,327,1.645,349,2.728,393,1.011,399,1.564,403,1.458,404,1.338,515,5.206,612,2.259,682,2.428,764,2.302,773,4.693,776,2.787,777,3.265,806,2.787,909,3.042,918,3.878,925,3.878,926,3.486,963,3.878,995,3.878,998,2.561,1066,4.004,1067,2.419,1073,3.199,1159,4.308,1164,2.302,1177,2.112,1183,3.589,1188,1.963,1193,2.419,1310,4.693,1313,2.419,1321,2.561,1322,2.738,1323,2.738,1324,2.738,1325,2.738,1326,2.561,1327,2.561,1328,2.561,1329,3.878,1330,4.693,1331,2.561,1332,2.738,1333,4.681,1334,5.222,1335,5.583,1336,3.878,1337,3.333,1338,5.005,1339,3.878,1340,5.005,1341,3.878,1342,5.005,1343,4.147,1344,4.147,1345,4.147,1346,5.005,1347,4.147,1348,5.005,1349,4.681,1350,2.738,1351,2.738,1352,4.147,1353,4.147,1354,3.878,1355,2.738,1356,2.738,1357,2.738,1358,2.738,1359,5.583,1360,2.738,1361,2.738,1362,2.561,1363,5.005,1364,2.738,1365,2.738,1366,2.738,1367,2.738,1368,4.147,1369,2.738,1370,2.738,1371,2.738,1372,2.738,1373,2.738,1374,2.738,1375,2.738,1376,2.738,1377,2.738,1378,2.738,1379,2.738,1380,2.738,1381,2.738,1382,4.147,1383,2.738,1384,4.147,1385,2.738,1386,2.738,1387,2.738,2597,5.439,2637,5.052,2638,3.335,2639,5.052,2640,3.335,2641,3.335,2642,3.335,2643,3.335,2644,3.335,2645,3.335,2646,3.335]],["title/interfaces/RawBodyBufferOptions.html",[38,1.334,2647,4.415]],["body/interfaces/RawBodyBufferOptions.html",[3,0.171,4,0.143,5,0.162,7,0.437,8,0.971,11,1.159,21,0.006,23,0.489,29,0.199,37,0.22,38,1.79,40,0.91,56,1.547,58,0.005,59,0.005,60,2.72,318,1.851,457,4.617,1050,4.05,1427,5.452,1428,6.897,2647,7.807,2648,6.641,2649,6.641,2650,9.115,2651,9.115,2652,5.924,2653,6.641,2654,6.641,2655,8.108,2656,6.641,2657,6.641]],["title/classes/ResetPasswordDto.html",[0,0.2,1330,3.415]],["body/classes/ResetPasswordDto.html",[0,0.327,2,1.06,3,0.17,4,0.142,5,0.161,7,0.434,8,0.967,18,0.72,21,0.006,23,0.451,29,0.242,32,1.666,37,0.179,40,0.846,53,2.878,58,0.005,59,0.005,127,1.681,371,3.34,570,2.89,572,3.361,580,2.108,682,4.484,778,5.416,780,3.367,784,5.416,787,3.881,1312,5.885,1313,6.33,1315,7.203,1330,5.572,2658,8.727,2659,6.598,2660,6.598,2661,7.203,2662,6.598]],["title/classes/SecurityPart.html",[0,0.2,425,4.063]],["body/classes/SecurityPart.html",[0,0.219,2,0.871,3,0.14,4,0.117,5,0.132,7,0.357,8,0.853,11,1.138,18,0.804,21,0.006,23,0.54,29,0.214,37,0.194,40,0.918,55,1.274,58,0.004,59,0.004,65,0.871,112,2.256,121,3.115,122,1.615,127,1.878,128,4.449,131,4.421,132,1.701,134,1.413,170,1.075,203,2.656,349,3.393,352,2.639,353,2.672,425,5.85,426,4.448,552,4.283,2346,5.495,2663,4.833,2664,7.103,2665,7.103,2666,7.103,2667,7.103,2668,7.103,2669,5.419,2670,5.419,2671,5.419,2672,5.419,2673,5.419,2674,5.419,2675,4.833]],["title/classes/SecurityPartDTO.html",[0,0.2,560,3.415]],["body/classes/SecurityPartDTO.html",[0,0.289,2,0.872,3,0.14,4,0.117,5,0.132,7,0.357,8,0.854,11,1.162,18,0.805,21,0.006,23,0.528,29,0.214,32,1.37,37,0.147,40,0.904,55,1.274,58,0.004,59,0.004,127,1.879,203,2.502,318,2.221,547,4.923,552,3.612,553,4.456,557,6.543,558,4.456,560,4.923,570,3.047,572,3.476,576,4.707,577,5.361,579,3.946,580,1.735,586,4.148,2346,5.5,2664,7.11,2665,7.11,2666,7.11,2667,7.11,2668,7.11,2676,5.428,2677,7.135,2678,5.428,2679,5.428,2680,5.428,2681,5.428,2682,5.428,2683,5.428]],["title/interfaces/ServiceSchemaInterface.html",[38,1.334,229,4.063]],["body/interfaces/ServiceSchemaInterface.html",[3,0.09,4,0.075,5,0.085,7,0.229,11,1.016,18,0.743,20,2.375,21,0.006,22,1.501,23,0.517,25,4.716,29,0.156,37,0.094,38,0.938,41,1.111,42,1.858,43,1.217,58,0.003,59,0.003,60,1.424,77,1.36,94,2.173,119,1.981,121,1.521,122,1.864,124,3.281,133,1.424,134,0.907,162,3.955,179,2.792,180,2.387,181,2.571,182,3.961,183,3.814,184,3.814,185,3.561,186,4.311,190,3.302,191,5.503,192,3.558,194,4.788,195,4.769,196,2.855,197,3.302,198,4.4,200,1.217,201,3.302,202,5.819,203,3.096,205,2.203,206,4.519,207,5.503,209,2.203,213,2.203,215,1.981,216,4.4,223,2.855,225,2.523,229,4.28,231,3.103,339,2.4,499,2.445,2684,3.478,2685,3.478,2686,3.478,2687,3.478,2688,3.478,2689,3.478,2690,3.478,2691,3.478,2692,3.478,2693,3.478]],["title/classes/StatePart.html",[0,0.2,428,4.063]],["body/classes/StatePart.html",[0,0.221,2,0.877,3,0.141,4,0.118,5,0.133,7,0.359,8,0.857,11,1.14,18,0.785,21,0.006,23,0.537,29,0.24,37,0.195,40,0.789,41,2.711,53,1.945,55,1.263,58,0.004,59,0.004,65,0.877,112,1.546,121,3.13,122,1.627,127,1.834,128,4.183,131,4.345,132,1.714,134,1.424,170,1.083,203,2.248,297,4.676,318,1.995,346,2.145,349,3.402,352,2.651,353,2.691,428,5.878,429,4.48,1055,5.796,1578,3.278,2347,5.514,2694,4.869,2695,7.128,2696,7.128,2697,7.128,2698,4.869,2699,7.128,2700,5.458,2701,5.458,2702,5.458,2703,5.458,2704,5.458,2705,4.869,2706,5.458,2707,5.458,2708,5.458,2709,4.869]],["title/classes/StatePartDTO.html",[0,0.2,563,3.59]],["body/classes/StatePartDTO.html",[0,0.305,2,0.949,3,0.152,4,0.128,5,0.144,7,0.389,8,0.902,11,1.158,18,0.805,21,0.006,23,0.505,29,0.226,32,1.492,37,0.161,40,0.701,41,2.409,55,1.274,58,0.005,59,0.005,127,1.88,297,4.439,547,4.077,563,5.468,570,3.058,572,2.903,573,4.292,579,3.948,580,1.888,1055,6.021,1700,5.201,2347,5.728,2498,7.404,2503,7.799,2695,7.404,2696,7.404,2697,7.404,2710,5.909,2711,5.909,2712,5.909,2713,5.909,2714,5.909,2715,5.909,2716,5.909]],["title/classes/SyncIdentitiesDto.html",[0,0.2,1094,4.063]],["body/classes/SyncIdentitiesDto.html",[0,0.339,2,1.124,3,0.18,4,0.151,5,0.17,7,0.461,8,1.002,18,0.624,21,0.006,23,0.468,29,0.251,32,1.767,37,0.19,40,0.778,55,1.152,58,0.005,59,0.005,127,1.457,348,5.3,570,2.771,577,5.3,580,2.236,908,4.94,1094,6.869,2717,8.368,2718,6.998,2719,6.998,2720,6.998]],["title/classes/Tasks.html",[0,0.2,1196,3.415]],["body/classes/Tasks.html",[0,0.268,2,1.065,3,0.171,4,0.143,5,0.161,7,0.436,8,0.969,11,0.987,18,0.591,21,0.006,23,0.489,29,0.262,37,0.238,55,1.125,58,0.005,59,0.005,65,1.065,112,1.878,119,4.611,121,3.54,124,3.367,127,1.38,128,3.268,131,3.892,132,2.081,133,2.714,134,1.728,170,1.315,203,2.081,352,2.998,353,3.268,434,4.372,438,4.197,1188,5.147,1196,6.034,2721,5.44,2722,6.627,2723,5.911,2724,5.44,2725,5.911]],["title/controllers/TasksController.html",[447,1.764,2726,4.063]],["body/controllers/TasksController.html",[0,0.289,1,4.41,3,0.184,4,0.154,5,0.174,21,0.006,29,0.271,36,1.267,37,0.194,58,0.005,59,0.005,65,1.362,74,1.775,393,2.168,447,2.547,449,2.5,451,3.524,489,4.07,517,3.524,518,4.07,1161,5.848,1196,4.932,2726,6.957,2727,7.147,2728,6.376,2729,7.147]],["title/modules/TasksModule.html",[166,1.527,1152,3.415]],["body/modules/TasksModule.html",[0,0.258,3,0.164,4,0.137,5,0.155,21,0.006,22,1.146,29,0.277,36,1.127,37,0.173,58,0.005,59,0.005,132,1.997,166,2.649,449,2.761,601,2.78,602,2.911,603,3.057,604,3.057,605,3.057,606,4.026,607,4.127,611,3.795,612,2.844,613,3.057,615,3.878,619,3.22,620,4.196,622,3.744,1152,6.582,1161,6.819,1196,4.389,2724,6.481,2726,7.048,2728,5.673,2730,5.673,2731,5.673,2732,5.673,2733,6.36,2734,5.673,2735,6.36,2736,6.36]],["title/injectables/TasksService.html",[136,1.229,1161,3.415]],["body/injectables/TasksService.html",[0,0.135,3,0.086,4,0.072,5,0.081,7,0.22,8,0.606,9,2.512,10,2.136,11,1.102,12,2.351,15,0.98,18,0.813,20,2.403,21,0.006,22,1.548,23,0.533,25,4.715,29,0.22,36,0.593,37,0.091,49,2.71,55,1.211,58,0.003,59,0.003,65,0.813,66,3.193,72,1.617,74,1.257,75,2.562,76,2.562,77,1.32,78,2.469,87,3.553,88,1.79,89,1.692,90,1.79,91,1.79,92,1.79,94,2.198,122,1.82,124,2.964,132,1.05,134,0.872,136,1.257,137,1.398,162,3.775,176,5.669,178,4.493,179,2.71,180,2.316,181,2.495,182,3.205,183,3.086,184,3.086,185,2.881,186,4.247,187,3.086,188,3.516,190,2.117,191,5.239,192,3.448,194,4.65,195,4.306,196,2.6,197,2.117,198,3.205,200,1.169,201,2.117,202,5.514,203,2.924,205,2.117,206,4.168,207,5.02,209,2.117,211,2.206,213,2.117,215,1.903,216,4.312,218,2.206,393,1.014,625,2.307,629,2.307,630,2.307,631,2.307,632,2.307,633,2.307,634,2.307,635,2.307,636,2.307,637,2.307,638,2.307,1161,3.492,1196,2.307,1751,2.566,1752,2.425,2734,2.982,2737,3.343,2738,3.343,2739,3.343]],["title/interfaces/TicketForm.html",[38,1.334,2740,3.8]],["body/interfaces/TicketForm.html",[3,0.144,4,0.12,5,0.136,7,0.367,8,0.87,21,0.006,23,0.545,29,0.218,38,2.177,40,0.934,41,2.321,42,2.589,43,1.952,58,0.005,59,0.005,60,2.285,188,2.682,339,3.85,354,4.605,355,2.904,356,2.904,419,2.913,780,3.168,909,2.495,1595,5.052,1596,5.419,1597,5.218,1598,4.113,1608,5.052,1610,3.402,1679,3.85,1680,3.85,1681,3.85,1682,3.85,1683,3.85,1684,3.85,1685,3.85,1686,4.43,1687,3.85,1701,6.435,1724,3.534,1738,5.577,1739,4.284,2740,5.577,2741,4.58,2742,5.269,2743,5.859]],["title/interfaces/TicketFormField.html",[38,1.334,2742,3.59]],["body/interfaces/TicketFormField.html",[3,0.134,4,0.112,5,0.127,7,0.343,8,0.83,21,0.006,23,0.556,29,0.208,38,2.104,40,0.926,41,2.85,42,2.472,43,1.82,58,0.004,59,0.004,60,2.131,188,4.001,339,3.59,354,4.516,355,2.707,356,2.707,419,3.794,780,1.926,909,3.723,1595,3.95,1596,3.295,1597,3.173,1598,2.501,1608,4.444,1610,3.173,1679,5.744,1680,5.744,1681,5.744,1682,5.744,1683,5.744,1684,5.744,1685,5.744,1686,5.288,1687,5.744,1701,6.29,1724,3.295,1738,5.326,1739,3.994,2740,3.994,2741,4.271,2742,5.661,2743,5.661]],["title/interfaces/TicketFormSection.html",[38,1.334,2743,3.59]],["body/interfaces/TicketFormSection.html",[3,0.146,4,0.123,5,0.138,7,0.374,8,0.88,11,0.896,21,0.006,23,0.547,29,0.221,38,2.197,40,0.925,41,2.35,42,2.621,43,1.989,58,0.005,59,0.005,60,2.328,188,2.733,339,3.923,354,4.628,355,2.959,356,2.959,419,3.456,780,2.105,909,2.542,1595,5.082,1596,3.601,1597,3.467,1598,2.733,1608,5.082,1610,3.467,1679,3.923,1680,3.923,1681,3.923,1682,3.923,1683,3.923,1684,3.923,1685,3.923,1686,5.442,1687,3.923,1701,6.473,1724,5.458,1738,5.646,1739,4.365,2740,4.365,2741,4.667,2742,5.334,2743,6.251]],["title/interfaces/TokenData.html",[38,1.334,1333,3.8]],["body/interfaces/TokenData.html",[0,0.172,3,0.109,4,0.092,5,0.103,7,0.28,8,0.722,9,1.798,15,1.244,21,0.006,23,0.392,29,0.279,36,0.753,37,0.115,38,1.626,40,0.863,53,1.513,55,1.153,56,1.778,58,0.004,59,0.004,60,1.739,65,0.682,66,2.828,72,1.357,73,4.129,74,2.141,78,2.222,100,2.041,101,2.589,102,2.343,106,2.15,112,1.709,136,1.498,170,1.803,196,2.356,222,3.26,238,2.864,327,2.094,393,1.288,399,1.991,403,1.856,404,1.703,515,4.495,682,2.041,764,2.93,773,4.162,776,3.328,777,3.756,806,3.328,918,3.26,925,4.63,926,4.162,963,4.63,995,4.63,998,3.26,1066,3.55,1067,3.08,1073,2.689,1159,3.82,1164,2.93,1177,2.689,1183,2.499,1188,2.499,1193,3.08,1310,4.162,1313,3.08,1321,3.26,1322,3.485,1323,3.485,1324,3.485,1325,3.485,1326,3.26,1327,3.26,1328,3.26,1329,4.63,1330,4.162,1331,3.26,1332,3.485,1333,5.863,1334,6.618,1335,7.076,1336,6.193,1337,2.801,1338,3.485,1339,3.26,1340,3.485,1341,3.26,1342,3.485,1343,3.485,1344,3.485,1345,3.485,1346,3.485,1347,3.485,1348,5.758,1349,5.385,1350,3.485,1351,3.485,1352,3.485,1353,3.485,1354,4.63,1355,3.485,1356,3.485,1357,3.485,1358,3.485,1359,6.269,1360,3.485,1361,3.485,1362,3.26,1363,5.758,1364,3.485,1365,3.485,1366,3.485,1367,3.485,1368,3.485,1369,3.485,1370,3.485,1371,3.485,1372,3.485,1373,3.485,1374,3.485,1375,3.485,1376,3.485,1377,3.485,1378,3.485,1379,3.485,1380,3.485,1381,3.485,1382,3.485,1383,3.485,1384,4.951,1385,3.485,1386,3.485,1387,3.485]],["title/classes/ValidationConfigException.html",[0,0.2,1981,3.415]],["body/classes/ValidationConfigException.html",[0,0.321,2,0.863,3,0.138,4,0.116,5,0.131,7,0.354,8,0.848,11,0.655,15,1.574,18,0.752,20,1.378,21,0.006,22,0.967,23,0.396,29,0.213,36,0.952,37,0.215,56,1.65,58,0.004,59,0.004,65,1.355,70,3.058,72,2.533,74,1.969,77,1.848,87,3.115,94,1.848,108,3.161,170,1.673,344,4.557,345,4.99,352,1.988,390,2.525,523,3.629,666,3.543,908,3.909,1143,3.543,1178,5.139,1545,4.126,1981,4.888,2086,6.656,2127,3.895,2236,5.817,2589,5.439,2744,4.123,2745,6.92,2746,6.92,2747,6.92,2748,7.151,2749,5.37,2750,4.79,2751,4.79,2752,4.79,2753,4.408,2754,4.408,2755,5.439,2756,4.123,2757,5.439,2758,5.439,2759,4.408,2760,4.408,2761,6.508,2762,4.408,2763,4.408,2764,5.816]],["title/classes/ValidationException.html",[0,0.2,2086,3.59]],["body/classes/ValidationException.html",[0,0.323,2,0.872,3,0.14,4,0.117,5,0.132,7,0.357,8,0.854,11,0.662,15,1.591,18,0.755,20,1.393,21,0.006,22,0.978,23,0.399,29,0.214,36,0.962,37,0.217,56,1.662,58,0.004,59,0.004,65,1.36,70,3.091,72,2.547,74,1.98,77,1.861,94,1.861,108,3.195,170,1.68,344,4.57,345,5.007,352,2.01,390,2.543,523,3.649,666,3.581,908,3.937,1143,3.581,1178,5.781,1545,4.148,1981,3.746,2086,6.14,2127,3.937,2236,5.842,2589,5.478,2744,4.168,2745,6.949,2746,6.949,2747,6.949,2748,7.168,2753,4.456,2754,4.456,2755,5.478,2756,4.168,2757,5.478,2758,5.478,2759,4.456,2760,4.456,2761,6.543,2762,4.456,2763,4.456,2764,5.857,2765,7.135,2766,5.428,2767,5.428]],["title/interfaces/ValidationRecursive.html",[38,1.334,1524,4.063]],["body/interfaces/ValidationRecursive.html",[0,0.206,3,0.131,4,0.11,5,0.124,9,1.519,10,1.783,18,0.454,21,0.006,29,0.232,30,2.044,36,0.903,37,0.138,38,1.374,39,2.688,40,0.768,53,1.816,55,0.994,56,1.923,58,0.004,59,0.004,60,2.087,61,3.697,65,0.819,74,1.266,78,1.351,123,3.464,136,1.7,139,4.421,152,2.087,170,1.638,181,2.513,196,1.573,238,1.628,253,3.913,318,1.907,344,4.662,390,2.438,393,1.546,404,2.744,451,3.374,484,2.45,523,2.333,537,3.775,728,5.253,734,3.517,909,2.279,939,3.913,940,3.913,1177,4.333,1267,3.363,1520,6.103,1521,4.184,1522,6.103,1523,4.184,1524,6.777,1527,4.184,1528,5.617,1530,4.546,1531,5.93,1533,5.617,1534,4.546,1535,4.546,1536,4.546,1537,4.546,1538,4.546,1539,4.546,1540,4.963,1541,4.546,1542,4.721,1543,4.184,1544,2.333,1545,2.652,1546,4.546,1547,3.913,1548,4.546,1549,4.546,1550,4.546,1551,4.184,1552,4.546,1553,4.546,1554,4.546,1555,4.546,1556,4.546,1557,4.546,1558,6.103,1559,4.546,1560,4.546,1561,4.546,1562,4.546,1563,4.546,1564,4.546,1565,6.103,1566,4.546,1567,4.546,1568,4.546,2768,5.097]],["title/classes/ValidationSchemaException.html",[0,0.2,2127,3.59]],["body/classes/ValidationSchemaException.html",[0,0.321,2,0.863,3,0.138,4,0.116,5,0.131,7,0.354,8,0.848,11,0.655,15,1.574,18,0.752,20,1.378,21,0.006,22,0.967,23,0.396,29,0.213,36,0.952,37,0.215,56,1.65,58,0.004,59,0.004,65,1.355,70,3.058,72,2.533,74,1.969,77,1.848,87,3.115,94,1.848,108,3.161,170,1.673,344,4.557,345,4.99,352,1.988,390,2.525,523,3.629,666,3.543,908,3.909,1143,3.543,1178,5.139,1545,4.126,1981,3.705,2086,6.656,2127,5.139,2236,5.817,2589,5.439,2744,4.123,2745,6.92,2746,6.92,2747,6.92,2748,7.151,2750,4.79,2751,4.79,2752,4.79,2753,4.408,2754,4.408,2755,5.439,2756,4.123,2757,5.439,2758,5.439,2759,4.408,2760,4.408,2761,6.508,2762,4.408,2763,4.408,2764,5.816,2769,5.37]],["title/classes/VerifyTokenDto.html",[0,0.2,2603,4.063]],["body/classes/VerifyTokenDto.html",[0,0.337,2,1.111,3,0.178,4,0.149,5,0.168,7,0.455,8,0.995,18,0.617,21,0.006,23,0.387,29,0.249,32,1.746,37,0.188,40,0.773,58,0.005,59,0.005,127,1.44,570,2.752,572,3.2,580,2.21,682,4.543,775,6.17,778,5.678,780,3.077,787,3.325,2583,6.17,2603,6.822,2661,7.413,2770,8.31,2771,8.31,2772,6.917,2773,6.917]],["title/interfaces/WorkerResultInfoInterface.html",[38,1.334,2774,4.063]],["body/interfaces/WorkerResultInfoInterface.html",[3,0.184,4,0.154,5,0.174,18,0.637,21,0.006,29,0.215,37,0.23,38,2.284,40,0.84,41,2.284,58,0.005,59,0.005,60,2.927,61,5.184,200,2.5,672,4.358,684,5.168,1058,5.487,1059,5.184,1060,4.932,1213,4.527,2774,7.416,2775,7.559,2776,7.559,2777,7.147,2778,6.376,2779,5.867]],["title/interfaces/WorkerResultInterface.html",[38,1.334,2779,4.063]],["body/interfaces/WorkerResultInterface.html",[3,0.177,4,0.148,5,0.167,7,0.452,8,0.991,21,0.006,23,0.497,29,0.206,37,0.225,38,2.231,40,0.857,41,2.838,58,0.005,59,0.005,60,2.813,200,3.225,672,5.622,684,4.189,1058,5.274,1059,4.983,1060,4.74,1213,5.839,2774,7.568,2775,6.128,2776,6.128,2778,6.128,2779,6.794]],["title/classes/additionalFieldsPartDto.html",[0,0.2,1885,3.134]],["body/classes/additionalFieldsPartDto.html",[0,0.253,2,1.003,3,0.161,4,0.135,5,0.152,7,0.411,8,0.934,11,0.951,18,0.759,21,0.006,22,1.607,23,0.542,29,0.187,32,1.576,37,0.17,39,3.345,40,0.883,58,0.005,59,0.005,127,1.772,203,1.959,261,3.813,342,4.917,343,4.559,344,4.648,348,4.941,419,3.129,570,2.953,1885,4.941,1889,5.148,2780,6.241,2781,8.513,2782,6.241,2783,6.241,2784,6.241]],["title/dependencies.html",[602,2.719,757,2.868]],["body/dependencies.html",[0,0.297,21,0.006,24,3.125,30,2.272,32,1.43,36,1.004,58,0.005,59,0.005,97,3.908,100,3.526,101,3.454,102,3.125,103,3.587,123,2.868,132,1.778,133,2.319,134,1.477,139,3.928,152,2.319,153,4.649,154,4.349,232,3.908,352,2.097,382,4.473,383,3.454,437,4.349,505,3.908,580,1.81,581,2.593,602,2.593,641,4.649,710,4.649,757,3.908,761,3.908,766,4.108,799,3.587,813,3.587,849,4.649,872,4.108,1420,4.649,1421,5.901,1422,4.649,1425,3.908,1540,4.108,1962,5.632,1979,3.908,2123,6.022,2652,5.052,2785,5.664,2786,5.664,2787,5.664,2788,5.664,2789,5.664,2790,7.336,2791,5.664,2792,5.664,2793,5.664,2794,5.664,2795,5.664,2796,5.664,2797,5.664,2798,5.664,2799,5.664,2800,5.664,2801,7.336,2802,5.664,2803,5.664,2804,5.664,2805,5.664,2806,5.664,2807,5.664,2808,5.664,2809,5.664,2810,5.664,2811,5.664,2812,5.664,2813,8.605,2814,5.664,2815,5.664,2816,5.664,2817,5.664,2818,5.664,2819,5.664,2820,5.664,2821,5.664,2822,5.664,2823,5.664,2824,5.664,2825,5.664,2826,5.664,2827,5.664,2828,5.664,2829,5.664,2830,5.664,2831,5.664,2832,5.664,2833,5.664]],["title/miscellaneous/enumerations.html",[2834,2.868,2835,5.299]],["body/miscellaneous/enumerations.html",[7,0.371,21,0.006,40,0.524,41,1.8,58,0.005,59,0.005,285,4.172,297,2.707,300,3.108,304,6.229,335,3.567,667,3.567,909,4.473,1057,4.623,1140,4.623,1143,3.716,1164,5.043,1181,4.302,1186,6,1202,5.043,1230,6,1268,5.024,1466,5.611,1608,4.162,1762,4.822,1818,5.024,1822,5.024,2014,4.623,2187,4.324,2189,5.611,2193,5.611,2705,6.519,2834,3.886,2835,5.024,2836,5.632,2837,7.309,2838,5.024,2839,6.519,2840,8.114,2841,5.632,2842,7.309,2843,5.632,2844,5.024,2845,5.632,2846,5.632,2847,5.632,2848,5.632,2849,5.632,2850,7.309,2851,7.309,2852,7.309,2853,7.309,2854,7.309,2855,7.309,2856,7.309,2857,5.024,2858,5.632,2859,5.632,2860,5.632,2861,5.632,2862,5.632,2863,5.632,2864,5.632,2865,5.632,2866,5.632,2867,5.632,2868,5.024,2869,3.567,2870,5.024,2871,5.024,2872,5.632,2873,5.632,2874,5.632,2875,5.632,2876,5.632,2877,5.632,2878,5.632,2879,5.632,2880,5.632,2881,5.632,2882,5.632,2883,5.632,2884,5.632,2885,5.632,2886,5.632]],["title/index.html",[7,0.274,2887,3.707,2888,3.707]],["body/index.html",[4,0.093,21,0.006,58,0.004,59,0.004,60,2.503,73,4.963,79,3.137,97,4.889,100,2.079,232,4.217,357,2.251,601,2.671,663,2.985,750,3.551,780,1.602,787,2.079,799,2.739,822,3.551,962,2.739,1060,2.985,1073,2.739,1230,3.551,1419,2.985,1544,4.299,1830,3.597,1833,4.329,1834,3.372,1835,4.217,1838,2.854,1874,2.638,1888,2.985,1890,3.272,1896,4.748,1900,4.227,1901,4.124,1915,2.638,2141,5.141,2145,4.433,2146,5.21,2178,5.016,2217,3.137,2224,3.137,2869,3.87,2889,6.321,2890,4.326,2891,7.114,2892,6.321,2893,3.858,2894,5.817,2895,3.551,2896,3.551,2897,5.564,2898,5.016,2899,5.489,2900,3.551,2901,3.551,2902,5.313,2903,3.858,2904,3.858,2905,3.858,2906,3.858,2907,3.858,2908,3.321,2909,3.858,2910,6.111,2911,6.111,2912,5.451,2913,5.451,2914,3.137,2915,3.858,2916,3.858,2917,6.321,2918,6.111,2919,6.111,2920,2.638,2921,4.326,2922,6.321,2923,3.858,2924,4.692,2925,4.326,2926,5.451,2927,3.87,2928,6.668,2929,4.326,2930,4.326,2931,4.326,2932,4.326,2933,3.137,2934,3.858,2935,4.326,2936,4.326,2937,5.451,2938,4.326,2939,3.551,2940,4.692,2941,4.326,2942,3.321,2943,3.321,2944,3.858,2945,3.858,2946,3.551,2947,3.858,2948,3.858,2949,3.551,2950,2.854,2951,3.858,2952,3.551,2953,3.858,2954,3.551,2955,3.858,2956,3.858,2957,4.326,2958,2.985,2959,3.858,2960,3.858,2961,2.985,2962,4.326,2963,3.858,2964,3.551,2965,3.858,2966,3.858,2967,3.551,2968,3.858,2969,3.858,2970,3.858,2971,3.858,2972,3.858,2973,3.551,2974,3.858,2975,2.985,2976,3.87,2977,3.858,2978,3.858,2979,3.858,2980,3.858,2981,3.321,2982,3.321,2983,3.858,2984,3.551,2985,3.858,2986,4.326,2987,4.326,2988,4.326,2989,4.326,2990,4.326,2991,3.551,2992,3.321,2993,3.858,2994,4.326,2995,3.858,2996,3.858,2997,3.858,2998,3.321,2999,4.326,3000,4.326,3001,4.326,3002,4.326,3003,4.326,3004,4.326,3005,4.326,3006,2.985,3007,4.326,3008,3.858,3009,4.692,3010,4.326,3011,4.326,3012,4.326,3013,4.326,3014,3.321,3015,3.321,3016,4.326,3017,4.326,3018,4.326,3019,2.854,3020,4.326,3021,4.326,3022,4.326,3023,4.326,3024,4.326,3025,3.137,3026,4.326]],["title/classes/inetOrgPerson.html",[0,0.2,357,2.576]],["body/classes/inetOrgPerson.html",[0,0.172,2,0.682,3,0.109,4,0.092,5,0.103,7,0.28,8,0.722,11,1.196,18,0.859,21,0.006,23,0.538,29,0.181,37,0.164,40,0.93,58,0.004,59,0.004,65,0.682,112,1.203,121,2.636,122,1.266,127,2.005,131,4.785,132,1.333,134,1.107,170,0.842,285,2.828,318,2.562,346,3.169,352,2.233,353,2.094,357,3.139,414,3.289,422,3.08,776,3.87,777,3.756,1598,3.371,1760,3.485,2698,7.195,3027,3.787,3028,4.442,3029,5.088,3030,4.836,3031,4.836,3032,4.442,3033,4.442,3034,4.442,3035,4.442,3036,4.442,3037,4.442,3038,4.442,3039,4.442,3040,4.442,3041,4.442,3042,4.246,3043,4.246,3044,4.246,3045,4.246,3046,4.246,3047,4.246,3048,4.246,3049,4.246,3050,4.246,3051,4.246,3052,4.246,3053,4.246,3054,4.246,3055,4.246,3056,4.246,3057,4.246,3058,4.246,3059,4.246,3060,3.787]],["title/classes/inetOrgPersonCreateDto.html",[0,0.2,3061,3.8]],["body/classes/inetOrgPersonCreateDto.html",[0,0.299,2,0.632,3,0.101,4,0.085,5,0.096,7,0.259,8,0.684,11,1.193,18,0.85,21,0.006,23,0.533,29,0.171,32,0.993,37,0.183,40,0.925,58,0.004,59,0.004,65,0.917,112,2.617,127,1.985,346,3.596,414,3.151,570,3.171,571,1.94,572,3.672,575,3.94,579,4.099,580,1.257,776,3.709,777,3.599,1598,3.23,1654,4.67,1904,2.316,3028,4.256,3029,4.875,3030,4.256,3031,4.256,3032,4.256,3033,4.256,3034,4.256,3035,4.256,3036,4.256,3037,4.256,3038,4.256,3039,4.256,3040,4.256,3041,4.256,3061,5.16,3062,3.23,3063,3.934,3064,5.093,3065,3.934,3066,7.972,3067,8.075,3068,3.934,3069,3.934,3070,3.934,3071,3.934,3072,3.934,3073,3.934,3074,3.509,3075,3.934,3076,3.509,3077,3.934,3078,3.934,3079,3.934,3080,3.934,3081,3.934,3082,3.934,3083,3.934,3084,3.934,3085,3.934,3086,3.021,3087,3.23]],["title/classes/inetOrgPersonDto.html",[0,0.2,1904,2.913]],["body/classes/inetOrgPersonDto.html",[0,0.292,2,0.602,3,0.097,4,0.081,5,0.091,7,0.247,8,0.66,11,1.188,18,0.845,21,0.006,23,0.529,29,0.165,32,0.946,37,0.178,40,0.922,58,0.003,59,0.003,65,1.05,87,3.722,112,2.594,127,1.972,346,3.562,414,3.065,570,3.151,571,1.848,572,3.647,575,3.803,579,4.067,580,1.197,776,3.606,777,3.5,1598,3.141,1654,4.563,1904,3.244,3028,4.139,3029,4.741,3030,4.139,3031,4.139,3032,4.139,3033,4.139,3034,4.139,3035,4.139,3036,4.139,3037,4.139,3038,4.139,3039,4.139,3040,4.139,3041,4.139,3061,7.366,3062,3.076,3064,4.916,3066,7.882,3067,7.992,3074,3.343,3076,3.343,3086,2.877,3087,3.076,3088,3.748,3089,3.748,3090,3.748,3091,3.748,3092,3.748,3093,3.748,3094,3.748,3095,3.748,3096,3.748,3097,3.748,3098,3.748,3099,3.748,3100,3.748,3101,3.748,3102,3.748,3103,3.748,3104,3.748,3105,3.748]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.2,3086,3.8]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.345,2,0.887,3,0.142,4,0.119,5,0.134,21,0.006,29,0.216,32,1.393,37,0.218,40,0.922,58,0.004,59,0.004,65,1.291,112,2.746,346,3.808,414,2.587,570,3.292,571,2.721,572,3.82,575,4.977,579,4.295,580,1.763,776,3.045,777,2.955,1598,2.652,1904,3.248,3028,3.495,3029,4.003,3030,3.495,3031,3.495,3032,3.495,3033,3.495,3034,3.495,3035,3.495,3036,3.495,3037,3.495,3038,3.495,3039,3.495,3040,3.495,3041,3.495,3061,5.537,3062,4.53,3086,5.537,3087,5.92]],["title/license.html",[2887,3.707,2888,3.707,3106,3.707]],["body/license.html",[21,0.006,58,0.006,59,0.006]],["title/modules.html",[601,2.932]],["body/modules.html",[21,0.005,58,0.005,59,0.005,600,4.287,601,2.84,702,4.989,706,4.713,707,4.713,856,4.483,861,4.287,1145,4.287,1150,4.115,1151,4.483,1152,4.483,1388,4.989,1493,4.713,1716,4.989,1955,4.713,2066,4.483,2480,4.713,3107,10.03,3108,10.03,3109,10.03,3110,10.03]],["title/overview.html",[3111,5.984]],["body/overview.html",[2,0.66,21,0.006,58,0.004,59,0.004,60,1.682,137,1.718,166,1.267,386,5.205,449,1.436,600,5.761,601,1.795,602,1.88,603,1.974,604,1.974,605,1.974,606,1.926,607,1.974,608,3.663,609,3.663,610,3.663,611,2.831,612,1.836,613,1.974,696,4.994,702,6.704,703,3.663,704,3.663,705,3.663,706,6.984,707,6.449,811,5.025,856,6.515,857,3.663,858,3.663,859,3.663,860,3.663,861,5.761,862,5.286,863,5.286,892,5.205,1066,5.025,1145,6.188,1146,3.663,1147,3.663,1148,3.663,1149,3.663,1150,5.844,1151,5.89,1152,5.89,1159,5.406,1160,5.89,1161,5.89,1337,4.543,1339,3.153,1388,6.927,1389,3.663,1487,4.994,1490,3.663,1491,3.663,1492,3.663,1493,5.776,1632,4.994,1716,5.775,1717,3.663,1718,3.663,1807,5.325,1941,6.025,1955,5.776,1956,3.663,1957,3.663,1958,3.663,2061,3.663,2062,3.663,2063,3.663,2066,5.495,2092,3.663,2094,3.663,2310,3.663,2311,3.663,2312,3.663,2415,3.663,2416,3.663,2417,3.663,2459,4.994,2462,3.663,2463,3.663,2474,4.994,2477,3.663,2478,3.663,2479,3.663,2480,6.449,2632,3.663,2633,3.663,2730,3.663,2731,3.663,2732,3.663,3111,3.663,3112,3.663,3113,4.107,3114,4.107,3115,4.107]],["title/properties.html",[8,0.711,757,2.868]],["body/properties.html",[4,0.164,8,0.91,21,0.006,58,0.005,59,0.005,772,5.835,780,2.814,2891,6.239,2892,6.239,2893,6.779,2894,6.239,2895,6.239,3106,6.779,3116,7.6]],["title/miscellaneous/typealiases.html",[2834,2.868,3117,5.94]],["body/miscellaneous/typealiases.html",[7,0.421,21,0.006,22,1.151,23,0.481,40,0.594,41,2.041,58,0.005,59,0.005,124,2.46,162,2.562,194,3.524,261,2.731,297,3.07,348,4.045,354,4.008,419,3.175,510,5.462,552,3.234,666,5.223,684,3.895,795,5.462,1020,4.904,1021,6.498,1022,4.407,1028,5.243,1031,6.498,1033,4.904,1050,4.827,1051,4.633,1052,5.243,1053,5.243,1754,5.243,1769,7.061,2259,5.243,2273,7.061,2345,5.243,2352,7.061,2440,5.243,2448,7.061,2721,5.243,2723,7.061,2748,6.077,2834,4.407,3118,6.387,3119,5.697,3120,5.697,3121,5.697,3122,5.697,3123,5.697,3124,6.387,3125,7.916,3126,5.697,3127,6.387,3128,7.916,3129,5.697,3130,6.387,3131,7.916,3132,7.916,3133,6.387,3134,5.697,3135,6.387,3136,6.387,3137,6.387,3138,6.387]],["title/miscellaneous/variables.html",[2834,2.868,3009,4.56]],["body/miscellaneous/variables.html",[7,0.087,8,0.74,10,0.464,12,0.511,21,0.006,22,0.692,23,0.531,40,0.778,41,2.508,42,1.131,43,1.11,44,1.272,53,0.473,55,0.303,56,1.933,58,0.001,59,0.001,112,1.491,122,0.396,129,1.932,139,0.711,156,1.932,157,0.672,162,2.924,166,0.726,167,4.705,170,0.872,179,0.711,188,2.53,192,2.288,194,0.732,200,1.537,203,2.244,226,2.1,260,1.707,261,2.915,285,1.487,297,2.842,300,1.299,309,2.604,318,0.884,335,1.491,341,1.184,342,2.604,343,2.604,345,0.756,346,2.521,348,2.009,349,3.753,352,2.833,357,1.651,358,1.932,359,1.184,367,1.34,371,0.672,394,1.758,411,1.184,414,1.104,416,1.131,422,0.963,426,1.932,429,1.932,431,2.1,437,1.019,438,0.84,440,1.932,441,1.184,452,1.624,490,1.807,495,1.707,499,0.622,501,1.624,506,1.707,508,1.624,523,2.011,524,0.916,532,2.26,537,0.732,552,3.248,667,0.84,669,1.019,776,1.299,777,1.261,780,2.288,795,0.916,814,2.1,845,1.184,850,2.1,909,4.191,1020,1.807,1022,0.916,1033,1.019,1050,0.809,1143,2.093,1158,1.184,1198,2.1,1199,1.184,1334,3.374,1403,1.184,1404,2.1,1408,1.932,1409,1.184,1428,0.963,1483,1.184,1514,1.184,1516,2.1,1518,1.932,1519,1.184,1544,2.011,1545,1.651,1547,1.807,1578,2.409,1592,1.184,1598,1.525,1603,1.932,1615,1.932,1616,1.184,1659,1.807,1703,1.184,1714,2.1,1715,1.184,1740,1.184,1748,1.184,1754,1.089,1755,1.386,1757,1.491,1760,1.932,1771,1.932,1772,1.807,1773,1.184,1783,0.84,1790,0.84,1821,1.089,1826,1.089,1838,2.093,1846,1.184,1870,2.435,1874,1.435,1885,0.84,1889,2.093,1890,4.097,1891,0.876,1895,1.553,1900,0.691,1901,3.309,1902,3.208,1904,0.781,1915,3.605,2125,2.1,2146,3.098,2149,2.604,2235,1.553,2259,1.089,2274,1.932,2275,1.184,2345,1.089,2354,1.932,2355,1.184,2434,2.1,2440,1.089,2447,2.83,2450,1.932,2451,1.184,2452,1.089,2453,1.184,2454,1.184,2455,1.184,2456,1.184,2491,1.184,2496,1.184,2663,1.184,2675,1.184,2694,1.184,2699,2.1,2709,1.184,2721,1.089,2724,1.932,2725,1.184,2744,1.019,2755,1.807,2756,1.019,2757,1.807,2758,1.807,2834,0.916,2838,1.184,2839,2.1,2844,1.184,2857,1.184,2868,1.184,2897,0.809,2899,3.605,2950,1.553,2981,1.019,3009,1.019,3027,1.184,3028,2.009,3029,1.707,3030,2.009,3031,2.009,3032,1.491,3033,1.491,3034,1.491,3035,1.491,3036,1.491,3037,1.491,3038,1.491,3039,1.491,3040,1.491,3041,1.491,3060,1.184,3119,1.184,3120,1.184,3121,1.184,3122,1.184,3123,2.1,3126,3.92,3129,1.184,3134,1.184,3139,3.425,3140,1.327,3141,1.327,3142,2.354,3143,2.354,3144,5.912,3145,2.354,3146,2.354,3147,2.354,3148,6.179,3149,2.354,3150,2.354,3151,2.354,3152,2.354,3153,2.354,3154,2.354,3155,3.84,3156,1.327,3157,2.354,3158,2.354,3159,3.172,3160,1.327,3161,1.327,3162,2.354,3163,1.327,3164,1.327,3165,1.327,3166,2.1,3167,2.354,3168,2.1,3169,2.354,3170,3.425,3171,1.327,3172,1.327,3173,2.354,3174,5.263,3175,2.354,3176,2.354,3177,2.354,3178,2.354,3179,2.354,3180,3.172,3181,3.172,3182,2.354,3183,3.172,3184,2.354,3185,1.327,3186,2.354,3187,1.327,3188,1.327,3189,2.354,3190,1.327,3191,2.354,3192,1.327,3193,2.354,3194,1.327,3195,2.354,3196,2.354,3197,1.327,3198,2.354,3199,1.327,3200,3.991,3201,3.84,3202,3.607,3203,3.425,3204,3.607,3205,3.172,3206,1.327,3207,2.354,3208,1.327,3209,2.354,3210,1.327,3211,1.932,3212,5.912,3213,6.416,3214,3.172,3215,5.912,3216,4.862,3217,1.327,3218,4.862,3219,2.354,3220,2.354,3221,3.84,3222,6.179,3223,6.628,3224,2.354,3225,1.327,3226,2.354,3227,1.327,3228,2.354,3229,2.354,3230,4.862,3231,3.172,3232,3.84,3233,3.172,3234,3.172,3235,3.172,3236,3.172,3237,1.184,3238,1.327,3239,1.327,3240,1.327,3241,1.327,3242,1.327,3243,1.327,3244,1.327,3245,1.327,3246,1.327,3247,2.354,3248,1.327,3249,1.327,3250,1.327,3251,1.327,3252,1.327,3253,1.327,3254,1.184,3255,1.184,3256,1.327,3257,1.327,3258,1.327,3259,1.932,3260,1.327,3261,1.327,3262,2.1,3263,2.1,3264,2.1,3265,1.184,3266,1.184,3267,1.184,3268,1.327,3269,2.354,3270,1.327,3271,1.327,3272,3.84,3273,1.327,3274,1.327,3275,1.327,3276,1.327,3277,1.327,3278,1.327,3279,1.327,3280,1.327,3281,2.354,3282,2.354,3283,1.327,3284,1.327,3285,1.327,3286,1.327,3287,1.327,3288,1.327,3289,1.327,3290,1.327,3291,1.327,3292,1.327,3293,1.327,3294,1.327,3295,1.327,3296,1.327,3297,1.327,3298,1.327,3299,1.327,3300,1.327,3301,1.327,3302,3.172,3303,1.327,3304,1.327,3305,1.327,3306,1.327,3307,8.525,3308,6.421,3309,5.976,3310,2.1,3311,2.83,3312,1.327,3313,3.92,3314,2.1,3315,1.184,3316,1.932,3317,5.723,3318,2.1,3319,2.948,3320,1.327,3321,2.1,3322,3.84,3323,2.1,3324,1.327,3325,2.1,3326,2.1,3327,3.172,3328,2.1,3329,3.172,3330,2.1,3331,2.1,3332,2.1,3333,3.152,3334,2.1,3335,2.1,3336,2.354,3337,1.327,3338,2.1,3339,1.327,3340,2.1,3341,1.327,3342,1.327,3343,1.184,3344,1.184,3345,2.1,3346,6.179,3347,2.1,3348,2.1,3349,2.1,3350,2.1,3351,2.1,3352,2.1,3353,2.1,3354,2.1,3355,4.394,3356,2.604,3357,2.301,3358,2.604,3359,3.172,3360,1.327,3361,0.916,3362,1.184,3363,1.327]],["title/additional-documentation/cahier-des-charges.html",[1819,1.737,1833,1.441,3364,1.853,3365,2.807,3366,2.807]],["body/additional-documentation/cahier-des-charges.html",[4,0.148,21,0.006,58,0.003,59,0.003,60,2.101,73,3.019,97,3.539,100,1.636,232,4.259,601,1.488,799,3.248,822,4.211,962,2.155,1060,2.348,1073,3.248,1284,2.075,1419,2.348,1544,4.506,1824,6.13,1830,4.34,1833,4.275,1834,2.83,1835,3.539,1888,2.348,1890,2.747,1893,2.246,1896,4.932,1900,4.033,1901,4.433,1915,2.075,2045,2.794,2141,5.479,2146,4.045,2178,2.794,2198,2.613,2869,3.248,2889,4.576,2891,6.361,2892,5.067,2894,5.067,2895,2.794,2897,5.533,2898,2.794,2899,5.346,2900,2.794,2901,2.794,2902,5.55,2905,3.036,2906,3.036,2907,3.036,2908,2.613,2909,3.036,2912,3.036,2913,6.577,2914,2.469,2915,3.036,2916,3.036,2917,6.13,2920,5.048,2922,5.506,2924,4.739,2927,4.669,2928,6.361,2933,2.469,2934,4.576,2937,5.506,2942,4.739,2943,2.613,2944,3.036,2945,3.036,2947,3.036,2950,3.384,2951,3.036,2953,3.036,2954,2.794,2955,3.036,2956,3.036,2958,2.348,2959,3.036,2960,3.036,2961,3.539,2963,3.036,2964,2.794,2965,3.036,2966,3.036,2967,4.211,2968,3.036,2969,3.036,2970,4.576,2971,3.036,2972,3.036,2973,2.794,2974,3.036,2975,5.55,2976,4.352,2977,3.036,2978,3.036,2979,3.036,2980,3.036,2981,2.613,2982,3.938,2983,4.576,2984,2.794,2985,4.576,2991,2.794,2996,3.036,2998,2.613,3006,5.347,3019,2.246,3308,5.949,3309,6.26,3319,2.613,3365,3.036,3366,3.036,3367,3.404,3368,3.404,3369,3.404,3370,3.938,3371,5.067,3372,3.404,3373,3.404,3374,3.404,3375,3.404,3376,2.469,3377,3.404,3378,3.404,3379,2.794,3380,2.794,3381,3.404,3382,3.404,3383,2.794,3384,3.404,3385,3.404,3386,3.404,3387,3.036,3388,3.404,3389,3.036,3390,3.036,3391,3.404,3392,3.404,3393,2.469,3394,3.404,3395,5.129,3396,3.404,3397,3.404,3398,4.576,3399,3.404,3400,3.404,3401,3.404,3402,3.404,3403,3.404,3404,3.404,3405,3.404,3406,3.036,3407,3.404,3408,5.641,3409,3.404,3410,3.404,3411,3.404,3412,3.404,3413,3.036,3414,3.036,3415,3.404,3416,3.404,3417,3.404,3418,3.404,3419,3.404,3420,3.404,3421,3.036,3422,3.036,3423,5.129,3424,3.404,3425,3.404,3426,3.404,3427,3.909,3428,3.404,3429,3.036,3430,5.129,3431,5.129,3432,4.576,3433,3.036,3434,2.794,3435,3.404,3436,5.641,3437,6.872,3438,3.404,3439,3.404,3440,3.404,3441,3.036,3442,3.404,3443,3.404,3444,3.404,3445,3.404,3446,3.404,3447,4.211,3448,3.404,3449,3.404,3450,3.404,3451,3.404,3452,3.404,3453,3.404,3454,3.404,3455,3.404,3456,3.404,3457,2.794,3458,3.404,3459,3.404,3460,2.794,3461,3.404,3462,3.404,3463,3.404,3464,2.613,3465,3.404,3466,3.404,3467,3.404,3468,3.036,3469,3.404,3470,3.404,3471,3.404,3472,3.404,3473,3.404,3474,3.036,3475,3.404,3476,3.404,3477,3.404,3478,3.404,3479,3.036,3480,3.404,3481,3.404,3482,3.404,3483,3.404,3484,3.404,3485,3.404,3486,3.404,3487,3.404]],["title/additional-documentation/documentation-technique.html",[1819,1.976,3364,2.108,3427,2.268,3464,2.75]],["body/additional-documentation/documentation-technique.html",[21,0.006,58,0.006,59,0.006,1833,3.524,3371,6.319,3436,6.319,3488,6.319,3489,6.319,3490,7.697,3491,6.866,3492,6.319,3493,6.866]],["title/additional-documentation/documentation-technique/demon.html",[1819,2.293,3364,2.446,3494,4.156]],["body/additional-documentation/documentation-technique/demon.html",[21,0.006,58,0.006,59,0.006,987,6.804,1830,4.543,2967,6.335,3371,7.275,3495,7.717,3496,7.717]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[79,2.283,251,2.076,1819,1.737,3364,1.853,3497,3.147]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.176,2,0.699,5,0.211,9,2.301,15,1.798,21,0.006,29,0.244,36,0.771,37,0.118,53,2.187,55,0.56,56,1.013,58,0.004,59,0.004,63,4.711,65,0.699,70,3.494,71,6.682,73,5.606,74,1.918,78,1.154,79,5.904,83,5.573,97,4.905,100,2.949,102,3.386,103,3.886,113,5.473,116,3.612,117,3.881,136,1.524,170,0.863,238,1.961,251,4.69,780,1.611,787,2.949,926,4.234,1125,3.34,1180,3.881,1233,3.881,1281,2.87,1290,3.881,1419,3.002,1426,3.571,1540,3.156,1544,4.492,1830,2.561,1833,3.254,1874,3.742,1890,2.33,1893,4.048,1896,4.236,1900,4.018,1901,3.286,2047,3.571,2141,4.964,2145,3.156,2146,4.792,2147,4.905,2869,2.755,2896,3.571,2897,5.496,2899,5.293,2914,3.156,2920,2.653,2927,5.155,2961,3.002,2973,5.037,2976,4.502,2998,3.34,3006,3.002,3009,4.711,3025,3.156,3356,5.037,3361,3.002,3370,3.34,3393,4.451,3398,3.881,3408,3.571,3491,5.473,3498,3.34,3499,3.571,3500,6.136,3501,3.881,3502,5.037,3503,7.72,3504,8.864,3505,3.881,3506,3.881,3507,4.351,3508,6.136,3509,6.136,3510,4.351,3511,6.341,3512,3.881,3513,4.351,3514,3.881,3515,4.351,3516,4.351,3517,3.571,3518,4.351,3519,4.351,3520,4.351,3521,3.881,3522,4.351,3523,4.351,3524,4.351,3525,4.351,3526,3.881,3527,3.881,3528,3.881,3529,4.711,3530,4.351,3531,4.351,3532,4.351,3533,4.351,3534,5.473,3535,3.34,3536,4.351,3537,3.002,3538,3.571,3539,4.351,3540,4.351,3541,4.351,3542,3.881,3543,4.351,3544,4.351,3545,4.351,3546,4.351,3547,4.351,3548,4.351,3549,4.351]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[1819,1.169,1833,1.612,1896,1.103,2961,1.462,3259,1.739,3364,1.247,3550,2.119,3551,2.119]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.006,29,0.174,37,0.099,45,0.746,53,1.76,56,1.56,58,0.002,59,0.002,78,1.835,100,3.096,106,3.391,116,0.937,121,1.207,122,2.223,124,0.613,134,1.288,166,1.67,170,1.508,179,0.852,180,2.477,181,2.152,183,3.011,184,2.23,185,2.082,186,2.408,188,3.422,191,0.971,192,2.702,194,2.018,195,2.569,202,2.23,206,2.942,207,0.971,220,1.307,232,4.445,238,2.058,251,5.179,285,2.046,309,3.002,313,1.42,318,1.216,335,1.008,345,0.906,348,1.749,357,2.271,404,2.776,414,1.295,416,2.373,447,0.984,449,0.557,499,0.746,537,1.523,606,0.746,619,0.806,678,3.002,754,1.307,776,1.523,777,1.479,787,3.584,806,2.724,909,1.235,1022,3.011,1038,2.12,1043,1.222,1050,0.971,1159,3.127,1181,0.937,1182,1.42,1183,1.625,1215,1.307,1284,0.971,1428,1.154,1434,1.307,1543,1.307,1544,4.22,1598,1.327,1755,2.152,1757,1.749,1762,1.05,1771,2.266,1772,2.12,1774,1.222,1783,1.749,1790,1.749,1805,1.42,1807,0.971,1826,1.307,1830,3.185,1831,1.307,1833,4.129,1836,3.57,1838,1.822,1871,1.42,1874,4.084,1890,3.587,1896,4.141,1900,4.023,1901,4.315,1904,1.625,2066,1.098,2141,5.52,2146,3.792,2147,3.011,2150,2.523,2166,3.262,2504,5.288,2506,1.42,2507,1.42,2508,1.42,2509,1.42,2511,1.42,2518,3.262,2869,1.749,2896,1.307,2897,5.232,2898,1.307,2899,5.156,2902,4.009,2903,1.42,2904,1.42,2908,1.222,2914,1.154,2920,4.084,2927,2.316,2939,1.307,2943,1.222,2948,1.42,2952,1.307,2958,3.011,2961,1.905,2964,1.307,2976,3.127,2984,2.266,2992,1.222,2993,1.42,3006,1.098,3008,1.42,3015,2.807,3019,1.822,3028,2.316,3030,1.749,3031,1.749,3032,1.749,3033,1.749,3034,1.749,3035,1.749,3036,1.749,3037,1.749,3038,1.749,3039,1.749,3040,1.749,3041,1.749,3139,3.262,3166,4.404,3168,2.463,3170,4.404,3211,1.307,3237,1.42,3254,2.463,3255,1.42,3259,5.991,3309,1.154,3319,1.222,3357,2.003,3361,1.905,3362,1.42,3370,1.222,3383,3.002,3393,3.165,3406,1.42,3422,1.42,3427,3.127,3433,1.42,3434,2.266,3436,6.346,3460,1.307,3468,3.893,3474,1.42,3479,2.463,3488,2.266,3489,2.266,3498,2.12,3499,2.266,3502,4.769,3505,1.42,3511,3.893,3514,2.463,3517,1.307,3521,2.463,3526,1.42,3527,3.262,3528,1.42,3529,4.946,3537,2.523,3538,3.002,3552,6.15,3553,2.463,3554,2.761,3555,5.412,3556,6.587,3557,4.938,3558,4.938,3559,6.442,3560,2.807,3561,3.262,3562,2.761,3563,3.657,3564,7.457,3565,2.463,3566,4.053,3567,3.002,3568,3.893,3569,4.769,3570,4.938,3571,2.761,3572,2.761,3573,2.761,3574,1.592,3575,1.592,3576,2.463,3577,1.592,3578,1.592,3579,3.893,3580,1.592,3581,1.592,3582,2.761,3583,2.761,3584,1.592,3585,2.463,3586,5.81,3587,1.592,3588,3.262,3589,1.592,3590,1.592,3591,1.592,3592,1.592,3593,1.592,3594,1.592,3595,1.307,3596,1.592,3597,1.42,3598,1.592,3599,1.592,3600,1.222,3601,1.592,3602,1.42,3603,1.592,3604,1.307,3605,4.938,3606,1.592,3607,1.42,3608,1.592,3609,4.364,3610,6.697,3611,4.364,3612,1.592,3613,1.592,3614,5.412,3615,1.592,3616,1.592,3617,1.42,3618,1.42,3619,2.761,3620,2.761,3621,2.761,3622,2.761,3623,2.761,3624,2.761,3625,2.761,3626,1.222,3627,1.592,3628,2.761,3629,1.592,3630,1.592,3631,1.307,3632,1.592,3633,2.761,3634,2.761,3635,2.761,3636,1.592,3637,1.592,3638,1.592,3639,1.592,3640,1.592,3641,1.592,3642,1.307,3643,1.592,3644,1.592,3645,1.592,3646,1.592,3647,1.592,3648,1.592,3649,2.761,3650,4.442,3651,1.592,3652,6.922,3653,1.592,3654,1.592,3655,1.592,3656,1.592,3657,1.592,3658,1.592,3659,1.42,3660,1.592,3661,1.592,3662,1.42,3663,1.592,3664,1.592,3665,1.592,3666,1.592,3667,4.364,3668,1.592,3669,1.592,3670,1.592,3671,1.592,3672,1.592,3673,1.592,3674,1.592,3675,1.592,3676,4.364,3677,4.364,3678,4.364,3679,1.592,3680,1.592,3681,1.592,3682,1.592,3683,1.592,3684,1.592,3685,1.307,3686,1.592,3687,2.266,3688,1.592,3689,1.592,3690,1.42,3691,1.592,3692,1.592,3693,2.12,3694,1.592,3695,1.592,3696,1.592,3697,1.592,3698,2.807,3699,1.592,3700,1.592,3701,1.42,3702,1.42,3703,1.592,3704,1.592,3705,2.266,3706,1.592,3707,5.485,3708,1.592,3709,1.42,3710,1.592,3711,1.592,3712,1.592,3713,2.761,3714,4.461,3715,1.592,3716,1.592,3717,1.307,3718,1.592,3719,1.42,3720,1.592,3721,2.463,3722,1.42,3723,2.761,3724,1.307,3725,2.761,3726,1.592,3727,1.592,3728,2.761,3729,1.592,3730,1.592,3731,2.761,3732,1.592,3733,3.657,3734,2.761,3735,1.42,3736,1.592,3737,1.592,3738,1.592,3739,2.761,3740,1.222,3741,1.592,3742,1.307,3743,1.592,3744,1.307,3745,1.592,3746,1.592,3747,2.761,3748,1.592,3749,2.761,3750,1.592,3751,1.592,3752,1.592,3753,1.592,3754,1.592,3755,1.592,3756,1.592,3757,1.592,3758,1.592,3759,1.592,3760,1.592,3761,1.592,3762,1.222,3763,1.592,3764,1.592,3765,1.592,3766,2.761,3767,3.657,3768,2.761,3769,2.12,3770,1.592,3771,1.592,3772,1.592,3773,1.592,3774,1.592,3775,1.592,3776,1.592,3777,2.761,3778,1.592,3779,1.592,3780,1.42,3781,1.42,3782,1.592,3783,1.592,3784,1.592,3785,1.592,3786,1.307,3787,1.592,3788,1.592,3789,1.592,3790,1.307,3791,1.592,3792,1.592]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1545,1.638,1819,1.737,1833,1.441,2924,2.416,3364,1.853]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.169,21,0.006,23,0.332,40,0.553,45,2.789,58,0.004,59,0.004,72,1.9,78,1.577,100,2.001,134,1.974,136,1.034,162,1.67,166,1.285,196,2.335,251,4.994,340,4.788,344,2.108,390,1.484,761,4.104,780,1.542,787,2.001,1150,2.637,1419,2.873,1474,2.873,1544,4.432,1545,4.892,1807,4.231,1830,4.455,1833,4.303,1834,2.297,1836,4.994,1838,2.747,1874,3.627,1890,3.185,1892,2.873,1896,4.642,1900,3.611,1901,3.716,1962,5.327,1979,4.788,1986,5.305,2075,3.02,2101,3.714,2107,5.305,2113,5.305,2114,5.305,2123,6.572,2139,4.882,2141,5.585,2146,4.455,2147,4.104,2148,5.305,2149,4.882,2150,2.873,2157,3.02,2452,3.418,2897,5.44,2899,5.69,2902,4.788,2920,2.539,2924,4.566,2927,4.794,2928,7.323,2933,3.02,2940,3.197,2943,3.197,2950,3.924,2961,4.788,2976,4.394,2982,3.197,2992,3.197,2995,3.714,3006,4.104,3014,3.197,3015,3.197,3019,2.747,3357,3.02,3361,2.873,3370,3.197,3376,3.02,3379,3.418,3380,3.418,3383,3.418,3389,5.305,3393,3.02,3414,5.305,3427,3.767,3464,3.197,3501,3.714,3502,3.418,3506,3.714,3529,3.197,3534,3.714,3535,3.197,3537,2.873,3561,3.714,3566,3.418,3567,3.418,3579,3.714,3585,3.714,3600,5.811,3626,4.566,3631,4.882,3642,3.418,3650,3.418,3659,3.714,3705,3.418,3717,3.418,3721,6.189,3722,3.714,3742,3.418,3762,4.566,3793,3.714,3794,5.948,3795,5.948,3796,5.948,3797,4.164,3798,5.305,3799,4.164,3800,4.164,3801,3.714,3802,4.164,3803,4.164,3804,4.164,3805,4.164,3806,4.164,3807,4.164,3808,5.948,3809,4.164,3810,4.164,3811,4.164,3812,4.164,3813,4.164,3814,4.164,3815,5.305,3816,4.164,3817,4.164,3818,3.418,3819,4.164,3820,5.948,3821,4.164,3822,5.948,3823,4.164,3824,3.418,3825,3.714,3826,4.164,3827,4.164,3828,3.714,3829,4.164,3830,4.164,3831,4.164,3832,4.164,3833,4.164,3834,4.164,3835,5.948,3836,4.164]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[1819,1.976,3364,2.108,3492,2.94,3493,3.195]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.006,22,1.224,23,0.494,40,0.309,41,0.633,43,2.376,58,0.002,59,0.002,100,1.599,112,0.943,122,0.992,133,2.782,134,0.516,166,0.611,188,2.702,261,1.422,285,3.313,304,2.554,318,2.319,367,1.895,499,1.56,537,2.782,612,0.886,745,2.413,761,4.466,780,3.002,787,2.068,909,2.723,1022,1.366,1039,3.532,1544,4.453,1591,4.687,1593,3.657,1594,1.436,1595,4.374,1596,1.254,1597,1.207,1598,2.424,1608,1.895,1679,3.479,1680,3.879,1681,3.479,1682,3.479,1683,3.479,1684,3.479,1685,3.879,1686,4.142,1687,3.879,1724,4.099,1725,3.532,1830,3.584,1833,3.892,1834,4.691,1836,1.306,1838,1.306,1874,4.142,1890,3.638,1894,4.27,1896,4.219,1897,1.366,1900,3.535,1901,4.341,1902,5.553,2014,1.625,2028,5.265,2141,5.355,2146,3.309,2147,1.366,2150,1.366,2157,1.436,2742,2.413,2743,2.413,2869,4.475,2870,1.766,2871,4.498,2897,5.453,2899,5.355,2900,2.731,2901,2.731,2902,3.879,2908,1.52,2920,5.185,2926,1.766,2927,2.725,2933,1.436,2939,2.731,2940,3.304,2949,4.139,2950,2.839,2958,1.366,2975,1.366,2976,4.623,2991,2.731,2992,1.52,2997,1.766,2998,5.605,3019,3.709,3025,1.436,3314,4.498,3356,2.731,3361,1.366,3376,1.436,3387,1.766,3393,2.413,3413,2.968,3421,1.766,3427,3.856,3429,1.766,3434,1.625,3447,1.625,3460,2.731,3492,3.532,3498,1.52,3512,1.766,3517,1.625,3529,1.52,3537,1.366,3538,1.625,3553,2.968,3556,5.898,3560,4.674,3565,2.968,3566,2.731,3568,3.838,3569,3.532,3595,1.625,3602,1.766,3607,1.766,3618,2.968,3626,1.52,3631,2.731,3642,2.731,3685,4.139,3687,5.313,3690,6.512,3698,4.316,3701,1.766,3705,4.615,3707,1.766,3709,5.431,3714,1.52,3719,1.766,3735,3.838,3740,1.52,3769,1.52,3793,1.766,3825,2.968,3828,1.766,3837,7.504,3838,9.279,3839,2.968,3840,6.472,3841,3.327,3842,5.042,3843,6.088,3844,5.622,3845,3.327,3846,4.303,3847,3.327,3848,6.793,3849,3.327,3850,6.088,3851,3.327,3852,3.327,3853,4.303,3854,5.622,3855,1.98,3856,1.98,3857,1.98,3858,1.766,3859,1.98,3860,3.327,3861,1.766,3862,5.042,3863,5.042,3864,4.139,3865,1.98,3866,1.98,3867,5.042,3868,1.766,3869,1.98,3870,3.327,3871,1.98,3872,1.98,3873,1.98,3874,1.98,3875,3.327,3876,5.042,3877,3.838,3878,3.327,3879,6.088,3880,1.98,3881,1.98,3882,1.98,3883,1.98,3884,4.303,3885,3.327,3886,1.766,3887,1.98,3888,3.327,3889,1.98,3890,1.766,3891,1.98,3892,1.98,3893,1.98,3894,1.98,3895,3.327,3896,3.327,3897,3.327,3898,5.042,3899,5.042,3900,4.303,3901,1.98,3902,1.98,3903,4.303,3904,1.98,3905,1.766,3906,1.98,3907,1.98,3908,1.98,3909,1.766,3910,1.766,3911,1.98,3912,1.766,3913,1.98,3914,4.303,3915,4.303,3916,4.303,3917,4.303,3918,4.303,3919,5.622,3920,3.327,3921,1.98,3922,1.98,3923,1.98,3924,1.98,3925,1.98,3926,1.98,3927,1.98,3928,1.98,3929,3.327,3930,3.327,3931,1.98,3932,5.042,3933,4.303,3934,1.98,3935,3.327,3936,1.98,3937,1.98,3938,1.98,3939,1.98,3940,1.98,3941,3.327,3942,1.98,3943,1.98,3944,1.766,3945,1.98,3946,1.98,3947,3.327,3948,1.766,3949,1.98,3950,4.303,3951,1.98,3952,1.98,3953,1.98,3954,1.98,3955,1.98,3956,1.98,3957,1.98,3958,3.327,3959,1.98,3960,1.98,3961,1.98,3962,1.98,3963,3.327,3964,1.98,3965,1.98,3966,5.622,3967,1.98,3968,1.98,3969,5.042,3970,1.98,3971,1.98,3972,3.327,3973,1.98,3974,1.98,3975,1.98,3976,3.327,3977,1.98,3978,1.98,3979,1.98,3980,1.98,3981,1.98,3982,1.98,3983,1.98,3984,1.98,3985,1.98,3986,1.98,3987,1.98,3988,1.98,3989,1.98,3990,2.968]],["title/additional-documentation/documentation-utilisateur.html",[1819,1.976,2982,2.75,3364,2.108,3427,2.268]],["body/additional-documentation/documentation-utilisateur.html",[21,0.006,58,0.006,59,0.006,1544,3.533,1545,4.016,1833,3.533,2920,4.706,2975,5.325,3427,4.887,3488,6.335,3489,6.335]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1819,1.397,1896,1.318,3364,1.491,3376,1.837,3693,1.944,3824,2.079,3991,2.259]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.006,23,0.405,58,0.002,59,0.002,285,3.257,300,2.093,342,3.525,343,3.72,344,1.175,357,4.016,390,1.352,414,1.088,416,3.339,422,4.448,457,3.166,487,3.273,745,2.752,761,2.618,776,1.28,777,3.525,787,2.947,1181,2.233,1284,1.415,1341,4.269,1349,1.781,1544,4.453,1545,1.974,1598,1.115,1755,3.609,1757,3.048,1823,3.384,1829,3.384,1830,4.089,1831,3.951,1832,2.069,1833,3.532,1834,4.45,1835,4.542,1836,5.32,1837,3.384,1838,3.176,1839,3.384,1854,3.384,1873,6.158,1874,3.739,1890,4.232,1891,2.503,1893,1.531,1894,2.503,1895,3.176,1896,3.772,1897,3.321,1900,3.615,1901,4.709,1902,2.503,1915,5.004,1979,3.321,2028,1.531,2141,5.081,2145,1.683,2146,4.267,2150,1.601,2157,2.752,2869,3.522,2897,5.266,2899,5.478,2902,1.601,2914,1.683,2920,2.935,2923,2.069,2927,3.048,2933,3.491,2942,6.067,2946,6.158,2950,2.503,2958,5.325,2975,5.001,2976,4.59,3006,2.618,3014,4.269,3015,4.269,3019,4.045,3025,5.039,3028,3.522,3030,4.169,3031,4.169,3032,1.469,3033,1.469,3034,1.469,3035,1.469,3036,1.469,3037,1.469,3038,3.522,3039,1.469,3040,1.469,3041,1.469,3112,4.96,3200,4.565,3202,4.565,3204,4.565,3308,3.696,3309,4.033,3316,3.114,3333,1.904,3357,2.752,3358,3.114,3361,3.321,3376,3.491,3379,1.904,3380,1.904,3390,2.069,3408,1.904,3427,1.469,3432,2.069,3441,2.069,3447,3.114,3457,1.904,3464,1.781,3535,2.913,3537,1.601,3556,5.565,3560,3.696,3567,3.114,3569,1.904,3576,2.069,3595,1.904,3597,2.069,3600,3.696,3604,3.114,3626,2.913,3650,3.114,3685,3.114,3693,6.56,3698,1.781,3702,2.069,3714,2.913,3717,1.904,3724,3.951,3740,2.913,3744,1.904,3762,3.696,3769,2.913,3780,3.384,3781,2.069,3786,1.904,3790,5.703,3815,3.384,3818,3.114,3824,6.158,3839,3.384,3858,2.069,3861,3.384,3864,1.904,3877,3.384,3886,3.384,3905,3.384,3910,3.384,3948,2.069,3991,5.47,3992,5.561,3993,7.049,3994,7.193,3995,3.384,3996,3.384,3997,3.794,3998,5.561,3999,3.794,4000,5.561,4001,5.561,4002,2.32,4003,2.32,4004,2.32,4005,2.32,4006,2.32,4007,2.32,4008,2.32,4009,4.814,4010,2.32,4011,3.794,4012,3.794,4013,3.794,4014,3.794,4015,3.794,4016,5.561,4017,5.561,4018,3.794,4019,5.561,4020,3.794,4021,3.794,4022,4.96,4023,3.794,4024,4.294,4025,4.814,4026,4.814,4027,4.814,4028,7.717,4029,3.384,4030,3.384,4031,3.794,4032,2.32,4033,2.32,4034,3.794,4035,3.794,4036,2.32,4037,2.32,4038,4.294,4039,2.32,4040,2.32,4041,2.32,4042,2.32,4043,2.32,4044,2.069,4045,2.32,4046,4.814,4047,2.069,4048,3.794,4049,3.794,4050,5.561,4051,5.561,4052,5.561,4053,4.96,4054,5.561,4055,3.794,4056,2.32,4057,3.794,4058,3.794,4059,2.32,4060,2.32,4061,2.32,4062,2.32,4063,2.32,4064,2.32,4065,2.069,4066,5.561,4067,3.384,4068,3.794,4069,3.794,4070,3.794,4071,2.32,4072,2.32,4073,2.32,4074,2.32,4075,2.32,4076,2.32,4077,2.32,4078,5.561,4079,2.32]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[1544,1.056,1545,1.201,1819,1.273,1833,1.056,1873,1.894,2045,1.894,3364,1.358,4080,2.307]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.717,21,0.006,22,0.474,23,0.541,40,0.799,41,2.567,58,0.003,59,0.003,133,1.721,192,1.942,261,2.982,285,2.808,297,3.518,304,3.227,318,2.363,342,2.251,343,2.251,346,2.353,348,4.417,352,2.217,357,3.405,367,2.987,414,1.235,416,2.02,499,1.235,552,2.128,745,3.805,761,2.9,776,1.453,777,1.41,780,2.582,787,3.654,910,4.679,1215,2.162,1544,4.42,1545,3.63,1547,3.227,1598,2.02,1755,2.474,1830,1.55,1833,3.587,1834,4.324,1835,1.817,1836,3.461,1874,2.563,1889,2.773,1890,3.735,1891,4.829,1892,1.817,1894,3.95,1895,3.95,1896,3.809,1900,3.116,1901,4.394,1915,3.99,1979,5.245,2028,1.737,2139,2.162,2141,5.172,2145,3.049,2146,3.852,2147,1.817,2150,1.817,2152,2.349,2157,5.514,2869,1.668,2897,5.003,2899,5.624,2920,3.651,2927,3.322,2940,2.022,2942,4.027,2946,2.162,2949,2.162,2950,3.461,2952,3.45,2954,3.45,2958,5.407,2975,1.817,2976,4.417,2981,2.022,3014,2.022,3019,2.773,3025,4.343,3028,1.668,3030,1.668,3031,1.668,3032,1.668,3033,1.668,3034,1.668,3035,1.668,3036,1.668,3037,1.668,3038,1.668,3039,1.668,3040,1.668,3041,1.668,3200,3.45,3202,3.45,3203,2.349,3204,2.162,3211,2.162,3262,3.749,3263,3.749,3264,3.749,3265,2.349,3266,2.349,3267,3.749,3308,5.836,3309,5.514,3310,6.781,3311,5.837,3313,3.749,3315,2.349,3316,5.371,3317,2.349,3318,3.749,3319,4.027,3321,3.749,3323,3.749,3325,3.749,3326,3.749,3328,3.749,3330,3.749,3331,3.749,3332,5.837,3333,6.24,3334,5.837,3335,2.349,3338,2.349,3340,3.749,3343,2.349,3344,2.349,3345,3.749,3347,3.749,3348,3.749,3349,3.749,3350,3.749,3351,3.749,3352,3.749,3353,3.749,3354,3.749,3357,1.91,3358,2.162,3457,2.162,3498,2.022,3499,2.162,3535,2.022,3537,1.817,3542,2.349,3556,5.024,3560,2.022,3588,2.349,3600,3.227,3604,2.162,3617,3.749,3662,2.349,3687,2.162,3693,2.022,3698,2.022,3714,2.022,3724,2.162,3740,3.227,3742,5.371,3744,2.162,3762,3.227,3769,2.022,3786,4.306,3790,4.915,3798,3.749,3801,4.679,3818,4.306,3864,2.162,3868,2.349,3890,2.349,3909,2.349,3912,2.349,3944,2.349,3990,8.139,3993,2.349,3994,2.349,3995,3.749,3996,2.349,4022,4.679,4024,5.341,4029,2.349,4030,2.349,4038,4.679,4044,3.749,4047,2.349,4053,2.349,4065,3.749,4067,3.749,4081,2.633,4082,2.633,4083,2.633,4084,2.633,4085,2.633,4086,2.633,4087,2.633,4088,2.633,4089,2.633,4090,2.633,4091,2.633,4092,2.633,4093,2.633,4094,2.633,4095,6.543,4096,2.633,4097,2.633,4098,4.203,4099,2.633,4100,4.203,4101,2.633,4102,5.245,4103,5.245,4104,2.633,4105,5.245,4106,2.633,4107,5.988,4108,5.245,4109,2.633,4110,2.633,4111,4.203,4112,4.203,4113,4.203,4114,2.633,4115,2.633,4116,2.633,4117,2.633,4118,4.203,4119,2.633,4120,5.988,4121,2.633,4122,2.633,4123,2.633,4124,2.633,4125,2.633,4126,5.245,4127,2.633,4128,2.633,4129,2.633,4130,2.633,4131,2.633,4132,2.633,4133,2.633,4134,2.633,4135,2.633,4136,2.633,4137,2.633,4138,2.633,4139,2.633,4140,2.633,4141,2.633,4142,2.633,4143,2.633,4144,2.633,4145,2.633,4146,2.633]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":537,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.0.0/0",{"_index":2353,"title":{},"body":{"classes/Keyrings.html":{}}}],["0.0.18",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["0.0.33",{"_index":3116,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2820,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["0.40.1",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["000000000000000000000000",{"_index":1483,"title":{},"body":{"classes/ConsoleSession.html":{},"miscellaneous/variables.html":{}}}],["01",{"_index":4107,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["07/schema",{"_index":3264,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":285,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1.0.0",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["1.0.13",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":2824,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":2833,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2826,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3211,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.1",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["10.1.3",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["10.3.1",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":4116,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10y",{"_index":2375,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["11.0.0",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1341,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["123",{"_index":3260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345",{"_index":3201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123456",{"_index":4050,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["15",{"_index":3112,"title":{},"body":{"overview.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["16",{"_index":1339,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["1980",{"_index":4054,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1y",{"_index":959,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":304,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.3",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":2827,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":2832,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4113,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["201",{"_index":1823,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":4068,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":4109,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":4106,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["21",{"_index":3115,"title":{},"body":{"overview.html":{}}}],["23",{"_index":3113,"title":{},"body":{"overview.html":{}}}],["24",{"_index":919,"title":{},"body":{"injectables/AuthService.html":{}}}],["256",{"_index":1344,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["3",{"_index":2014,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["3.11.0",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["3.12.5",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2822,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":3549,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["30_000",{"_index":1199,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/variables.html":{}}}],["3600",{"_index":918,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["4",{"_index":3900,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2831,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2756,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":910,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":2522,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.1.1",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":673,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["5000",{"_index":2207,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":1432,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["5f7b1b3b7f7b1b3b7f7b1b3b",{"_index":2449,"title":{},"body":{"classes/Logger.html":{}}}],["60",{"_index":911,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":920,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.1.0",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["7.1.16",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2823,"title":{},"body":{"dependencies.html":{}}}],["76",{"_index":3114,"title":{},"body":{"overview.html":{}}}],["8",{"_index":770,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["8.0.2",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["99",{"_index":2879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["9a",{"_index":464,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":2328,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{}}}],["_common/abstracts/abstract.controller",{"_index":489,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":1180,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":764,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":638,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_common/abstracts/dto/custom",{"_index":584,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":1664,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":434,"title":{},"body":{"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Tasks.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":135,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/constants/event",{"_index":227,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["_common/data/api",{"_index":2359,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["_common/data/console",{"_index":937,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":491,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":815,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":698,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["_common/errors/validationexception",{"_index":1982,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":1812,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["_common/filters/mongoose",{"_index":726,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/guards/auth.guard",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/pick",{"_index":503,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/pipes/dto",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/object",{"_index":498,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/agent.type",{"_index":817,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":355,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":511,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":2753,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":2126,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/_parts/additionalfields.dto",{"_index":2128,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/agents.dto",{"_index":639,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/config.dto",{"_index":2120,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/execute",{"_index":1099,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/form.dto",{"_index":1631,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":1805,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_dto/jobs.dto",{"_index":2282,"title":{},"body":{"controllers/JobsController.html":{}}}],["_dto/keyrings.dto",{"_index":2425,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["_dto/parts/security.part.dto",{"_index":644,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/sync",{"_index":1102,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_enum/action",{"_index":1192,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{}}}],["_enum/types",{"_index":1610,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1471,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":1765,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_enums/state.enum",{"_index":2270,"title":{},"body":{"classes/Jobs.html":{}}}],["_enums/states.enum",{"_index":1767,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_exception",{"_index":1572,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_id",{"_index":122,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"injectables/TasksService.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_interfaces/execute",{"_index":1194,"title":{},"body":{"injectables/BackendsService.html":{}}}],["_metadata",{"_index":2564,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_model",{"_index":178,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_options",{"_index":2195,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parts",{"_index":3603,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":1912,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":1768,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":3593,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/concerned",{"_index":2271,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["_parts/data.part.schema",{"_index":2446,"title":{},"body":{"classes/Logger.html":{}}}],["_parts/inetorgperson.dto",{"_index":1911,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":3594,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":1766,"title":{},"body":{"classes/Identities.html":{}}}],["_queue",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{}}}],["_req",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":2080,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/form.schema",{"_index":1720,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":1809,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["_schemas/jobs.schema",{"_index":2314,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["_schemas/logger.schema",{"_index":2465,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["_schemas/tasks.schema",{"_index":2734,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["_service",{"_index":518,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/TasksController.html":{}}}],["_validation",{"_index":1816,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["abortearly",{"_index":2172,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstract.service",{"_index":98,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractqueueprocessor:11",{"_index":1176,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:12",{"_index":1173,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:13",{"_index":1175,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:35",{"_index":1168,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:9",{"_index":1174,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractschema",{"_index":119,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{}}}],["abstractservice",{"_index":66,"title":{"injectables/AbstractService.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{}}}],["abstractservice:17",{"_index":91,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:18",{"_index":92,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:19",{"_index":88,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:20",{"_index":90,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservicecontext",{"_index":80,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["abstractserviceschema",{"_index":176,"title":{"injectables/AbstractServiceSchema.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:118",{"_index":634,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:15",{"_index":2424,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["abstractserviceschema:153",{"_index":1751,"title":{},"body":{"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:17",{"_index":627,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:195",{"_index":1752,"title":{},"body":{"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:23",{"_index":636,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:257",{"_index":635,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:27",{"_index":628,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:318",{"_index":630,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:34",{"_index":631,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:44",{"_index":629,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:50",{"_index":632,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:84",{"_index":633,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstraite",{"_index":3500,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acc",{"_index":2025,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["acc[err.path",{"_index":2174,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["acc[groupindex",{"_index":2017,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex].elements.push",{"_index":2021,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["accent",{"_index":3696,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accepted",{"_index":4069,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access_token",{"_index":913,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["access_token_expires_in",{"_index":881,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":882,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":3459,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{}}}],["accompagnement",{"_index":3472,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":3439,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accéder",{"_index":3508,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["action",{"_index":1248,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["actions",{"_index":3948,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["actiontype",{"_index":1164,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.identity_password_reset",{"_index":1386,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_update",{"_index":1249,"title":{},"body":{"injectables/BackendsService.html":{}}}],["active",{"_index":1230,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["add",{"_index":234,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["added",{"_index":1137,"title":{},"body":{"controllers/BackendsController.html":{}}}],["additional",{"_index":1819,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["additionalfields",{"_index":1755,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":340,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":1885,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["additionalfieldspartdtostub",{"_index":3139,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":358,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["additionalfilters",{"_index":3927,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionalproperties",{"_index":3355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["additionnel",{"_index":4020,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":1835,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["administrateurs",{"_index":3431,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adresse",{"_index":4011,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["aes",{"_index":1343,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["affichage",{"_index":3402,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":3939,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affirmer",{"_index":3644,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterall(async",{"_index":3624,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":3622,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterevent",{"_index":269,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.count",{"_index":273,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.created",{"_index":303,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.data",{"_index":271,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.deleted",{"_index":338,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.result",{"_index":332,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.updated",{"_index":323,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.count",{"_index":272,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.created",{"_index":302,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.data",{"_index":270,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.deleted",{"_index":337,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.result",{"_index":331,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.updated",{"_index":322,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevents",{"_index":267,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindandcount'].join(eventemitterseparator",{"_index":268,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindbyid'].join(eventemitterseparator",{"_index":277,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindone'].join(eventemitterseparator",{"_index":281,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterupsert'].join(eventemitterseparator",{"_index":330,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["agent",{"_index":388,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentcreatequestions",{"_index":360,"title":{"classes/AgentCreateQuestions.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/CliModule.html":{}}}],["agents",{"_index":407,"title":{"classes/Agents.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["agents.command",{"_index":1392,"title":{},"body":{"modules/CliModule.html":{}}}],["agents.controller",{"_index":617,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":621,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.service",{"_index":488,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":1499,"title":{},"body":{"modules/CoreModule.html":{}}}],["agentscommand",{"_index":409,"title":{"classes/AgentsCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscommand.registerwithsubcommands",{"_index":623,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscontroller",{"_index":448,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agentscontroller.projection",{"_index":526,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatecommand",{"_index":391,"title":{"classes/AgentsCreateCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentscreatedto",{"_index":384,"title":{"classes/AgentsCreateDto.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentscreatedto:26",{"_index":599,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:31",{"_index":591,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:36",{"_index":592,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:41",{"_index":594,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:46",{"_index":598,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:52",{"_index":597,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:57",{"_index":590,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:62",{"_index":595,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:67",{"_index":596,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:72",{"_index":593,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":459,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentsmodule",{"_index":600,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":440,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{},"miscellaneous/variables.html":{}}}],["agentsservice",{"_index":386,"title":{"injectables/AgentsService.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["agentstate",{"_index":2705,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":2708,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstate[k",{"_index":3208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agentstatelist",{"_index":2699,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["agentsupdatedto",{"_index":480,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agenttype",{"_index":795,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aident",{"_index":3643,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ainsi",{"_index":3780,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":3425,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":3826,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":4091,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":3911,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":3811,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":1962,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":2124,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":2129,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":1917,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["aliases",{"_index":3118,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerrors",{"_index":1975,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":658,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["allof",{"_index":3244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allons",{"_index":3577,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allowednetworks",{"_index":2346,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["already",{"_index":951,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendsService.html":{}}}],["améliorant",{"_index":3803,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":3831,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":3794,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":3704,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":3806,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annotations",{"_index":3810,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":2906,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["anonymous",{"_index":295,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["any)?.id",{"_index":2243,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":2431,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["aperçu",{"_index":3690,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":962,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["apibadrequestresponse",{"_index":3228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":3217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodydecorator",{"_index":3143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodydecorator(bodymodel",{"_index":3224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodyoptions",{"_index":3214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedecorator",{"_index":506,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":519,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":1637,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":1817,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedecorator(identitiesupsertdto",{"_index":1842,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":2391,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apicreatedresponse",{"_index":3227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator",{"_index":3147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator(responsemodel",{"_index":3225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator",{"_index":495,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":540,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":1643,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":1883,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":2395,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(errorschemadto",{"_index":3226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(model",{"_index":3216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(notfounddto",{"_index":3231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedfilterdto",{"_index":3238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apinotfoundresponse",{"_index":3233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":3232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apioperation",{"_index":2607,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apipaginateddecorator",{"_index":508,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":525,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":1638,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":1859,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(jobsdto",{"_index":2285,"title":{},"body":{"controllers/JobsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":2392,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apipaginatedresponsedecorator",{"_index":3150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipaginatedresponsedecorator(model",{"_index":3243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiparam",{"_index":493,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apiproperty",{"_index":570,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty({enum",{"_index":1575,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({example",{"_index":778,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["apiproperty({type",{"_index":2781,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":3236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apireadresponsedecorator",{"_index":501,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":534,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":1640,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":1861,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apireadresponsedecorator(jobsdto",{"_index":2288,"title":{},"body":{"controllers/JobsController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":2394,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":1634,"title":{},"body":{"controllers/FormController.html":{},"controllers/PasswdController.html":{}}}],["apiresponseoptions",{"_index":3223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apisession",{"_index":679,"title":{"classes/ApiSession.html":{}},"body":{"classes/ApiSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["apitags",{"_index":494,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{}}}],["apitags('core",{"_index":513,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":1635,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":1814,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/ManagementController.html":{}}}],["apitags('passwd",{"_index":2610,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apiupdatedecorator",{"_index":490,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"miscellaneous/variables.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":538,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":1642,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":1867,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiupdatedresponsedecorator",{"_index":3153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiupdatedresponsedecorator(responsemodel",{"_index":3246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":3914,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app",{"_index":3300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":718,"title":{},"body":{"modules/AppModule.html":{}}}],["app.registerrequestbycontextid",{"_index":3304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.service",{"_index":697,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["app_guard",{"_index":721,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":691,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appel",{"_index":3778,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":3896,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":3904,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":3749,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["application",{"_index":1419,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":4017,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["applications",{"_index":2908,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["applydecorators",{"_index":3215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(setmetadata(meta_unprotected",{"_index":3293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":702,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":3795,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriés",{"_index":3418,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["appservice",{"_index":696,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["après",{"_index":3907,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":3706,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":2919,"title":{},"body":{"index.html":{}}}],["argon2",{"_index":641,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":928,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":967,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":3732,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["argumentmetadata",{"_index":1528,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["arguments",{"_index":284,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["arguments[1",{"_index":286,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[2",{"_index":305,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["argumentshost",{"_index":664,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["array",{"_index":348,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"controllers/IdentitiesController.html":{},"classes/SyncIdentitiesDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arraynotempty",{"_index":1469,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["arrays",{"_index":2182,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["arrondi",{"_index":4119,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":3616,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":3791,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":3613,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ascii",{"_index":1379,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["ask",{"_index":2593,"title":{},"body":{"controllers/PasswdController.html":{}}}],["asktoken",{"_index":2597,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["asktoken(asktoken",{"_index":1353,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktoken.mail",{"_index":1361,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktoken.uid",{"_index":1354,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktokendto",{"_index":773,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["assertions",{"_index":3564,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assigned",{"_index":3924,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":3925,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assure",{"_index":3662,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assurez",{"_index":4030,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":3718,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asyncquery",{"_index":1082,"title":{},"body":{"controllers/BackendsController.html":{}}}],["attendez",{"_index":4034,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":4001,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":4032,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":4039,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":1701,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":2139,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":2114,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributes",{"_index":342,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes[key",{"_index":2165,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":2134,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributs",{"_index":1894,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":1679,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":1680,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":1681,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":1682,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":1683,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":3361,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":3832,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":790,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":865,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":866,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1500,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":788,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":970,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":791,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":821,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":794,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":895,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":2968,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":723,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{}}}],["authguardinternal",{"_index":848,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardinternal(['jwt",{"_index":839,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":856,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":811,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":1053,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":3879,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementidskipsymbol",{"_index":3154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoincrementpluginoptions",{"_index":1019,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["autoincrementplugintrackerspec",{"_index":1054,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["automatique",{"_index":3999,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":3910,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":3437,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autorisées",{"_index":3359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autres",{"_index":3687,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":1893,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["avancées",{"_index":2999,"title":{},"body":{"index.html":{}}}],["avec",{"_index":1830,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoir",{"_index":3315,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":3597,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["await",{"_index":238,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ayant",{"_index":4004,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["backend",{"_index":1060,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backendcodesenum",{"_index":2840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backendname",{"_index":2776,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backendresultinfointerface",{"_index":1056,"title":{"interfaces/BackendResultInfoInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["backendresultinterface",{"_index":1059,"title":{"interfaces/BackendResultInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backends",{"_index":1073,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends.command",{"_index":1397,"title":{},"body":{"modules/CliModule.html":{}}}],["backends.controller",{"_index":1154,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":1101,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1501,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscommand",{"_index":1062,"title":{"classes/BackendsCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{}}}],["backendscommand.registerwithsubcommands",{"_index":1401,"title":{},"body":{"modules/CliModule.html":{}}}],["backendscontroller",{"_index":1074,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backendsmodule",{"_index":1145,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":1066,"title":{"injectables/BackendsService.html":{}},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["backendssyncallcommand",{"_index":1069,"title":{"classes/BackendsSyncallCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["background",{"_index":1302,"title":{},"body":{"injectables/BackendsService.html":{}}}],["badrequestexception",{"_index":1177,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(\"la",{"_index":1872,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('identity",{"_index":1869,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('invalid",{"_index":1381,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('missing",{"_index":1848,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('no",{"_index":1263,"title":{},"body":{"injectables/BackendsService.html":{}}}],["badrequestexception(`invalid",{"_index":2568,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["badrequestoptions",{"_index":3247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barre",{"_index":3937,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":3963,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":2869,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["base64",{"_index":1363,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["based",{"_index":2016,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["baser",{"_index":4088,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":2905,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":412,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":2980,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["basée",{"_index":3975,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":3974,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":3719,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["beforeall(async",{"_index":3619,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforecreate'].join(eventemitterseparator",{"_index":290,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforedelete'].join(eventemitterseparator",{"_index":334,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeeach(async",{"_index":3634,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeevent",{"_index":255,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.data",{"_index":292,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.filter",{"_index":258,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.options",{"_index":264,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.projection",{"_index":262,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.update",{"_index":308,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.data",{"_index":291,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.filter",{"_index":257,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.options",{"_index":263,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.projection",{"_index":259,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.stop",{"_index":256,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.update",{"_index":326,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevents",{"_index":247,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindandcount'].join(eventemitterseparator",{"_index":252,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindbyid'].join(eventemitterseparator",{"_index":275,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindone'].join(eventemitterseparator",{"_index":279,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupdate'].join(eventemitterseparator",{"_index":307,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupsert'].join(eventemitterseparator",{"_index":325,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["besoin",{"_index":4063,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":3694,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["bien",{"_index":3453,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":2521,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":3267,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":2650,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["body",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"interfaces/RawBodyBufferOptions.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body('schema",{"_index":1947,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["body.action",{"_index":1127,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.decorator.ts",{"_index":3145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.payload",{"_index":1129,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.state",{"_index":1878,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["body.token",{"_index":2627,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.uid",{"_index":2618,"title":{},"body":{"controllers/PasswdController.html":{}}}],["bodymodel",{"_index":3219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyoptions",{"_index":3221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyparser",{"_index":1427,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":2657,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":2654,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bon",{"_index":3663,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":552,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthGuard.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["boolean'].includes(typeof",{"_index":3279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["booléen",{"_index":3317,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":605,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["bouton",{"_index":3902,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":3945,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["browse",{"_index":3110,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3107,"title":{},"body":{"modules.html":{}}}],["buffer.middleware.ts",{"_index":2649,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["builder.vue",{"_index":3846,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["buildyup",{"_index":2122,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["buildyup(schema",{"_index":2169,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["bullmodule",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmodule.forrootasync",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmq",{"_index":97,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"interfaces/ExecuteJobOptions.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cahier",{"_index":3365,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calculer",{"_index":3753,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":3967,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["camelcase",{"_index":3354,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":4121,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["canactivate",{"_index":840,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":844,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["capacités",{"_index":3540,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":3773,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caractères",{"_index":3311,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":4126,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cart",{"_index":3483,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":3567,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["catch",{"_index":403,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["catch(error.validationerror",{"_index":2540,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":662,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":2088,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["ce",{"_index":2150,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ceci",{"_index":3530,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":3775,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":3702,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":3699,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["certaine",{"_index":4005,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":3869,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":3015,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cet",{"_index":3761,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":3537,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":3871,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":4036,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champ",{"_index":1902,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":1834,"title":{},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":165,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["change(@body",{"_index":2615,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(body",{"_index":2585,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwddto",{"_index":1347,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["changed",{"_index":2614,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changed.'})@apiresponse({status",{"_index":2588,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changepassworddto",{"_index":1310,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["changepwdatnextlogin",{"_index":2664,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["channel",{"_index":1105,"title":{},"body":{"controllers/BackendsController.html":{}}}],["chaque",{"_index":2950,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["charactères",{"_index":4037,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":3932,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":3366,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":3796,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":3310,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chaînes",{"_index":3360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":1853,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":3893,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checker",{"_index":1204,"title":{},"body":{"injectables/BackendsService.html":{}}}],["checking",{"_index":3814,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chemin",{"_index":3881,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":3417,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["children",{"_index":1505,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["ci",{"_index":3685,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cibles",{"_index":2994,"title":{},"body":{"index.html":{}}}],["cipher",{"_index":1357,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipher.final('base64",{"_index":1364,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipher.getauthtag().tostring('base64",{"_index":1365,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipher.update",{"_index":1360,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipherdata",{"_index":1321,"title":{"interfaces/CipherData.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["ciphertext",{"_index":1359,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["clarifier",{"_index":3596,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["class1",{"_index":3261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classe",{"_index":2147,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["classtransformoptions",{"_index":3285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleardatabase",{"_index":2508,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearsession",{"_index":887,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":897,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1206,"title":{},"body":{"injectables/BackendsService.html":{}}}],["cli/agents.command",{"_index":618,"title":{},"body":{"modules/AgentsModule.html":{}}}],["client",{"_index":3509,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["climodule",{"_index":1388,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["close",{"_index":1134,"title":{},"body":{"controllers/BackendsController.html":{}}}],["cluster_agentsmodule",{"_index":608,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":609,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":610,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":857,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":859,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":860,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":858,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":1146,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_exports",{"_index":1147,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_imports",{"_index":1148,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":1149,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":1389,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_imports",{"_index":1390,"title":{},"body":{"modules/CliModule.html":{}}}],["cluster_coremodule",{"_index":1490,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1491,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1492,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":1717,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":1718,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule",{"_index":1956,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_exports",{"_index":1957,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_providers",{"_index":1958,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":2061,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_exports",{"_index":2062,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_providers",{"_index":2063,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":2092,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":2094,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":2093,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_jobsmodule",{"_index":2310,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":2311,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":2312,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule",{"_index":2415,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_exports",{"_index":2416,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":2417,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":2462,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":2463,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":2477,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":2479,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":2478,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":2632,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_imports",{"_index":2634,"title":{},"body":{"modules/PasswdModule.html":{}}}],["cluster_passwdmodule_providers",{"_index":2633,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":2730,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":2731,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":2732,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":1899,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["clés",{"_index":3742,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":3028,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":3456,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1824,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["codes.enum.ts",{"_index":2842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":1684,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collection",{"_index":1045,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Form.html":{},"classes/Logger.html":{}}}],["collections",{"_index":2529,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":2531,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["combine",{"_index":2181,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["command",{"_index":376,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commander",{"_index":383,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["commandrunner",{"_index":377,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["comme",{"_index":3383,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":1284,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":3809,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["commonlogdb",{"_index":2234,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":2250,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":4026,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":2967,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":3407,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["communiquer",{"_index":2941,"title":{},"body":{"index.html":{}}}],["compact",{"_index":4100,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compile",{"_index":3640,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":3830,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":3565,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["completed",{"_index":1140,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{}}}],["completedjob",{"_index":1240,"title":{},"body":{"injectables/BackendsService.html":{}}}],["completion",{"_index":3400,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexes",{"_index":3004,"title":{},"body":{"index.html":{}}}],["complémentaires",{"_index":4080,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["complétée",{"_index":1876,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["component",{"_index":1685,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":3747,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":3707,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":1887,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["composant",{"_index":3837,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":3844,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":2915,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":3956,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":3433,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":2904,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":3813,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comptes",{"_index":2969,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["concerned",{"_index":2441,"title":{},"body":{"classes/Logger.html":{}}}],["concernedto",{"_index":1165,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopart",{"_index":1402,"title":{"classes/ConcernedToPart.html":{}},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernedtopartdto",{"_index":1410,"title":{"classes/ConcernedToPartDTO.html":{}},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopartschema",{"_index":1408,"title":{},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{},"miscellaneous/variables.html":{}}}],["concernées",{"_index":4033,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":3922,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conclusion",{"_index":2987,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":3645,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('ioredis.options",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.uri",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('jwt.options.secret",{"_index":2333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mongoose.options",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.plugins",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.uri",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configinstance",{"_index":1417,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["configmodule",{"_index":711,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["configmodule.forroot",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configobjectattributedto",{"_index":1460,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectobjectclassdto",{"_index":1473,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectschemadto",{"_index":1474,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1466,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configs/identities/jsonforms",{"_index":1949,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/jsonforms/${schema",{"_index":1990,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/validations",{"_index":2039,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["configs/identities/validations/${key}.yml",{"_index":2131,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["configservice",{"_index":83,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('ioredis.port",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('jwt.options",{"_index":879,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":877,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":4146,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":2927,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":3688,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":3836,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configurer",{"_index":2948,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":4031,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":4006,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":3887,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":2191,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":2200,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":2525,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":3522,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":116,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connection_error",{"_index":2863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connexion",{"_index":3528,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["console",{"_index":1202,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('error",{"_index":405,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('agent",{"_index":401,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["console.log('completedjob",{"_index":1242,"title":{},"body":{"injectables/BackendsService.html":{}}}],["console.log('dynamic",{"_index":2048,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('generating",{"_index":2044,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('hard",{"_index":2046,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('keyring",{"_index":2369,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('validations",{"_index":1555,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["console.log(`file",{"_index":1997,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`generating",{"_index":1993,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`writing",{"_index":2035,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(e",{"_index":968,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":3548,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(identity",{"_index":1072,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["console.log(user",{"_index":966,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":2190,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":936,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{}}}],["const",{"_index":170,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":4122,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":3353,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":3557,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constructeur",{"_index":3517,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":1536,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":645,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(jobs.name",{"_index":2319,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":2426,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(@injectmodel(logger.name",{"_index":2470,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(@injectmodel(tasks.name",{"_index":2739,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(_model",{"_index":625,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["constructor(_options",{"_index":2248,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":2322,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(backends",{"_index":2638,"title":{},"body":{"injectables/PasswdService.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["constructor(data",{"_index":683,"title":{},"body":{"classes/ApiSession.html":{}}}],["constructor(moduleref",{"_index":443,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["constructor(payload",{"_index":2747,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":517,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AuthGuard.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{}}}],["constructor(protected",{"_index":410,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesValidationController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["constructor(reflector",{"_index":841,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(request",{"_index":1525,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construire",{"_index":3857,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":3855,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":3889,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenant",{"_index":1897,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":3935,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":4124,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":4016,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contentsecuritypolicy",{"_index":1433,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":3982,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["context.getclass",{"_index":853,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context.gethandler",{"_index":854,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":160,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":2151,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contextid",{"_index":3302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contextidfactory.create",{"_index":3303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contient",{"_index":3944,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":1301,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["control",{"_index":2005,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["controller",{"_index":447,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":514,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":818,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":1113,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1489,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('form",{"_index":1636,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":1815,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["controller('jobs",{"_index":2284,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('keyrings",{"_index":2390,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('logger",{"_index":2461,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":2476,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('management/identities/jsonforms",{"_index":1943,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["controller('management/identities/validation",{"_index":2082,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('passwd",{"_index":2609,"title":{},"body":{"controllers/PasswdController.html":{}}}],["controller('tasks",{"_index":2729,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":449,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convertis",{"_index":3797,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":4120,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["conçu",{"_index":3421,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":2896,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1486,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1502,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1488,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":385,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{}}}],["core/agents/_enum/agent",{"_index":2706,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/_parts/security.part.schema",{"_index":436,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/_parts/state.part.schema",{"_index":435,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":616,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["core/agents/agents.module",{"_index":869,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{}}}],["core/agents/agents.service",{"_index":387,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":873,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":874,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.module",{"_index":1399,"title":{},"body":{"modules/CliModule.html":{}}}],["core/auth/auth.service",{"_index":812,"title":{},"body":{"controllers/AuthController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["core/backends/_enum/action",{"_index":1324,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["core/backends/backends.module",{"_index":1398,"title":{},"body":{"modules/CliModule.html":{},"modules/PasswdModule.html":{}}}],["core/backends/backends.service",{"_index":1067,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["core/core.module",{"_index":712,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":3915,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/jobs/_schemas/jobs.schema",{"_index":1325,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":2361,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":2362,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.module",{"_index":1396,"title":{},"body":{"modules/CliModule.html":{}}}],["core/keyrings/keyrings.service",{"_index":2363,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["corecontroller",{"_index":1484,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["coremodule",{"_index":706,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":752,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1487,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"overview.html":{}}}],["corps",{"_index":3993,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correctement",{"_index":4145,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspond",{"_index":4081,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":1892,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["corresponding",{"_index":2023,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["correspondra",{"_index":3774,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["correspondre",{"_index":3342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corrupted",{"_index":955,"title":{},"body":{"injectables/AuthService.html":{}}}],["count",{"_index":179,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":190,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["count(res",{"_index":1778,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["counter",{"_index":1048,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["couvre",{"_index":3784,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create",{"_index":180,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":520,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":197,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["create(res",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":507,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator.ts",{"_index":3146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createassertions",{"_index":3669,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":3672,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["created",{"_index":300,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["createdat",{"_index":296,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":293,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions(service",{"_index":3673,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":3563,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":3635,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":3627,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":3570,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":3756,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createparamdecorator((_data",{"_index":3296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtokens",{"_index":888,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":899,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":406,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["creation",{"_index":3842,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["credentials",{"_index":3013,"title":{},"body":{"index.html":{}}}],["crucial",{"_index":3770,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":3568,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crudmode",{"_index":3852,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crush.ts",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto",{"_index":925,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.createcipheriv(passwdservice.token_algorithm",{"_index":1358,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.createdecipheriv(passwdservice.token_algorithm",{"_index":1373,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_iv).tostring('base64",{"_index":1356,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_k).tostring('hex",{"_index":1355,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cryptographiques",{"_index":3411,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":3524,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":3693,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":3618,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":3560,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":1829,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":3587,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":669,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":2541,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":671,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curl",{"_index":3998,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":1055,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["customfields",{"_index":413,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":545,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto:8",{"_index":569,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":3493,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cycle",{"_index":3379,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cypherdata",{"_index":1370,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.iv",{"_index":1375,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.k",{"_index":1374,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["d",{"_index":4058,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":3583,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":3946,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":3708,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":3752,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'attente",{"_index":3504,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":3801,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":3018,"title":{},"body":{"index.html":{}}}],["d'autres",{"_index":3763,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":3499,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":3378,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'environnements",{"_index":3010,"title":{},"body":{"index.html":{}}}],["d'erreur",{"_index":3808,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":2942,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identités",{"_index":2892,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":3787,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'installation",{"_index":3466,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":4142,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":2148,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":2152,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":3986,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":3938,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":3566,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":3376,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'utilisation",{"_index":3468,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":3819,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":3321,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["daemon",{"_index":3371,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["dans",{"_index":1900,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":200,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/variables.html":{}}}],["data.access_token",{"_index":949,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.attributes",{"_index":2133,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.identity?.security?.secretkey",{"_index":985,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.newpassword",{"_index":1387,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["data.objectclasses",{"_index":2132,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.password",{"_index":646,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security",{"_index":648,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security.secretkey",{"_index":649,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data[key",{"_index":690,"title":{},"body":{"classes/ApiSession.html":{}}}],["database",{"_index":2199,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["datapart",{"_index":1513,"title":{"classes/DataPart.html":{}},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datapartschema",{"_index":1518,"title":{},"body":{"classes/DataPart.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":297,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/BackendsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["date.now",{"_index":2374,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["db",{"_index":2193,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["de",{"_index":1544,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["deamon",{"_index":2935,"title":{},"body":{"index.html":{}}}],["debug",{"_index":1542,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":2226,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_errors",{"_index":1552,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":2542,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["decipher",{"_index":1372,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":1376,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decipher.update(token",{"_index":1378,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["declarations",{"_index":604,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypttoken",{"_index":2637,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decrypttoken(token",{"_index":1368,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["deepobject",{"_index":3240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":349,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["default_context",{"_index":2447,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["default_data_type",{"_index":1516,"title":{},"body":{"classes/DataPart.html":{},"miscellaneous/variables.html":{}}}],["default_increment",{"_index":3158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_message",{"_index":2757,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["default_status_code",{"_index":2755,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["default_sync_timeout",{"_index":1198,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/variables.html":{}}}],["default_third_party_auth",{"_index":431,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["default_validations",{"_index":2758,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1041,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaultsrc",{"_index":1435,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1450,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":1593,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defaut",{"_index":3020,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["delete",{"_index":181,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":470,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":201,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["deleteassertions",{"_index":3681,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":3683,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":335,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteerrorassertions(service",{"_index":3684,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["demon",{"_index":3494,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["dense",{"_index":3899,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["departmentnumber",{"_index":3029,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":602,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":1833,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1462,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["describe('create",{"_index":3671,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":3682,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":3651,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":3656,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":3665,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":3608,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":3675,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":780,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Logger.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessous",{"_index":3864,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":3686,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["destinées",{"_index":4003,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["detected",{"_index":1207,"title":{},"body":{"injectables/BackendsService.html":{}}}],["determine",{"_index":2015,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["deux",{"_index":1888,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":915,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":883,"title":{},"body":{"injectables/AuthService.html":{}}}],["devez",{"_index":4035,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devtokenpath",{"_index":944,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":2121,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":2137,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["différentes",{"_index":2901,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":2949,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["directconnection",{"_index":1449,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["directives",{"_index":1434,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directory",{"_index":2178,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":2858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["discut",{"_index":3486,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["displayname",{"_index":414,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponible",{"_index":4144,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":3888,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":3969,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":3933,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["divers",{"_index":3727,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":2993,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["doc",{"_index":3496,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":121,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":1042,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["document.save(options",{"_index":301,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["documentation",{"_index":3427,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documents",{"_index":3659,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doe",{"_index":3205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":2020,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["doit",{"_index":3308,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":3408,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["done",{"_index":2325,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(new",{"_index":2341,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":2343,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":2902,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dossier",{"_index":3588,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dto/ask",{"_index":1326,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["dto/change",{"_index":1328,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["dto/reset",{"_index":1331,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["dto/verify",{"_index":2608,"title":{},"body":{"controllers/PasswdController.html":{}}}],["dtovalidationpipe",{"_index":728,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["du",{"_index":2920,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["duplicatedcode",{"_index":254,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["dupont",{"_index":4052,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":4025,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dynamicconfig",{"_index":2180,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles",{"_index":2042,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles].filter((file",{"_index":2049,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["dynamicconfigpath",{"_index":1989,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicmodule",{"_index":1497,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["dynamique",{"_index":3709,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":3705,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":3716,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["début",{"_index":4137,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenche",{"_index":2936,"title":{},"body":{"index.html":{}}}],["déclenchement",{"_index":3381,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":3475,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":3793,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":3868,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":4048,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":3457,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":4125,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":2952,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":3717,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":3885,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":4043,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":3990,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":3387,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["déj",{"_index":1875,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["délais",{"_index":3480,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":3615,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":2918,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":3764,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":3507,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":3598,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":3532,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":4092,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":3691,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":3788,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":3818,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":3968,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":3438,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":3369,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":3430,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":953,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["each",{"_index":586,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["ecriture",{"_index":3550,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effectuer",{"_index":2938,"title":{},"body":{"index.html":{}}}],["effectuées",{"_index":4061,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":3435,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["element",{"_index":2022,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elements",{"_index":2003,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elle",{"_index":3505,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":367,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":4132,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emitter",{"_index":154,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"dependencies.html":{}}}],["emitter.constant",{"_index":228,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["emitter.constant.ts",{"_index":3162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emplacements",{"_index":3947,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":3265,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber",{"_index":3030,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeetype",{"_index":3031,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["empty",{"_index":3658,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":2976,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":339,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["enabled",{"_index":943,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":1538,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["endpoint",{"_index":3992,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enregistrement",{"_index":2951,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":4098,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entier",{"_index":3322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entier.example",{"_index":4110,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entite",{"_index":1919,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["entity",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{}}}],["entityid",{"_index":439,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["entre",{"_index":2900,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entrypoints",{"_index":2932,"title":{},"body":{"index.html":{}}}],["entrée",{"_index":3909,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":1578,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2835,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":3875,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":3926,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":3923,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":3897,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":3876,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["environnements",{"_index":3003,"title":{},"body":{"index.html":{}}}],["envoyées",{"_index":4040,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["equal",{"_index":1855,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["err",{"_index":1111,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["err.errors",{"_index":2549,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":2555,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":2550,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":2554,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":2552,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":2175,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["err.response",{"_index":1261,"title":{},"body":{"injectables/BackendsService.html":{}}}],["erreur",{"_index":1543,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":3721,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["error",{"_index":404,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('erreur",{"_index":3758,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('moduleref",{"_index":107,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["error('request",{"_index":169,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error(message",{"_index":2208,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":2536,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":1563,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":1561,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":1557,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":1864,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["error.inner.reduce((acc",{"_index":2173,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["error.message",{"_index":1295,"title":{},"body":{"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error.property",{"_index":1559,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":1565,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.validationerror",{"_index":2535,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":1862,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":1554,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":1562,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":1567,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":1564,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorhttpstatuscode",{"_index":1121,"title":{},"body":{"controllers/BackendsController.html":{}}}],["errormessage",{"_index":3307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erroronnotfound",{"_index":1802,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["errors",{"_index":1540,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.map((error",{"_index":1553,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":1569,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{}}}],["espaces",{"_index":4136,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["est",{"_index":1874,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1896,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":2959,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":2981,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["event",{"_index":235,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["eventemitter2",{"_index":89,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["eventemitterseparator",{"_index":226,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/variables.html":{}}}],["ex",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":787,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Logger.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":3546,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["examplequeueservice",{"_index":3544,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["exception",{"_index":666,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":2548,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":660,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:5",{"_index":665,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":2089,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":2091,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":2090,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":675,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":676,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1539,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":661,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":3731,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":2434,"title":{},"body":{"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["exclusivemaximum",{"_index":3338,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":3335,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exec",{"_index":321,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["executedjob",{"_index":1255,"title":{},"body":{"injectables/BackendsService.html":{}}}],["executejob",{"_index":1076,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["executejob(actiontype",{"_index":1163,"title":{},"body":{"injectables/BackendsService.html":{}}}],["executejob(res",{"_index":1080,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejobdto",{"_index":1081,"title":{"classes/ExecuteJobDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["executejoboptions",{"_index":1166,"title":{"interfaces/ExecuteJobOptions.html":{}},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["executioncontext",{"_index":845,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exemple",{"_index":3556,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":3574,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exhaustive",{"_index":3428,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":3403,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":952,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["existe",{"_index":3017,"title":{},"body":{"index.html":{}}}],["existssync",{"_index":934,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":947,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(dynamicconfigpath",{"_index":1991,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(filepath",{"_index":1998,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(hardconfigpath",{"_index":1992,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":2156,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":2545,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expiresin",{"_index":958,"title":{},"body":{"injectables/AuthService.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explode",{"_index":3241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":607,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["expose",{"_index":2931,"title":{},"body":{"index.html":{}}}],["exposition",{"_index":3377,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":152,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["express.user",{"_index":158,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expression",{"_index":3343,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["extended",{"_index":2656,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["extends",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":3420,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extraction",{"_index":3800,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":2330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f]{24",{"_index":533,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":466,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})/state",{"_index":1868,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["f]{24})/state')@apiparam({name",{"_index":1794,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["fa",{"_index":465,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":2898,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facsimiletelephonenumber",{"_index":3032,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["facultatifs",{"_index":3996,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":1143,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["failedjob",{"_index":1234,"title":{},"body":{"injectables/BackendsService.html":{}}}],["fails",{"_index":2116,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["false})@isoptional",{"_index":3067,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["famille",{"_index":4027,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fatal",{"_index":2232,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":2231,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal,error,warn,info,debug",{"_index":3023,"title":{},"body":{"index.html":{}}}],["fiabilit",{"_index":3443,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":2157,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":3600,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":1022,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":1736,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":1747,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["fieldname",{"_index":1739,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":1724,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":585,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1510,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["fields.dto.ts:8",{"_index":1511,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":2921,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["file.schema.endswith('.yml",{"_index":2050,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj",{"_index":2054,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.file.replace('.ui.yml",{"_index":2056,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj.file.replace('.yml",{"_index":2183,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fileobj.path}/${fileobj.file",{"_index":2055,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.source",{"_index":2184,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filepath",{"_index":1995,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files",{"_index":2047,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["files.length",{"_index":2052,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["filled",{"_index":3898,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":195,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter((k",{"_index":3207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter.dto.ts",{"_index":2573,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filter.dto.ts:1",{"_index":2574,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":477,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filterquery",{"_index":191,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":1846,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/variables.html":{}}}],["filters[key",{"_index":1850,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filterschema",{"_index":475,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filtersquery",{"_index":1801,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filtersquery.length",{"_index":1847,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["fin",{"_index":3912,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":1018,"title":{},"body":{"injectables/AuthService.html":{}}}],["finaux",{"_index":3469,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":182,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["find(filter",{"_index":205,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findall",{"_index":1964,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findandcount",{"_index":183,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":209,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findandcountassertions",{"_index":3648,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":3653,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions(service",{"_index":3654,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":184,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":211,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["findbyid(id",{"_index":2690,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidandupdate",{"_index":310,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findbyidassertions",{"_index":3655,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":3657,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions(service",{"_index":3660,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":185,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":213,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findone(schema",{"_index":1968,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findoneandupdate",{"_index":328,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findoneassertions",{"_index":3661,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":3666,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions(service",{"_index":3668,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fine",{"_index":3007,"title":{},"body":{"index.html":{}}}],["fingerprint",{"_index":1756,"title":{},"body":{"classes/Identities.html":{}}}],["finish",{"_index":1298,"title":{},"body":{"injectables/BackendsService.html":{}}}],["finishedat",{"_index":1217,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["firemessage(observer",{"_index":1104,"title":{},"body":{"controllers/BackendsController.html":{}}}],["fix",{"_index":2210,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixes",{"_index":3715,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flatten",{"_index":2027,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["flexibilit",{"_index":2929,"title":{},"body":{"index.html":{}}}],["flexible",{"_index":2991,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fois",{"_index":3713,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonction",{"_index":3569,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":3479,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":2998,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":3581,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":3664,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":3558,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["font",{"_index":3000,"title":{},"body":{"index.html":{}}}],["fontsrc",{"_index":1440,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbiddenexception",{"_index":923,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["form",{"_index":1591,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":1721,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":1722,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":1633,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":3316,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formcontroller",{"_index":1617,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["formcontroller.projection",{"_index":1639,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":1645,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formcreatedto:12",{"_index":1675,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":1670,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":1676,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":1669,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":1672,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":1674,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":1673,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":1671,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":1619,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formdto)@apiresponse({type",{"_index":1621,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":1677,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{}}}],["formfieldpart",{"_index":1702,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{}}}],["formfieldpartschema",{"_index":1714,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["formmodule",{"_index":1716,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":1613,"title":{},"body":{"classes/Form.html":{}}}],["formschema",{"_index":1615,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{},"miscellaneous/variables.html":{}}}],["formsectiondto",{"_index":1665,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{}}}],["formsectionpart",{"_index":1611,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formsectionpartschema",{"_index":1603,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["formservice",{"_index":1632,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["formtypelist",{"_index":1659,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["formtypes",{"_index":1608,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":1614,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formtypes[k",{"_index":3251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formulaire",{"_index":3838,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":3492,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":1628,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["found",{"_index":1870,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["found.dto.ts",{"_index":2559,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:6",{"_index":2561,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":2560,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["fourni",{"_index":4138,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":3429,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":3642,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":3501,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":3471,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":3573,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["framesrc",{"_index":1438,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":3853,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":3391,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontend",{"_index":2983,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fréquente",{"_index":2962,"title":{},"body":{"index.html":{}}}],["fs",{"_index":763,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["function",{"_index":1050,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["garantir",{"_index":3441,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gcm",{"_index":1345,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["generate",{"_index":1051,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/typealiases.html":{}}}],["generate(@res",{"_index":1946,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(res",{"_index":1931,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(undefined",{"_index":1970,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["generateall",{"_index":1929,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["generateall(@res",{"_index":1944,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generateall(res",{"_index":1934,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generic_error",{"_index":2861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic_stopped",{"_index":2862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gestion",{"_index":3006,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get(':_id([0",{"_index":463,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(':schema",{"_index":1937,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get('count",{"_index":1779,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["get('session",{"_index":824,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined",{"_index":807,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":478,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(value",{"_index":3288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getinfo",{"_index":693,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@res",{"_index":699,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo(res",{"_index":694,"title":{},"body":{"controllers/AppController.html":{}}}],["getkeys",{"_index":3270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkeys(item",{"_index":3282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkeys(v",{"_index":3276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getkeys(value",{"_index":3284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmodel",{"_index":220,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":2514,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":3638,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpayload",{"_index":2745,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getqueue",{"_index":95,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getredisconnectiontoken",{"_index":99,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrequest",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath(errorschemadto",{"_index":3229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":3218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(notfounddto",{"_index":3235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":3242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedresponsedto",{"_index":3245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getservicename",{"_index":150,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":889,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":901,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":2887,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":2583,"title":{},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{}}}],["gettoken'})@isstring",{"_index":2772,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken(@body",{"_index":2621,"title":{},"body":{"controllers/PasswdController.html":{}}}],["gettoken(asktoken",{"_index":2591,"title":{},"body":{"controllers/PasswdController.html":{}}}],["getvalidationerrors",{"_index":2534,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":2538,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":2746,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["github",{"_index":3463,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["givenname",{"_index":3033,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["grand",{"_index":3446,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["grille",{"_index":3884,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["group",{"_index":2009,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["groupindex",{"_index":2012,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["guides",{"_index":3467,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":2923,"title":{},"body":{"index.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":3987,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":4140,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":3722,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":4094,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":3973,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":3858,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":3370,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":4057,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["hardconfig",{"_index":2179,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["hardconfigfiles",{"_index":2040,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfigpath",{"_index":1987,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hash",{"_index":640,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(data.password",{"_index":647,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.$set.password",{"_index":656,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.password",{"_index":653,"title":{},"body":{"injectables/AgentsService.html":{}}}],["header",{"_index":4015,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":810,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":835,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1420,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":1423,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["hidden",{"_index":516,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["hooks",{"_index":3834,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["horizontallayout",{"_index":2019,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["host",{"_index":663,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"index.html":{}}}],["host.switchtohttp",{"_index":670,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["http",{"_index":4009,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities",{"_index":4056,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities/upsert",{"_index":4079,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1456,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":3262,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["httpexception",{"_index":1178,"title":{},"body":{"injectables/BackendsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception.createbody",{"_index":2546,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["https://randomkeygen.com",{"_index":1452,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["httpstatus",{"_index":484,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":1827,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["httpstatus.bad_request",{"_index":1267,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":524,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.not_acceptable",{"_index":1122,"title":{},"body":{"controllers/BackendsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":2562,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":532,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1300,"title":{},"body":{"injectables/BackendsService.html":{}}}],["hzcdvqhscvdsdfdhodcjmufekfjvkas8",{"_index":829,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["héritent",{"_index":3582,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["iauthmoduleoptions",{"_index":867,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":3595,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["icon",{"_index":1725,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":3874,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":499,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["identifiant",{"_index":4028,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identit",{"_index":3824,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite",{"_index":4078,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identities",{"_index":1183,"title":{"classes/Identities.html":{}},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities).state",{"_index":1825,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identities.controller",{"_index":2065,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.dto",{"_index":1103,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identities.dto.ts",{"_index":2718,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["identities.dto.ts:7",{"_index":2720,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["identities.jsonforms.controller",{"_index":1960,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["identities.jsonforms.service",{"_index":1942,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identities.map((identity",{"_index":1252,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identities.name",{"_index":2070,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.push",{"_index":1269,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identities.service",{"_index":1806,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":2096,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":2081,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/identities.module",{"_index":2484,"title":{},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}}}],["identities/identities.service",{"_index":1332,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identitiescontroller",{"_index":1774,"title":{"controllers/IdentitiesController.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescontroller.projection",{"_index":1860,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identitiescreatedto",{"_index":1781,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiescreatedto:14",{"_index":1925,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:20",{"_index":1924,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:25",{"_index":1923,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:44",{"_index":1922,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiesdocument",{"_index":1769,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdto",{"_index":1783,"title":{"classes/IdentitiesDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":3166,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesjsonformscontroller",{"_index":1926,"title":{"controllers/IdentitiesJsonFormsController.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identitiesjsonformsmodule",{"_index":1955,"title":{"modules/IdentitiesJsonformsModule.html":{}},"body":{"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesjsonformsservice",{"_index":1941,"title":{"injectables/IdentitiesJsonformsService.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesmodel",{"_index":3609,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1150,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesschema",{"_index":1772,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":1159,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":1790,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":3168,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupsertdto",{"_index":1800,"title":{"classes/IdentitiesUpsertDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiesvalidation",{"_index":3490,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":2072,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identitiesvalidationfilter",{"_index":1811,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["identitiesvalidationmodule",{"_index":2066,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":1807,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":806,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity._id",{"_index":995,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":991,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.action",{"_index":1257,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.decorator",{"_index":816,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.decorator.ts",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identity.entityid",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.identity",{"_index":1271,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.identity._id",{"_index":1253,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.inetorgperson?.cn",{"_index":1282,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.inetorgperson?.givenname].join",{"_index":1283,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.state",{"_index":1266,"title":{},"body":{"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{}}}],["identity.toobject",{"_index":978,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity_create",{"_index":2852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_delete",{"_index":2854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_change",{"_index":2856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_reset",{"_index":2855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_update",{"_index":2853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identitycounter",{"_index":1049,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":1044,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":1001,"title":{},"body":{"injectables/AuthService.html":{}}}],["identitylifecycle",{"_index":1762,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.inactive",{"_index":1771,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate",{"_index":1181,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":2438,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.on_error",{"_index":1238,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.processing",{"_index":1289,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.synced",{"_index":1220,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.to_complete",{"_index":1826,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":3254,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_sync",{"_index":1246,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.to_validate",{"_index":1871,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.unknown",{"_index":1770,"title":{},"body":{"classes/Identities.html":{}}}],["identitée",{"_index":1828,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identités",{"_index":2924,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ids",{"_index":1881,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["idschema",{"_index":3169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idéal",{"_index":3002,"title":{},"body":{"index.html":{}}}],["ignored",{"_index":1205,"title":{},"body":{"injectables/BackendsService.html":{}}}],["ignoreexpiration",{"_index":2336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":3769,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["imgsrc",{"_index":1441,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":3738,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implements",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["implémentation",{"_index":3822,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":3711,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":3533,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":3541,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(plugin.package).then((plugin",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["importance",{"_index":3766,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":3841,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["imported",{"_index":2873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["importer",{"_index":2986,"title":{},"body":{"index.html":{}}}],["imports",{"_index":619,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["in_progress",{"_index":2886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive",{"_index":2876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incluant",{"_index":3729,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["includeresultmetadata",{"_index":320,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["inclure",{"_index":4019,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["increment",{"_index":1028,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface.ts",{"_index":1021,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.logger.ts",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["increment.plugin.ts",{"_index":3155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incrementby",{"_index":1023,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{}}}],["indiquant",{"_index":4070,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":4018,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":4049,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individuel",{"_index":3820,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["indépendant",{"_index":3396,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inestapplicationcontext",{"_index":3301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inetorgperson",{"_index":357,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":3255,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.employeenumber",{"_index":4075,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.employeetype",{"_index":4076,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.uid",{"_index":1349,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgpersoncreatedto",{"_index":3061,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:11",{"_index":3088,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:15",{"_index":3091,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:19",{"_index":3092,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:24",{"_index":3089,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:29",{"_index":3100,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:34",{"_index":3090,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:39",{"_index":3093,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:44",{"_index":3094,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:49",{"_index":3095,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:53",{"_index":3096,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:59",{"_index":3097,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:64",{"_index":3098,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:69",{"_index":3099,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:7",{"_index":3103,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:74",{"_index":3101,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:79",{"_index":3102,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:84",{"_index":3104,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:89",{"_index":3105,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":1904,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":3170,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":1760,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersonupdatedto",{"_index":3086,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["informations",{"_index":2946,"title":{},"body":{"index.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":1013,"title":{},"body":{"injectables/AuthService.html":{}}}],["inférieure",{"_index":3339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["initialise",{"_index":3523,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialize",{"_index":2018,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["inject",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["injectmodel",{"_index":637,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["injectmodel(form.name",{"_index":1753,"title":{},"body":{"injectables/FormService.html":{}}}],["injectredis",{"_index":926,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["input",{"_index":3892,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["inputs",{"_index":446,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["inquirer",{"_index":392,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inquirerservice",{"_index":378,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["instance",{"_index":3511,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instanceof",{"_index":1863,"title":{},"body":{"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":3526,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instructions",{"_index":3861,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["integer",{"_index":3313,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["interactions",{"_index":3959,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interagir",{"_index":3510,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"index.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["interfaces/service.schema.interface",{"_index":230,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["internal",{"_index":677,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":2194,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloggeroptions",{"_index":2192,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloglevel",{"_index":2189,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":2186,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalservererrorexception",{"_index":1323,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["introduction",{"_index":3553,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":2159,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":3506,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":3389,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":3829,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":3833,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":1821,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["invalid_credentials",{"_index":2865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_json_response",{"_index":2866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_login",{"_index":2864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalide",{"_index":2162,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["invalides",{"_index":1839,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["invalidobjectclassadditionalfieldsstub",{"_index":3173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidrequiredadditionalfieldsstub",{"_index":3175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidschemastub",{"_index":3176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidtypeadditionalfieldsstub",{"_index":3177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ioredis",{"_index":102,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":2821,"title":{},"body":{"dependencies.html":{}}}],["isarray",{"_index":577,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SyncIdentitiesDto.html":{}}}],["isarray()@apiproperty({type",{"_index":2719,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["isarray()@isstring({each",{"_index":557,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isarray(nested",{"_index":3277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isboolean",{"_index":576,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":553,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":2503,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":2498,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":2403,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isemail",{"_index":575,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({required",{"_index":3074,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":550,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1470,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(actiontype",{"_index":1587,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isenum(configobjecttype",{"_index":1472,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(formtypelist",{"_index":1667,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":1658,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":1737,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":1734,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(identitylifecycle",{"_index":1914,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(identitystate",{"_index":1913,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isglobal",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["isip",{"_index":2406,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":2407,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid",{"_index":578,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@apiproperty",{"_index":1414,"title":{},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["ismongoid()@apiproperty({example",{"_index":1583,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":588,"title":{},"body":{"classes/AgentsDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsDto.html":{}}}],["isnotempty",{"_index":573,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePartDTO.html":{}}}],["isnotempty()@isenum(actiontype)@apiproperty({type",{"_index":1581,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnumber",{"_index":1700,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":1694,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":1909,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":2711,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isnumber()@isoptional()@isenum(identitylifecycle)@apiproperty({enum",{"_index":1907,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject",{"_index":1512,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@apiproperty",{"_index":2295,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":1648,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":568,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":1662,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":1905,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":1727,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isobject(nested",{"_index":3273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptional",{"_index":579,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isobject()@apiproperty({type",{"_index":1585,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":3076,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":1886,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":572,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPartDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":1654,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty()@isoptional",{"_index":3064,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":784,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isstring()@apiproperty({required",{"_index":3066,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1467,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":555,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":547,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":1650,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring({each",{"_index":2399,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["issyncedjob",{"_index":1211,"title":{},"body":{"injectables/BackendsService.html":{}}}],["isunprotected",{"_index":851,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isvalidobjectid",{"_index":1810,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["isvalidobjectid(filter",{"_index":1851,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["it('should",{"_index":3652,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["item",{"_index":3234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1889,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["iv",{"_index":1335,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["iverifyoptions",{"_index":2432,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":3477,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":3552,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":3689,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["job",{"_index":1125,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.discard",{"_index":1297,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.dto",{"_index":1100,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job.dto.ts",{"_index":1580,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:13",{"_index":1584,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:18",{"_index":1586,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:9",{"_index":1582,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.id",{"_index":1214,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.id}::completed",{"_index":1223,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.returnvalue",{"_index":1218,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":1290,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job:added",{"_index":1138,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:completed",{"_index":1141,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:failed",{"_index":1144,"title":{},"body":{"controllers/BackendsController.html":{}}}],["jobfailed",{"_index":1294,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobid",{"_index":1213,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobs",{"_index":1188,"title":{"classes/Jobs.html":{}},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/PasswdService.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{}}}],["jobs.controller",{"_index":2315,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":2316,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":2283,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/_enums/state.enum",{"_index":1187,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobs/_schemas/jobs.schema",{"_index":1189,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobs/jobs.module",{"_index":1156,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["jobs/jobs.service",{"_index":1190,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobscompleted",{"_index":1209,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobscontroller",{"_index":2276,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobscontroller.projection",{"_index":2286,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobscreatedto",{"_index":2289,"title":{"classes/JobsCreateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobscreatedto:11",{"_index":2306,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:15",{"_index":2303,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:21",{"_index":2305,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:25",{"_index":2309,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:29",{"_index":2304,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:33",{"_index":2307,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:37",{"_index":2308,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobsdocument",{"_index":2273,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["jobsdto",{"_index":2281,"title":{"classes/JobsDto.html":{}},"body":{"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobsmodule",{"_index":1151,"title":{"modules/JobsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsoptions",{"_index":1590,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["jobsschema",{"_index":2274,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{},"miscellaneous/variables.html":{}}}],["jobsservice",{"_index":1160,"title":{"injectables/JobsService.html":{}},"body":{"injectables/BackendsService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["jobstate",{"_index":1186,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"miscellaneous/enumerations.html":{}}}],["jobstate.completed",{"_index":1216,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstate.created",{"_index":1287,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["jobstate.failed",{"_index":1235,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstate.in_progress",{"_index":1231,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstore",{"_index":1279,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstore.toobject",{"_index":1307,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstoreupdated",{"_index":1292,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobsupdatedto",{"_index":2300,"title":{"classes/JobsUpdateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jour",{"_index":3631,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["json",{"_index":761,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":1010,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":981,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":1016,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(plaintext",{"_index":1380,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["json.parse(readfilesync('package.json",{"_index":768,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":948,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(result",{"_index":1371,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["json.stringify",{"_index":963,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["json.stringify(loginfos)].join",{"_index":289,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":237,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(request.body",{"_index":1556,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["json.stringify(validations",{"_index":1549,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonform",{"_index":2001,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonformpath",{"_index":2032,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms",{"_index":1994,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms')}/${schema",{"_index":2034,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms/identities.jsonforms.module",{"_index":2069,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonforms/identities.jsonforms.service",{"_index":2068,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonschema",{"_index":1999,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required",{"_index":2007,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required.includes(key",{"_index":2008,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonwebtoken",{"_index":931,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":1550,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":2338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":971,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":1014,"title":{},"body":{"injectables/AuthService.html":{}}}],["justifi",{"_index":3485,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1455,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":799,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":2334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":990,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":870,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":878,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":871,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":930,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":893,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":862,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["k",{"_index":1334,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/variables.html":{}}}],["keep",{"_index":1046,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"classes/ApiSession.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{}}}],["key._id.tostring",{"_index":2377,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.name",{"_index":2378,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat",{"_index":2371,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat.gettime",{"_index":2373,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.tojson",{"_index":2370,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.token",{"_index":2379,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyring",{"_index":2366,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyrings",{"_index":2344,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["keyrings.command",{"_index":1395,"title":{},"body":{"modules/CliModule.html":{}}}],["keyrings.controller",{"_index":2420,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":2421,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":2419,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":875,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["keyrings/keyrings.service",{"_index":938,"title":{},"body":{"injectables/AuthService.html":{}}}],["keyringscommand",{"_index":1393,"title":{"classes/KeyringsCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscommand.registerwithsubcommands",{"_index":1400,"title":{},"body":{"modules/CliModule.html":{}}}],["keyringscontroller",{"_index":2380,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{}}}],["keyringscontroller.projection",{"_index":2393,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatecommand",{"_index":2365,"title":{"classes/KeyringsCreateCommand.html":{}},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscreatedto",{"_index":2360,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{}}}],["keyringscreatedto:14",{"_index":2414,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:18",{"_index":2411,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:21",{"_index":2413,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":2412,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatequestions",{"_index":1394,"title":{"classes/KeyringsCreateQuestions.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringsdocument",{"_index":2352,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":2383,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["keyringsmodule",{"_index":861,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":2354,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"miscellaneous/variables.html":{}}}],["keyringsservice",{"_index":892,"title":{"injectables/KeyringsService.html":{}},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"overview.html":{}}}],["keys",{"_index":3178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys(instancetoplain(value",{"_index":3287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key}.yml",{"_index":2158,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["kradihsoy/lt",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["l'aide",{"_index":3985,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":3424,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":3413,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":3398,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":4095,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":4012,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":3452,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entrée",{"_index":4139,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":3785,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":3771,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":3908,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":1873,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'initiation",{"_index":3700,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":3527,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":3703,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":4022,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":4024,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'option",{"_index":3346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l'orchestrateur",{"_index":2917,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":3767,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":3913,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'échec",{"_index":3730,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":3487,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":4059,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["la",{"_index":2899,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":1686,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":3034,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":3759,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["langage",{"_index":3397,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":2965,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["lastchangedat",{"_index":2695,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastparam",{"_index":2212,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["lastupdatedat",{"_index":299,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":298,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["ldap",{"_index":2944,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":2907,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":1901,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["legend",{"_index":603,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["les",{"_index":2141,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lessthan",{"_index":4112,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["leurs",{"_index":4082,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":2217,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"index.html":{}}}],["levées",{"_index":3450,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liaison",{"_index":3882,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["license",{"_index":3106,"title":{"license.html":{}},"body":{"properties.html":{}}}],["lifecycle",{"_index":1757,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifestep",{"_index":3870,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":3989,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["limit",{"_index":1428,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"miscellaneous/variables.html":{}}}],["lire",{"_index":3929,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":3804,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list_backends",{"_index":2850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liste",{"_index":3779,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listerez",{"_index":4093,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":419,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"controllers/IdentitiesController.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["livrables",{"_index":3451,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":3481,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":3516,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["local",{"_index":437,"title":{},"body":{"classes/Agents.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["localstrategy",{"_index":863,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":2224,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"index.html":{}}}],["log(message",{"_index":2223,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["log.levels",{"_index":3289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log.setlevel",{"_index":3290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log_level=info",{"_index":3024,"title":{},"body":{"index.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{}}}],["logger(backendscontroller.name",{"_index":1114,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(passwdcontroller.name",{"_index":2611,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":161,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":2466,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":1548,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`atempt",{"_index":2339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.debug(`observer",{"_index":1109,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.debug(`try",{"_index":2435,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger.debug(exception['message",{"_index":668,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error(`observer",{"_index":1112,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.name",{"_index":2467,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":2460,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":1503,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggercontroller",{"_index":2457,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggerdocument",{"_index":2448,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1493,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggername",{"_index":1106,"title":{},"body":{"controllers/BackendsController.html":{}}}],["loggerschema",{"_index":2450,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":2459,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["loginfos",{"_index":282,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["logique",{"_index":3534,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":1425,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["loglevels",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":792,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":834,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":798,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2198,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["longueur",{"_index":3326,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":3905,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lowercase",{"_index":3348,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["léments",{"_index":3542,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":4051,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["mail",{"_index":776,"title":{},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mail'})@isstring",{"_index":782,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["maintenabilit",{"_index":3805,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":3375,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":3448,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintient",{"_index":2925,"title":{},"body":{"index.html":{}}}],["mais",{"_index":1832,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["majuscule.example",{"_index":4135,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["management",{"_index":2473,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":2483,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":2475,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":4010,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":3606,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/identities.dto",{"_index":3591,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":3592,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":1182,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_schemas/identities.schema",{"_index":1184,"title":{},"body":{"injectables/BackendsService.html":{}}}],["management/identities/identities.module",{"_index":1155,"title":{},"body":{"modules/BackendsModule.html":{}}}],["management/identities/identities.service",{"_index":1185,"title":{},"body":{"injectables/BackendsService.html":{}}}],["management/identities/jsonforms",{"_index":1928,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["management/identities/upsert",{"_index":4073,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/validation",{"_index":2074,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["management/management.module",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["managementcontroller",{"_index":2471,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["managementmodule",{"_index":707,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":2474,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"overview.html":{}}}],["manipulation",{"_index":2985,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":3422,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manquant",{"_index":2140,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":1837,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manuels",{"_index":3465,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["map",{"_index":1602,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["map((group",{"_index":2026,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["map((k",{"_index":3209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":4127,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["math.floor(index",{"_index":2013,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["matière",{"_index":4007,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":3489,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":3332,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":3330,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximal",{"_index":3320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximale",{"_index":3327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":4102,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":4105,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":3318,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":3325,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxretriesperrequest",{"_index":1446,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":3878,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["meilleure",{"_index":3812,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memory",{"_index":2518,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["message",{"_index":390,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["messageevent",{"_index":1108,"title":{},"body":{"controllers/BackendsController.html":{}}}],["messages",{"_index":3807,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":3960,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["meta_unprotected",{"_index":850,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"classes/MetadataDto.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":313,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata.createdby",{"_index":312,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedat",{"_index":317,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedby",{"_index":316,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata['context",{"_index":2239,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":2241,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":1647,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{}}}],["metadatadto:12",{"_index":1663,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["metadatapart",{"_index":126,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["metadatapartdto",{"_index":1661,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{}}}],["metadatapartschema",{"_index":129,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["methode",{"_index":3580,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["methodstubs",{"_index":3739,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":3695,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":3930,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["min",{"_index":3334,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mindate",{"_index":3331,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimal",{"_index":3324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimale",{"_index":3329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimales",{"_index":4045,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimum",{"_index":4103,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":4108,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":3323,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":3328,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":4134,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["miscellaneous",{"_index":2834,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3414,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":3630,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["missing",{"_index":1820,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["missingattributeadditionalfieldsstub",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mixedvalue",{"_index":354,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mobile",{"_index":3035,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mock",{"_index":3559,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":3733,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":942,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendsService.html":{}}}],["model",{"_index":188,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":3917,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":3629,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":1033,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":1040,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":3953,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modification",{"_index":3991,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":3799,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modifyresult",{"_index":223,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":2996,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":166,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":3641,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":172,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":173,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":601,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":101,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modèle",{"_index":3579,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":3561,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["moins",{"_index":4074,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["monemail@mondomaine.com",{"_index":779,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongo",{"_index":3792,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":2506,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":2507,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":232,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb.countoptions",{"_index":242,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1448,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":2504,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":3623,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":3621,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":3620,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":3625,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":2511,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":2520,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":134,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":2203,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosebasequeryoptions",{"_index":224,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["mongoosemodule",{"_index":615,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":620,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosemoduleoptions",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":714,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongoosevalidationfilter",{"_index":725,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongooseValidationFilter.html":{}}}],["morethan",{"_index":4111,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["motif",{"_index":3341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mots",{"_index":2971,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":3203,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":3266,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["much",{"_index":1030,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":2893,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":1039,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mynewpassword",{"_index":1315,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":1317,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mécanismes",{"_index":3416,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":3650,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":3529,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["même",{"_index":4071,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n",{"_index":3016,"title":{},"body":{"index.html":{}}}],["n'avez",{"_index":4062,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":2144,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":3531,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["name_queue=backend",{"_index":3026,"title":{},"body":{"index.html":{}}}],["namequeue",{"_index":1426,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["navigation",{"_index":3972,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":3970,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":1215,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["negative",{"_index":3350,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":382,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["nested",{"_index":3271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested.flatmap((item",{"_index":3281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested.length",{"_index":3278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested[0",{"_index":3280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs",{"_index":100,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/bullmq",{"_index":710,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":103,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/IdentitiesModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/ManagementModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":153,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":872,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":132,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":813,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newidentitydata",{"_index":3610,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newpassword",{"_index":1313,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["next",{"_index":394,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"miscellaneous/variables.html":{}}}],["niveau",{"_index":3362,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":3382,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":3584,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["node:crypto",{"_index":643,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/KeyringsService.html":{}}}],["nodejs",{"_index":2966,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["noinspection",{"_index":253,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/DtoValidationPipe.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":3025,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":3319,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":4083,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":4041,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":3744,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":3358,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["normes",{"_index":3455,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosortedges",{"_index":2170,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["notamment",{"_index":3390,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notez",{"_index":4023,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":3667,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":2557,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{}}}],["notfoundexception",{"_index":222,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["notfoundoptions",{"_index":3230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nounknown",{"_index":3345,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":3576,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouveau",{"_index":3825,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":3426,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":3877,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":3525,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["now",{"_index":1226,"title":{},"body":{"injectables/BackendsService.html":{}}}],["null",{"_index":162,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["numérations",{"_index":3851,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":3866,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":3392,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":4021,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitant",{"_index":3005,"title":{},"body":{"index.html":{}}}],["nécessitent",{"_index":3539,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":4115,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":3741,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["object",{"_index":261,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.entries(filtersquery",{"_index":1849,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["object.entries(nested).flatmap(([k",{"_index":3274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(agentstate",{"_index":3206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(attributes",{"_index":2135,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":2551,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(formtypes",{"_index":3250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(jsonschema.properties",{"_index":2010,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(jsonschema.properties).map((key",{"_index":2004,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(validations).join",{"_index":1546,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values",{"_index":283,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["object.values(error.constraints)[0",{"_index":1560,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":1566,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(result",{"_index":1071,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["objectclass",{"_index":4038,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":343,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":2142,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":2154,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":2569,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":497,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["objectif",{"_index":3367,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objectify",{"_index":3286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectsrc",{"_index":1437,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":3740,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":3828,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligatoires",{"_index":3995,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":847,"title":{},"body":{"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{}}}],["observable((observer",{"_index":1135,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observer.next",{"_index":1107,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observers",{"_index":3921,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ochestrator",{"_index":2890,"title":{},"body":{"index.html":{}}}],["official",{"_index":2874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["offline",{"_index":961,"title":{},"body":{"injectables/AuthService.html":{}}}],["offre",{"_index":2988,"title":{},"body":{"index.html":{}}}],["ok",{"_index":2860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["old",{"_index":1318,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/PasswdController.html":{}}}],["oldpassword",{"_index":1314,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldpasswords",{"_index":2665,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":929,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["omit(options",{"_index":996,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(user.toobject",{"_index":2439,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":2883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onglet",{"_index":3983,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":3966,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{}}}],["open",{"_index":2895,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":2912,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operator",{"_index":3928,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":3445,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":2209,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":2213,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionals",{"_index":1274,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionals['processedat",{"_index":1276,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionals['state",{"_index":1277,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionlabel",{"_index":3916,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":2956,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":192,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options).exec",{"_index":241,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["options.createdby",{"_index":2237,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.interface",{"_index":1195,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options.interface.ts",{"_index":1589,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["options.limit",{"_index":2655,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":2240,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":2242,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.synctimeout",{"_index":1291,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options.target",{"_index":2214,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":2218,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":2215,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options?.async",{"_index":1275,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.comment",{"_index":1285,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.job",{"_index":1273,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.scopes",{"_index":988,"title":{},"body":{"injectables/AuthService.html":{}}}],["options?.task",{"_index":1286,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.timeoutdiscard",{"_index":1296,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options['expiresin",{"_index":2372,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["opérations",{"_index":2939,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["orchestrateur",{"_index":2922,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["organiser",{"_index":3976,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["originstate",{"_index":1879,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["otherwise",{"_index":2117,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["otpkey",{"_index":2666,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1838,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":613,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["outil",{"_index":3001,"title":{},"body":{"index.html":{}}}],["output",{"_index":1061,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["overview",{"_index":3111,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1032,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":1024,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":1031,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":1036,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["package",{"_index":757,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packagejson",{"_index":760,"title":{},"body":{"injectables/AppService.html":{}}}],["page",{"_index":3364,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated",{"_index":3151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginated.decorator",{"_index":509,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["paginated.decorator.ts",{"_index":3149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginatedfilterdto",{"_index":2571,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"classes/PaginatedFilterDto.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{}}}],["pair",{"_index":1898,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["panneaux",{"_index":3980,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["par",{"_index":3019,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["param",{"_index":485,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('_id",{"_index":535,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('schema",{"_index":1953,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["params",{"_index":1281,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["paramètre",{"_index":3734,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":3521,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parentid",{"_index":528,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":1977,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(filepath",{"_index":2000,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(path",{"_index":2160,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseemail",{"_index":362,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseemail(val",{"_index":365,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parseint(agentstate[k",{"_index":3210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(formtypes[k",{"_index":3252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseintpipe",{"_index":1097,"title":{},"body":{"controllers/BackendsController.html":{}}}],["parsename",{"_index":2408,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["parsename(val",{"_index":2364,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["parsepassword",{"_index":363,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parsepassword(val",{"_index":370,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parser",{"_index":2652,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["parseusername",{"_index":364,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseusername(val",{"_index":373,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["partial",{"_index":684,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/typealiases.html":{}}}],["partialprojectiontype",{"_index":510,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":571,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":587,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(formdto",{"_index":1668,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":1920,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(identitiesupdatedto",{"_index":1921,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":3087,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(jobscreatedto",{"_index":2301,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["particulier",{"_index":3697,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":3599,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partir",{"_index":2992,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts/metadata.part.dto",{"_index":2490,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":1666,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":1612,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":583,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":582,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["pas",{"_index":2145,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["passe",{"_index":2972,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passer",{"_index":3984,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":1421,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":868,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":876,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2329,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2321,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2337,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":2582,"title":{},"body":{"controllers/PasswdController.html":{}}}],["passwd.controller",{"_index":2636,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":2606,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwd/passwd.module",{"_index":2485,"title":{},"body":{"modules/ManagementModule.html":{}}}],["passwdcontroller",{"_index":2580,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwddto",{"_index":1352,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["passwddto.uid",{"_index":1350,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["passwdmodule",{"_index":2480,"title":{"modules/PasswdModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":1337,"title":{"injectables/PasswdService.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["passwdservice.token_expiration",{"_index":1367,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["password",{"_index":371,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["password'})@apiresponse({status",{"_index":2587,"title":{},"body":{"controllers/PasswdController.html":{}}}],["password'})@isstring",{"_index":2659,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto",{"_index":1329,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["password.dto.ts",{"_index":1312,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":2662,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1319,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:14",{"_index":2660,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":1316,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1320,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["patch",{"_index":486,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["patch(':_id([0",{"_index":481,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["patch('state",{"_index":1797,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["path",{"_index":933,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"interfaces/MongoosePlugin.html":{}}}],["path.replace('validations",{"_index":2033,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["paths",{"_index":3272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths.join",{"_index":3283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path}/${schema",{"_index":1996,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["pattern",{"_index":3340,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["patternproperties",{"_index":3312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paul.bismuth",{"_index":785,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{}}}],["payload",{"_index":908,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/SyncIdentitiesDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":2238,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.failedreason",{"_index":1236,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.identity",{"_index":973,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity._id",{"_index":976,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity.token",{"_index":977,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jobid",{"_index":1228,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.jti].join",{"_index":980,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.length",{"_index":1262,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.level",{"_index":2245,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":2236,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.returnvalue",{"_index":1241,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.scopes.includes('api",{"_index":974,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.scopes.includes('offline",{"_index":972,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":2754,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":3131,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":2340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":2859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":3444,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":3449,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["perl",{"_index":2979,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["permet",{"_index":2926,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":2984,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":3423,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["persistauthorization",{"_index":1459,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personnalis",{"_index":3941,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":3954,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":3949,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personne",{"_index":4141,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peut",{"_index":4067,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":3745,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["pick",{"_index":765,"title":{},"body":{"injectables/AppService.html":{}}}],["pick(this.package",{"_index":771,"title":{},"body":{"injectables/AppService.html":{}}}],["pickprojectionhelper",{"_index":502,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["ping_target",{"_index":2851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":2566,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["plac",{"_index":4085,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":3415,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":3988,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["plain",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plaintext",{"_index":1377,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["planning",{"_index":3473,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":3461,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plugin",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.default",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.options",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugins",{"_index":1429,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":3786,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":3952,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["port",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"index.html":{}}}],["positionnement",{"_index":3883,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":3349,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":4114,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["possibilit",{"_index":2947,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["possible",{"_index":3385,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":487,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post('change",{"_index":2612,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":2586,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('execute",{"_index":1085,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('generate",{"_index":1932,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall",{"_index":1935,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('gettoken",{"_index":2620,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('gettoken')@apioperation({summary",{"_index":2592,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('local",{"_index":819,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined",{"_index":796,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":800,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":803,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":2629,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":2599,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('sync",{"_index":1095,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall",{"_index":1091,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('upsert",{"_index":1841,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('upsert')@apicreatedecorator(identitiesupsertdto",{"_index":1803,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('verifytoken",{"_index":2624,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('verifytoken')@apioperation({summary",{"_index":2604,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":1620,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":1782,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":2382,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["postaladdress",{"_index":3036,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":2897,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":4087,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["powershell",{"_index":2978,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":3388,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pre",{"_index":3835,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preferredlanguage",{"_index":3037,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":451,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":3777,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":3735,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":3578,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["principal",{"_index":3936,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":3399,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":3374,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":2916,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prise",{"_index":3951,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":3802,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["process.env.node_env",{"_index":939,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['npm_lifecycle_event",{"_index":1201,"title":{},"body":{"injectables/BackendsService.html":{}}}],["process.env['sesame_jwt_secret",{"_index":1454,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_log_level",{"_index":1430,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mongo_uri",{"_index":1447,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_name_queue",{"_index":1431,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_redis_uri",{"_index":1443,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processedat",{"_index":1232,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["processing",{"_index":2880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processor",{"_index":3497,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":3008,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["procédure",{"_index":4072,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["production",{"_index":940,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["profile.commonname",{"_index":3919,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["projection",{"_index":206,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":504,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type",{"_index":512,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":3128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":207,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projet",{"_index":2913,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":3372,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":3816,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":3720,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise",{"_index":196,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise.reject(new",{"_index":3757,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":2166,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":131,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":2698,"title":{},"body":{"classes/StatePart.html":{},"classes/inetOrgPerson.html":{}}}],["prop({type",{"_index":128,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["properties/${key",{"_index":2006,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["property",{"_index":1034,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{}}}],["propertynames",{"_index":4123,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propres",{"_index":3872,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriét",{"_index":3314,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":3356,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protocoles",{"_index":3410,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["provide",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["providers",{"_index":606,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provisional",{"_index":2875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["précis",{"_index":3478,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":3783,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":3554,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":2955,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["public()@sse('sse",{"_index":1088,"title":{},"body":{"controllers/BackendsController.html":{}}}],["puissante",{"_index":2990,"title":{},"body":{"index.html":{}}}],["python",{"_index":2977,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":3934,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":3943,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":3971,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":3979,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":3977,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":4084,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":4042,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["quasar",{"_index":3854,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":2958,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":225,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["query('async",{"_index":1115,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('erroronnotfound",{"_index":1844,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["query('filters",{"_index":1843,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["query('key",{"_index":1132,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('timeoutdiscard",{"_index":1120,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('upsert",{"_index":1845,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["queryoptions",{"_index":202,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["question",{"_index":379,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["question({message",{"_index":366,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questions",{"_index":389,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questionset",{"_index":380,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["queue",{"_index":79,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('application.namequeue",{"_index":115,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queue(this.config.get('namequeue",{"_index":3519,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('application.namequeue",{"_index":118,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":3520,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":3491,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":3538,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["racine",{"_index":3363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radash",{"_index":766,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["radio",{"_index":3894,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["random_bytes_iv",{"_index":1340,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["random_bytes_k",{"_index":1338,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["randombytes",{"_index":642,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/KeyringsService.html":{}}}],["randombytes(32).tostring('hex",{"_index":650,"title":{},"body":{"injectables/AgentsService.html":{}}}],["randombytes(64).tostring('hex",{"_index":2427,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":997,"title":{},"body":{"injectables/AuthService.html":{}}}],["rationalisant",{"_index":3726,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rawbodybuffer(options",{"_index":2653,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":2647,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawresult",{"_index":3678,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["reached",{"_index":1306,"title":{},"body":{"injectables/BackendsService.html":{}}}],["read",{"_index":452,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["read(@param('_id",{"_index":1641,"title":{},"body":{"controllers/FormController.html":{}}}],["read(_id",{"_index":462,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["readdirsync",{"_index":1980,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(dynamicconfigpath).map((file",{"_index":2043,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(hardconfigpath).map((file",{"_index":2041,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfilesync",{"_index":762,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["real",{"_index":830,"title":{},"body":{"controllers/AuthController.html":{}}}],["received",{"_index":2771,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["record",{"_index":345,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["redirection",{"_index":3906,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":1594,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redis",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1444,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redis_host=redis",{"_index":3011,"title":{},"body":{"index.html":{}}}],["redis_password=xx",{"_index":3022,"title":{},"body":{"index.html":{}}}],["redis_port=6379",{"_index":3012,"title":{},"body":{"index.html":{}}}],["redis_user=monuser",{"_index":3021,"title":{},"body":{"index.html":{}}}],["redismodule",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redismodule.forrootasync",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redisoptions",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["reduce((acc",{"_index":2011,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ref",{"_index":167,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1506,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reflector",{"_index":842,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["refresh",{"_index":793,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":831,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":802,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":832,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":1000,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":884,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":885,"title":{},"body":{"injectables/AuthService.html":{}}}],["regenerating",{"_index":956,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":4128,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["register",{"_index":1495,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reject",{"_index":2136,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejects",{"_index":2112,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":3817,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["remarques",{"_index":4143,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["remove",{"_index":453,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remove(@param('_id",{"_index":1644,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(_id",{"_index":469,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":3863,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":2960,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":3942,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":3981,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendre",{"_index":3962,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":3950,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":890,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":904,"title":{},"body":{"injectables/AuthService.html":{}}}],["renvoie",{"_index":3815,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["représent",{"_index":3865,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":3512,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":3823,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":3743,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":3827,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":156,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"miscellaneous/variables.html":{}}}],["req?.user",{"_index":3305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqidentity",{"_index":814,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["request.query['debug",{"_index":1551,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["request.user",{"_index":3298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestcontext",{"_index":155,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":163,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":719,"title":{},"body":{"modules/AppModule.html":{}}}],["requete",{"_index":3997,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["required",{"_index":346,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"classes/Logger.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requis",{"_index":1895,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":4046,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":3994,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requêtes",{"_index":4008,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":461,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["res.json",{"_index":700,"title":{},"body":{"controllers/AppController.html":{}}}],["res.socket.on('close",{"_index":1133,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":1118,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":1865,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["res.status(httpstatus.created).json",{"_index":522,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":531,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["res.status(httpstatus.ok).json(data",{"_index":2619,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":837,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":1840,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["reset",{"_index":612,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["reset(@body",{"_index":2630,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(body",{"_index":2598,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(data",{"_index":1382,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["reseting",{"_index":2594,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetpassworddto",{"_index":1330,"title":{"classes/ResetPasswordDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["resetvalidation",{"_index":3957,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":932,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(process.cwd",{"_index":945,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolveconfigpath",{"_index":2100,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolveconfigpath(key",{"_index":2105,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolvejsonformpath",{"_index":1965,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath(schema",{"_index":1973,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolves",{"_index":2110,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["respecter",{"_index":3454,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":4129,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":3482,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{}}}],["response.decorator",{"_index":496,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["response.decorator.ts",{"_index":3148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":2575,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:12",{"_index":2577,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":2578,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":2579,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":2543,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":674,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["responsemodel",{"_index":3220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responseoptions",{"_index":3222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsible",{"_index":2098,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ressource",{"_index":4014,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":2934,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["result",{"_index":327,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["result.interface",{"_index":2778,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts",{"_index":1058,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts:9",{"_index":2777,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{}}}],["result.push",{"_index":2057,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["result[identity.identity._id",{"_index":1259,"title":{},"body":{"injectables/BackendsService.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["retour",{"_index":3754,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":3632,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":3768,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":3571,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retrieve",{"_index":2177,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["roles",{"_index":546,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["round",{"_index":3352,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1498,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["routermodule.register",{"_index":1504,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["row",{"_index":1687,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["run",{"_index":442,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["run(inputs",{"_index":397,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["runvalidators",{"_index":319,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["rxjs",{"_index":849,"title":{},"body":{"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"dependencies.html":{}}}],["règles",{"_index":2954,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupér",{"_index":3856,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["référence",{"_index":3736,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":3572,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":3789,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":3344,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réponse",{"_index":4000,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":3470,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":3765,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":3821,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":2661,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["save",{"_index":2452,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":198,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["schema",{"_index":352,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":1571,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:12",{"_index":1577,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":1573,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":1576,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":1574,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.endswith('.ui.yml",{"_index":2029,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.endswith('.yml",{"_index":1985,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.org/draft",{"_index":3263,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.replace('.yml",{"_index":2030,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schemafactory",{"_index":353,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":359,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(agents",{"_index":441,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(concernedtopart",{"_index":1409,"title":{},"body":{"classes/ConcernedToPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(datapart",{"_index":1519,"title":{},"body":{"classes/DataPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(form",{"_index":1616,"title":{},"body":{"classes/Form.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":1715,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":1748,"title":{},"body":{"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(identities",{"_index":1773,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(inetorgperson).index",{"_index":3060,"title":{},"body":{"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(jobs",{"_index":2275,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":2355,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(logger).pre",{"_index":2451,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":2496,"title":{},"body":{"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(securitypart",{"_index":2675,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(statepart",{"_index":2709,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tasks",{"_index":2725,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":2045,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":231,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["schematics",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["schema}.ui.yml",{"_index":2060,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schéma",{"_index":2943,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2928,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":1533,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/ValidationRecursive.html":{}}}],["scope.request",{"_index":1534,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":960,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["scopes.push(...options.scopes",{"_index":989,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":3847,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":2937,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1442,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":3728,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":2914,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["search(@res",{"_index":1952,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["search(res",{"_index":473,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["searchall",{"_index":1930,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(@res",{"_index":1950,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(res",{"_index":1939,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchfield",{"_index":3918,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":476,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["searchfilterschema",{"_index":474,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["secondary",{"_index":781,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secret",{"_index":1453,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":2667,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":2332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":3840,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":1738,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":1595,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["security",{"_index":415,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["security.secretkey",{"_index":984,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitypart",{"_index":425,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["securitypartdto",{"_index":560,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["securitypartschema",{"_index":426,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1451,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["seedrequestcontextid",{"_index":3191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sein",{"_index":3589,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":3891,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1436,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["selon",{"_index":3724,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["send",{"_index":1110,"title":{},"body":{"controllers/BackendsController.html":{}}}],["senders",{"_index":3895,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sensibles",{"_index":3419,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sera",{"_index":3474,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["server",{"_index":678,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["serveur",{"_index":2973,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":2911,"title":{},"body":{"index.html":{}}}],["service",{"_index":251,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["servicename",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":3502,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":229,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["ses",{"_index":2997,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":987,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["session",{"_index":287,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["session(@res",{"_index":826,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":805,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ts",{"_index":681,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:2",{"_index":686,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:3",{"_index":688,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:4",{"_index":687,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":685,"title":{},"body":{"classes/ApiSession.html":{}}}],["set",{"_index":314,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{}}}],["setloglevel",{"_index":3193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoninsert",{"_index":311,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["settimeout",{"_index":2205,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["showfriendlyerrorstack",{"_index":1445,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["showunfocuseddescription",{"_index":2024,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["si",{"_index":3014,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["significatif",{"_index":3484,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":3772,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":3776,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":3701,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["simplifie",{"_index":3710,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":3633,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":3782,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":3760,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":3586,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulées",{"_index":3723,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":3562,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":1038,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["skip",{"_index":3237,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["slots",{"_index":3955,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sn",{"_index":3038,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["solution",{"_index":2989,"title":{},"body":{"index.html":{}}}],["sommaire",{"_index":3839,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":2995,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":1836,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":3612,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sorties",{"_index":3394,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["soumission",{"_index":3903,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sources",{"_index":2894,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":3873,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["specifier",{"_index":4077,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["sprints",{"_index":3476,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":3755,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":4064,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":3535,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":3762,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":4104,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":3725,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../action",{"_index":2836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../additionalfields.part.schema.ts",{"_index":3141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../addtionalfields.dto.stub.ts",{"_index":3140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../agent",{"_index":2838,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../agent.type.ts",{"_index":3119,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../agents.schema.ts",{"_index":3142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":3144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auto",{"_index":3126,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../backend",{"_index":2841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../backends.service.ts",{"_index":3160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../concerned",{"_index":3156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.object.ts",{"_index":2843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contextid.ts",{"_index":3192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data.part.schema.ts",{"_index":3157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event",{"_index":3161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../field.part.schema.ts",{"_index":3163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form.schema.ts",{"_index":3164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.dto.stub.ts",{"_index":3167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.schema.ts",{"_index":3120,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../identities.validation.stub.ts",{"_index":3174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.dto.stub.ts",{"_index":3171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.part.ts",{"_index":3172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../internal.logger.ts",{"_index":2847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jobs.schema.ts",{"_index":3121,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../keyrings.schema.ts",{"_index":3122,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":2845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.schema.ts",{"_index":3123,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../metadata.part.schema.ts",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed",{"_index":3124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":3127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../req",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../section.part.schema.ts",{"_index":3165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../security.part.schema.ts",{"_index":3190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../state.enum.ts",{"_index":2848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.part.schema.ts",{"_index":3194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../states.enum.ts",{"_index":2846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.schema.ts",{"_index":3129,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../to",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":2844,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../validation",{"_index":3130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validationexception.ts",{"_index":3159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validschema.ts",{"_index":3197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../wrapper.type.ts",{"_index":3133,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:11",{"_index":86,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:12",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:13",{"_index":85,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:15",{"_index":96,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:17",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:24",{"_index":93,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:9",{"_index":84,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts",{"_index":177,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:118",{"_index":214,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:153",{"_index":199,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:195",{"_index":217,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:23",{"_index":189,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:257",{"_index":219,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:29",{"_index":221,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:318",{"_index":204,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:34",{"_index":208,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:44",{"_index":193,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:50",{"_index":210,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:84",{"_index":212,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":138,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":149,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:43",{"_index":151,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":175,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1509,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":2488,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":2489,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":2497,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":2499,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":2502,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":2501,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":2500,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":2684,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:16",{"_index":2688,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:22",{"_index":2685,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":2689,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:30",{"_index":2691,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:36",{"_index":2692,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:42",{"_index":2686,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":2693,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:50",{"_index":2687,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":120,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":125,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":130,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":2491,"title":{},"body":{"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":2492,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":2495,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":2494,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":2493,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/constants/event",{"_index":3249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/data/api",{"_index":680,"title":{},"body":{"classes/ApiSession.html":{}}}],["src/_common/data/console",{"_index":1482,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["src/_common/decorators/api",{"_index":3212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/decorators/params/req",{"_index":3295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/decorators/public.decorator.ts",{"_index":3291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/dto/error",{"_index":1570,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["src/_common/dto/not",{"_index":2558,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["src/_common/dto/paginated",{"_index":2572,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":2744,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":2767,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":2766,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":2769,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":2749,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":2765,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":659,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/_common/filters/identities",{"_index":2084,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["src/_common/filters/mongoose",{"_index":2533,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["src/_common/functions/to",{"_index":3268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/guards/auth.guard.ts",{"_index":838,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/guards/auth.guard.ts:13",{"_index":846,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/guards/auth.guard.ts:8",{"_index":843,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/middlewares/raw",{"_index":2648,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["src/_common/pipes/dto",{"_index":1520,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["src/_common/pipes/object",{"_index":2563,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":1020,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":2505,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":2517,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":2513,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":2515,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":2512,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":2510,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":2516,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/agent.type.ts",{"_index":3134,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/types/mixed",{"_index":3135,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":3136,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":3137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":3138,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":692,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:15",{"_index":695,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":756,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:10",{"_index":758,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":759,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cli/agents.command.ts",{"_index":361,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:12",{"_index":375,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:20",{"_index":368,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:29",{"_index":372,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:35",{"_index":542,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:45",{"_index":543,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:57",{"_index":444,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/agents.command.ts:63",{"_index":445,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/backends.command.ts",{"_index":1063,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:15",{"_index":1309,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:26",{"_index":1064,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:32",{"_index":1065,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:6",{"_index":1308,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/cli.module.ts",{"_index":1391,"title":{},"body":{"modules/CliModule.html":{}}}],["src/cli/keyrings.command.ts",{"_index":2356,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:15",{"_index":2409,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:21",{"_index":2396,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:32",{"_index":2397,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:63",{"_index":2357,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/cli/keyrings.command.ts:69",{"_index":2358,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/config.ts",{"_index":1418,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["src/contextid.ts",{"_index":3299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":544,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:26",{"_index":567,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:31",{"_index":549,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:36",{"_index":551,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:41",{"_index":556,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:46",{"_index":566,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:52",{"_index":565,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:57",{"_index":548,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:62",{"_index":559,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:67",{"_index":562,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:72",{"_index":554,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:78",{"_index":589,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":2676,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":2681,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":2683,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":2678,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":2679,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":2682,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":2680,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":2710,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":2713,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":2714,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":2716,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":2715,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":2712,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":2857,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts",{"_index":2663,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:10",{"_index":2671,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:15",{"_index":2672,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:20",{"_index":2674,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:25",{"_index":2669,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:31",{"_index":2670,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:36",{"_index":2673,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts",{"_index":2694,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:13",{"_index":2700,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:19",{"_index":2701,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:22",{"_index":2702,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:25",{"_index":2704,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:28",{"_index":2703,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":411,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":433,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":421,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":423,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":424,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":432,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":430,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":418,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":427,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":420,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":450,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:36",{"_index":460,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:46",{"_index":479,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:67",{"_index":468,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:83",{"_index":483,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:98",{"_index":472,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":614,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":624,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/agents/agents.service.ts:12",{"_index":626,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":2320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:11",{"_index":2323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:25",{"_index":2327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":2429,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":2430,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":2433,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":789,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:25",{"_index":797,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:35",{"_index":808,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:47",{"_index":804,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:56",{"_index":801,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":864,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":880,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:118",{"_index":900,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:168",{"_index":902,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:183",{"_index":905,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:195",{"_index":898,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:21",{"_index":917,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:22",{"_index":922,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:24",{"_index":914,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:25",{"_index":921,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:27",{"_index":912,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:28",{"_index":894,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:40",{"_index":903,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:70",{"_index":896,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:84",{"_index":907,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/_dto/execute",{"_index":1579,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["src/core/backends/_dto/sync",{"_index":2717,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["src/core/backends/_enum/action",{"_index":2849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/backend",{"_index":1057,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/execute",{"_index":1588,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["src/core/backends/_interfaces/worker",{"_index":2775,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":1075,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:100",{"_index":1089,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:46",{"_index":1096,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:60",{"_index":1092,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:69",{"_index":1086,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":1153,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/backends/backends.service.ts",{"_index":1158,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/variables.html":{}}}],["src/core/backends/backends.service.ts:128",{"_index":1170,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:168",{"_index":1172,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:206",{"_index":1167,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:25",{"_index":1162,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/core.controller.ts",{"_index":1485,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":1494,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:19",{"_index":1496,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1507,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:4",{"_index":1508,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":1646,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":1657,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":1651,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":1660,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":1649,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":1653,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":1656,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":1655,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":1652,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":1678,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":1697,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":1698,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":1699,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":1695,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":1690,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":1689,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":1692,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":1693,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":1691,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":1696,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":1723,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":1731,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":1735,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":1730,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":1726,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":1733,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":1729,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":2868,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":2741,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":1592,"title":{},"body":{"classes/Form.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":1607,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":1600,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":1599,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":1609,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":1604,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":1606,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":1605,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":1601,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":1703,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":1712,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":1713,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":1709,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":1705,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":1704,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":1707,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":1708,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":1706,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":1710,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":1711,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":1740,"title":{},"body":{"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":1744,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":1746,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":1743,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":1741,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":1745,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":1742,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":1618,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":1622,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":1627,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":1624,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":1630,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":1626,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":1719,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":1749,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/form/form.service.ts:9",{"_index":1750,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/jobs/_dto/_parts/concerned",{"_index":1411,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts",{"_index":2290,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:11",{"_index":2294,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:15",{"_index":2291,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:21",{"_index":2293,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:25",{"_index":2298,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:29",{"_index":2292,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:33",{"_index":2296,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:37",{"_index":2297,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:43",{"_index":2302,"title":{},"body":{"classes/JobsDto.html":{}}}],["src/core/jobs/_enums/state.enum.ts",{"_index":2884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/jobs/_schemas/_parts/concerned",{"_index":1403,"title":{},"body":{"classes/ConcernedToPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts",{"_index":2259,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:15",{"_index":2264,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:21",{"_index":2260,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:27",{"_index":2262,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:30",{"_index":2269,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:33",{"_index":2261,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:36",{"_index":2265,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:39",{"_index":2267,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:42",{"_index":2266,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:45",{"_index":2263,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:48",{"_index":2268,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/jobs.controller.ts",{"_index":2277,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:33",{"_index":2280,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:54",{"_index":2279,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.module.ts",{"_index":2313,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/core/jobs/jobs.service.ts",{"_index":2317,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/jobs/jobs.service.ts:8",{"_index":2318,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":2398,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:14",{"_index":2405,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:18",{"_index":2401,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:21",{"_index":2404,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:27",{"_index":2410,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":2402,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":2345,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":2349,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:19",{"_index":2351,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:25",{"_index":2348,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:28",{"_index":2350,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":2381,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:32",{"_index":2384,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:42",{"_index":2389,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:63",{"_index":2386,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:79",{"_index":2388,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":2418,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":2422,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/keyrings/keyrings.service.ts:10",{"_index":2423,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts",{"_index":1514,"title":{},"body":{"classes/DataPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:12",{"_index":1517,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:18",{"_index":1515,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/logger.schema.ts",{"_index":2440,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:15",{"_index":2445,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:22",{"_index":2444,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:29",{"_index":2443,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:36",{"_index":2442,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":2187,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:107",{"_index":2257,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:123",{"_index":2254,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:139",{"_index":2251,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":2249,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":2255,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":2253,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:62",{"_index":2258,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:78",{"_index":2256,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:91",{"_index":2252,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":2458,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/core/logger/logger.module.ts",{"_index":2464,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":2468,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/logger.service.ts:8",{"_index":2469,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts",{"_index":2721,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts:10",{"_index":2722,"title":{},"body":{"classes/Tasks.html":{}}}],["src/core/tasks/tasks.controller.ts",{"_index":2727,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/core/tasks/tasks.module.ts",{"_index":2733,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/core/tasks/tasks.service.ts",{"_index":2737,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/tasks/tasks.service.ts:8",{"_index":2738,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/main.ts",{"_index":3294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":2780,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:10",{"_index":2783,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:16",{"_index":2782,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:22",{"_index":2784,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":3062,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:11",{"_index":3063,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:15",{"_index":3069,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:19",{"_index":3070,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:24",{"_index":3065,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:29",{"_index":3080,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:34",{"_index":3068,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:39",{"_index":3071,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:44",{"_index":3072,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:49",{"_index":3073,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:53",{"_index":3075,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:59",{"_index":3077,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:64",{"_index":3078,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:69",{"_index":3079,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:7",{"_index":3083,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:74",{"_index":3081,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:79",{"_index":3082,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:84",{"_index":3084,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:89",{"_index":3085,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":1884,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:14",{"_index":1910,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:20",{"_index":1908,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:25",{"_index":1906,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:44",{"_index":1903,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:52",{"_index":2071,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":2872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":2877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":341,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:11",{"_index":347,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:14",{"_index":351,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:8",{"_index":350,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":3027,"title":{},"body":{"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:10",{"_index":3044,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:13",{"_index":3047,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:16",{"_index":3048,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:19",{"_index":3049,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:22",{"_index":3050,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:25",{"_index":3051,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:28",{"_index":3052,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:31",{"_index":3053,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:34",{"_index":3054,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:37",{"_index":3055,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:40",{"_index":3056,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:43",{"_index":3057,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:46",{"_index":3045,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:49",{"_index":3046,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:52",{"_index":3043,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:55",{"_index":3058,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:58",{"_index":3059,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:7",{"_index":3042,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":1754,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:14",{"_index":1764,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:17",{"_index":1763,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":1761,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":1758,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:26",{"_index":1759,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_stubs/_parts/addtionalfields.dto.stub.ts",{"_index":3199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/_parts/inetorgperson.dto.stub.ts",{"_index":3256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/identities.dto.stub.ts",{"_index":3253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/identities.controller.ts",{"_index":1775,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:140",{"_index":1789,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:171",{"_index":1786,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:193",{"_index":1780,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:208",{"_index":1792,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:223",{"_index":1795,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:243",{"_index":1798,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:262",{"_index":1788,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:54",{"_index":1784,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:88",{"_index":1804,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":2064,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/jsonforms/_config",{"_index":2053,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/_config/${schema",{"_index":1988,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts",{"_index":1927,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:13",{"_index":1936,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:22",{"_index":1933,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:31",{"_index":1940,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:40",{"_index":1938,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.module.ts",{"_index":1959,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts",{"_index":1961,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:10",{"_index":1976,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:11",{"_index":1966,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:115",{"_index":1967,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:132",{"_index":1969,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:18",{"_index":1974,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:31",{"_index":1971,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:96",{"_index":1972,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/validations/_config",{"_index":2038,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/${key}.yml",{"_index":2130,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/validschema.ts",{"_index":3306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1461,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1463,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1468,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1465,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:22",{"_index":1477,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:25",{"_index":1476,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:28",{"_index":1475,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:34",{"_index":1481,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1480,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1464,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":2867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/_stubs/identities.validation.stub.ts",{"_index":3257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":2073,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:17",{"_index":2079,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:48",{"_index":2077,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:57",{"_index":2076,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":2095,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":2097,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:114",{"_index":2115,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:130",{"_index":2103,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:159",{"_index":2104,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:19",{"_index":2118,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:20",{"_index":2119,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:21",{"_index":2102,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:29",{"_index":2106,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:46",{"_index":2108,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":2472,"title":{},"body":{"controllers/ManagementController.html":{}}}],["src/management/management.module.ts",{"_index":2481,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:14",{"_index":2482,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":2486,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/management.service.ts:4",{"_index":2487,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/dto/ask",{"_index":774,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["src/management/passwd/dto/change",{"_index":1311,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/management/passwd/dto/reset",{"_index":2658,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["src/management/passwd/dto/verify",{"_index":2770,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":2581,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:21",{"_index":2590,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:33",{"_index":2596,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:44",{"_index":2605,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:55",{"_index":2601,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":2635,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":1322,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["src/management/passwd/passwd.service.ts:27",{"_index":2645,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:28",{"_index":2644,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:30",{"_index":2646,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:32",{"_index":2639,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:42",{"_index":2641,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:50",{"_index":2640,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:76",{"_index":2642,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:91",{"_index":2643,"title":{},"body":{"injectables/PasswdService.html":{}}}],["sse",{"_index":1077,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse('sse",{"_index":1130,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(@res",{"_index":1131,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(res",{"_index":1087,"title":{},"body":{"controllers/BackendsController.html":{}}}],["ssetoken",{"_index":828,"title":{},"body":{"controllers/AuthController.html":{}}}],["stabilit",{"_index":3442,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["standards",{"_index":3395,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["start",{"_index":1043,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":1025,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["started",{"_index":2888,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":416,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/BackendsService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":2707,"title":{},"body":{"classes/StatePart.html":{}}}],["state.enum.ts",{"_index":2839,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statepart",{"_index":428,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["statepartdto",{"_index":563,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["statepartschema",{"_index":429,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":515,"title":{},"body":{"controllers/AgentsController.html":{},"interfaces/CipherData.html":{},"modules/CoreModule.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["status",{"_index":672,"title":{},"body":{"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["statuscode",{"_index":523,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["statut",{"_index":4066,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":3850,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":2870,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":3602,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":3384,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":2945,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":2970,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":2509,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["strategy",{"_index":2331,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["streamkits/nestjs_module_scrud",{"_index":505,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"dependencies.html":{}}}],["strict",{"_index":111,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/IdentitiesValidationService.html":{}}}],["strictement",{"_index":3336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["stringify",{"_index":1978,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["stringify(jsonform",{"_index":2037,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":471,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":1625,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(identitiesdto",{"_index":1787,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":2387,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":467,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":1623,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":1785,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apireadresponsedecorator(jobsdto",{"_index":2278,"title":{},"body":{"controllers/JobsController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":2385,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":482,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":1629,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":1791,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["structure",{"_index":2028,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":3964,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":3605,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":3555,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["style",{"_index":3239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stylesrc",{"_index":1439,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subcommand",{"_index":381,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subcommands",{"_index":408,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subject",{"_index":994,"title":{},"body":{"injectables/AuthService.html":{}}}],["submit",{"_index":3958,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":1596,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":1597,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["subscriber",{"_index":1098,"title":{},"body":{"controllers/BackendsController.html":{}}}],["succeeded",{"_index":2167,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":2111,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["success",{"_index":982,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":402,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"controllers/PasswdController.html":{}}}],["succès",{"_index":1831,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suite",{"_index":3781,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":3440,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":3607,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":3890,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":4002,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["summary",{"_index":2613,"title":{},"body":{"controllers/PasswdController.html":{}}}],["supann",{"_index":1915,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":4044,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":1916,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["supannbirthdate",{"_index":4053,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":3204,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":4096,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":3202,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":3200,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":1918,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["super",{"_index":393,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":3545,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":105,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{}}}],["super(message",{"_index":2759,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":2764,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.canactivate(context",{"_index":855,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super.create",{"_index":2428,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["super.create(data",{"_index":651,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.debug(...[message",{"_index":2227,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error('failed",{"_index":2204,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":2219,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal('failed",{"_index":2246,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":2233,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":2197,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":2225,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.onmoduleinit",{"_index":1200,"title":{},"body":{"injectables/BackendsService.html":{}}}],["super.transform(value",{"_index":1535,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["super.update",{"_index":657,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.verbose(...[message",{"_index":2230,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":2222,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super[payload.level](payload.message",{"_index":2247,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplémentaires",{"_index":3357,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":3108,"title":{},"body":{"modules.html":{}}}],["supportant",{"_index":3712,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supprime",{"_index":3617,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":3931,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["supérieure",{"_index":3337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sur",{"_index":3698,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suspendedat",{"_index":2347,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":2696,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":2697,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["svg",{"_index":3109,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1422,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["swagger/json",{"_index":1457,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":1424,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1458,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["symbol('autoincrementidskip",{"_index":3248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":1264,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncall",{"_index":1068,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["syncallidentities",{"_index":1078,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["syncallidentities(@res",{"_index":1119,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(options",{"_index":1169,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncallidentities(res",{"_index":1090,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities.map((identity",{"_index":1247,"title":{},"body":{"injectables/BackendsService.html":{}}}],["synced",{"_index":2878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronisation",{"_index":2891,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchroniser",{"_index":3401,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["syncidentities",{"_index":1079,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["syncidentities(payload",{"_index":1171,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncidentities(res",{"_index":1093,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentitiesdto",{"_index":1094,"title":{"classes/SyncIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/SyncIdentitiesDto.html":{}}}],["syncing",{"_index":1222,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncronisation",{"_index":4060,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["synctimeout",{"_index":1084,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["system",{"_index":2211,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["système",{"_index":2975,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":3412,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":3409,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":3405,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":3601,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":3751,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":2889,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":194,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["t>>(filter",{"_index":240,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["table",{"_index":3488,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":1891,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":3750,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tabs",{"_index":2871,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tag",{"_index":1336,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tant",{"_index":4097,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":3867,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["target",{"_index":2188,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["targetstate",{"_index":1880,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["task",{"_index":1250,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["task._id",{"_index":1258,"title":{},"body":{"injectables/BackendsService.html":{}}}],["tasks",{"_index":1196,"title":{"classes/Tasks.html":{}},"body":{"injectables/BackendsService.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":2735,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.name",{"_index":2736,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":2728,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/_schemas/tasks.schema",{"_index":1197,"title":{},"body":{"injectables/BackendsService.html":{}}}],["tasks/tasks.module",{"_index":1157,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["tasks/tasks.service",{"_index":1191,"title":{},"body":{"injectables/BackendsService.html":{}}}],["taskscontroller",{"_index":2726,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasksdocument",{"_index":2723,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["tasksmodule",{"_index":1152,"title":{"modules/TasksModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksschema",{"_index":2724,"title":{},"body":{"classes/Tasks.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["tasksservice",{"_index":1161,"title":{"injectables/TasksService.html":{}},"body":{"injectables/BackendsService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["tat",{"_index":4047,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":3886,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":4086,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":2576,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["technique",{"_index":3464,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":3404,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technologies",{"_index":2963,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tel",{"_index":3373,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephonenumber",{"_index":3039,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":3965,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tels",{"_index":2957,"title":{},"body":{"index.html":{}}}],["template",{"_index":4089,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["temporaire",{"_index":3614,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tendez",{"_index":3536,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":3543,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["test",{"_index":3259,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test.createtestingmodule",{"_index":3637,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testclass",{"_index":3258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teste",{"_index":3670,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":3575,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":3636,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":3436,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["texte",{"_index":3901,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["themes",{"_index":2825,"title":{},"body":{"dependencies.html":{}}}],["thirdpartyauth",{"_index":417,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._model",{"_index":233,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter",{"_index":244,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter).exec",{"_index":265,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find",{"_index":239,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find>(filter",{"_index":266,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyid>(_id",{"_index":276,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyidanddelete",{"_index":336,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findone>(filter",{"_index":280,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._options.mongoose.options",{"_index":2201,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._queue",{"_index":104,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this._queue.getcompleted",{"_index":1210,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this._req",{"_index":159,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.count(searchfilterschema",{"_index":1866,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.create(body",{"_index":521,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":541,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findall",{"_index":1951,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findandcount",{"_index":530,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":536,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findone(schema",{"_index":1954,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.generate",{"_index":1948,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.generateall",{"_index":1945,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.update(_id",{"_index":539,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["this._service.updatestate(_id",{"_index":1877,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.updatestatemany(body",{"_index":1882,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.upsert(filters",{"_index":1856,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.validate(body",{"_index":2083,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this.access_token_expires_in",{"_index":993,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.create(agent",{"_index":400,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.agentsservice.findone",{"_index":965,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.model.countdocuments",{"_index":983,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.compile(validschema",{"_index":1984,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":2163,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":701,"title":{},"body":{"controllers/AppController.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":2436,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":2342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.createtokens",{"_index":2376,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.backends.executejob",{"_index":1385,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.backends.executejob(actiontype.identity_password_change",{"_index":1351,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.backendsservice.executejob",{"_index":1126,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('added",{"_index":1136,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('completed",{"_index":1139,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('failed",{"_index":1142,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.syncallidentities",{"_index":1070,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{}}}],["this.backendsservice.syncidentities(body.payload",{"_index":1117,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.commonlogdb",{"_index":2216,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.concerned",{"_index":2455,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.concerned.tolocalelowercase",{"_index":2456,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.config",{"_index":109,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.connection",{"_index":2202,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":2244,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.constructor.name",{"_index":108,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":174,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.context",{"_index":2453,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.context.tolocalelowercase",{"_index":2454,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.createtokens(new",{"_index":957,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":1011,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decrypttoken(data.token",{"_index":1383,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.dev_token_path",{"_index":946,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.eventemitter",{"_index":246,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.eventemitter?.emitasync",{"_index":248,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.executejob",{"_index":1256,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.executejob(identity.action",{"_index":1270,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.generate(file",{"_index":2051,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.getstatus",{"_index":2763,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":2547,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.identities.findone",{"_index":1348,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.identitiesservice.find",{"_index":1245,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.findbyid(concernedto",{"_index":1278,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.findbyid(key",{"_index":1265,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(completedjob?.concernedto?.id",{"_index":1243,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(concernedto",{"_index":1288,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(failedjob?.concernedto?.id",{"_index":1237,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(issyncedjob?.concernedto?.id",{"_index":1219,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.initialize",{"_index":2206,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.inquirer.ask('agent",{"_index":398,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.inquirer.ask('keyrings",{"_index":2367,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.jobsservice.create",{"_index":1280,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jobsservice.model.findoneandupdate",{"_index":1212,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jobsservice.update(jobstore._id",{"_index":1293,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jwtservice.decode(jwt",{"_index":1012,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":992,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keyringsservice.create(keyring",{"_index":2368,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.keyringsservice.findone",{"_index":975,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug('queue",{"_index":1203,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.debug(['count",{"_index":243,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['create",{"_index":288,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['delete",{"_index":333,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['find",{"_index":236,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findall",{"_index":2176,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findandcount",{"_index":245,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findbyid",{"_index":274,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findone",{"_index":278,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['update",{"_index":306,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['upsert",{"_index":324,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(`atempt",{"_index":969,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(`job",{"_index":1225,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.debug(`syncing",{"_index":1254,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.error(`error",{"_index":1260,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.error(`token",{"_index":954,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log('gettoken",{"_index":2622,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('verify",{"_index":2626,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`call",{"_index":2617,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`job",{"_index":1244,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.log(`new",{"_index":964,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":950,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('dev",{"_index":941,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('enable",{"_index":1208,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.warn('invalid",{"_index":986,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`job",{"_index":1221,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.message",{"_index":2762,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.modulename.tolowercase",{"_index":249,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.moduleref.get(configservice",{"_index":110,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.moduleref.get(getredisconnectiontoken",{"_index":114,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.mongoconnection",{"_index":2524,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":2527,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":2530,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":2526,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":2532,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":2519,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":2523,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":2528,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":2760,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":767,"title":{},"body":{"injectables/AppService.html":{}}}],["this.passwdservice.asktoken(asktoken",{"_index":2623,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.change(body",{"_index":2616,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.decrypttoken(body.token",{"_index":2628,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(body",{"_index":2631,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.queue",{"_index":3518,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add",{"_index":1272,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queue.add('exemple",{"_index":3547,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents",{"_index":117,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('active",{"_index":1229,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents.on('completed",{"_index":1239,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents.on('failed",{"_index":1233,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('waiting",{"_index":1224,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.redis",{"_index":113,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":1015,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":1017,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire",{"_index":1002,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire(ciphertext",{"_index":1366,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":979,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get(token",{"_index":1369,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set",{"_index":998,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.reflector.getallandoverride(meta_unprotected",{"_index":852,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.refresh_token_expires_in",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":999,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":168,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":171,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request?.user?.username",{"_index":294,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.resolveconfigpath(key",{"_index":2155,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolveconfigpath(schema",{"_index":2185,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolvejsonformpath(schema",{"_index":2058,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":836,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":823,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":827,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":833,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.servicename.tolowercase",{"_index":250,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":2196,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.tasksservice.create",{"_index":1251,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.validateattribute(key",{"_index":2164,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":1983,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":2161,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":1541,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":1568,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":2761,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this[key",{"_index":689,"title":{},"body":{"classes/ApiSession.html":{}}}],["throw",{"_index":106,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ticket",{"_index":3843,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":2740,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["ticketformfield",{"_index":2742,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":2743,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":3859,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":2909,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":2974,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["time",{"_index":1299,"title":{},"body":{"injectables/BackendsService.html":{}}}],["timeout",{"_index":1303,"title":{},"body":{"injectables/BackendsService.html":{}}}],["timeoutdiscard",{"_index":1123,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["timeoutdiscardquery",{"_index":1083,"title":{},"body":{"controllers/BackendsController.html":{}}}],["tiquette",{"_index":3880,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":1598,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":3860,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":3848,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":3940,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tmodel",{"_index":3213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to.part.dto",{"_index":2299,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["to.part.dto.ts",{"_index":1412,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:13",{"_index":1415,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:18",{"_index":1416,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:9",{"_index":1413,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.parts.schema",{"_index":2272,"title":{},"body":{"classes/Jobs.html":{}}}],["to.parts.schema.ts",{"_index":1404,"title":{},"body":{"classes/ConcernedToPart.html":{},"miscellaneous/variables.html":{}}}],["to.parts.schema.ts:10",{"_index":1406,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:13",{"_index":1407,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:7",{"_index":1405,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to_complete",{"_index":1818,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":2882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":1268,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":1822,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":164,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{}}}],["token",{"_index":682,"title":{},"body":{"classes/ApiSession.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{},"classes/VerifyTokenDto.html":{}}}],["token'})@apiresponse({status",{"_index":2595,"title":{},"body":{"controllers/PasswdController.html":{}}}],["token.dto",{"_index":1327,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token.dto.ts",{"_index":775,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:10",{"_index":2773,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:11",{"_index":783,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.dto.ts:7",{"_index":786,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.json",{"_index":916,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_algorithm",{"_index":1342,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token_expiration",{"_index":1346,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token_path_separator",{"_index":886,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendata",{"_index":1333,"title":{"interfaces/TokenData.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tokendata.uid",{"_index":1384,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tokens",{"_index":822,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["toplainandcrush",{"_index":3195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":529,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{}}}],["totale",{"_index":2930,"title":{},"body":{"index.html":{}}}],["toujours",{"_index":4099,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tout",{"_index":3447,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":3406,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["track",{"_index":1047,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":1035,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":1026,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":1027,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["traitement",{"_index":3503,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":3513,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transform",{"_index":1523,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(value",{"_index":1527,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformer",{"_index":581,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["transformkeys",{"_index":3920,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformoptions",{"_index":1537,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transport",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["travers",{"_index":3460,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":3309,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tree",{"_index":527,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["trim",{"_index":1547,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":4117,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":3590,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["true",{"_index":318,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"modules/AppModule.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true|on|yes|1/i.test(asyncquery",{"_index":1116,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(erroronnotfound",{"_index":1857,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["true|on|yes|1/i.test(timeoutdiscardquery",{"_index":1124,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(upsert",{"_index":1858,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["true})@apiproperty({type",{"_index":558,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":2400,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":2677,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":1732,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1479,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":1728,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":3351,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":399,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["ts",{"_index":2544,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["tvalue",{"_index":3269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typage",{"_index":2953,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.enum",{"_index":1193,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["type.enum.ts",{"_index":2837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.vue",{"_index":3849,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":3117,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":260,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":133,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":124,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid(`${filter",{"_index":1852,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["types.objectid(body.id",{"_index":1128,"title":{},"body":{"controllers/BackendsController.html":{}}}],["types.objectid(value",{"_index":2570,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":2567,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["têtes",{"_index":3978,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":2668,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ui",{"_index":2059,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ui.yml",{"_index":2031,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["uid",{"_index":777,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["un",{"_index":1890,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unauthorizedexception",{"_index":924,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ConcernedToPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@apiresponse({status",{"_index":2600,"title":{},"body":{"controllers/PasswdController.html":{}}}],["une",{"_index":2146,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uniforme",{"_index":3748,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":422,"title":{},"body":{"classes/Agents.html":{},"classes/Keyrings.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":3647,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniques",{"_index":3746,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unknown",{"_index":667,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unprocessableentityexception",{"_index":1179,"title":{},"body":{"injectables/BackendsService.html":{}}}],["unprotected",{"_index":3292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsafe",{"_index":2287,"title":{},"body":{"controllers/JobsController.html":{}}}],["until",{"_index":1305,"title":{},"body":{"injectables/BackendsService.html":{}}}],["unused",{"_index":395,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"controllers/PasswdController.html":{}}}],["update",{"_index":186,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(_id",{"_index":215,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["update.$set.password",{"_index":655,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.$set?.password",{"_index":654,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.decorator",{"_index":492,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["update.decorator.ts",{"_index":3152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update.password",{"_index":652,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update?.$set",{"_index":315,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{}}}],["update?.$setoninsert",{"_index":329,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["updateassertions",{"_index":3674,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":3679,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updated",{"_index":309,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":3676,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":3611,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":3628,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions(service",{"_index":3680,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":3677,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":216,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["updatestate",{"_index":1776,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestate(_id",{"_index":1793,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestatemany",{"_index":1777,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestatemany(res",{"_index":1796,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["uppercase",{"_index":3347,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":187,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["upsert(filter",{"_index":218,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["upsert(res",{"_index":1799,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["uri",{"_index":742,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":4133,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["use",{"_index":1029,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["useclass",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["used",{"_index":1052,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":622,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/TasksModule.html":{}}}],["usefilters(new",{"_index":1813,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["useguards",{"_index":809,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('jwt",{"_index":825,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":820,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":157,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"miscellaneous/variables.html":{}}}],["user.state.current",{"_index":2437,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usercertificate",{"_index":3040,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["username",{"_index":374,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["userpassword",{"_index":3041,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usevalue",{"_index":3639,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utf",{"_index":769,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["utf8",{"_index":1362,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["utilis",{"_index":3626,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":3646,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":3393,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":2982,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":3432,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":2961,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":2940,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":3434,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":3514,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":2964,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":3585,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":3692,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":3551,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["v",{"_index":3275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["va",{"_index":3737,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["val",{"_index":369,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["valeur",{"_index":3333,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":4118,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":3714,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":1854,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validadditionalfieldsstub",{"_index":3196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":2075,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":2324,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":2107,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":2078,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validateattribute",{"_index":2101,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":2113,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validatenested",{"_index":574,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":1688,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":561,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":564,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["validatenested({each",{"_index":1478,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validates",{"_index":2109,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validateschema",{"_index":1963,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":2099,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation",{"_index":1545,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["validation.filter.ts",{"_index":2085,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:34",{"_index":2539,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":2087,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":2537,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":500,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["validation.pipe.ts",{"_index":1521,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:15",{"_index":2768,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:21",{"_index":1529,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:23",{"_index":1526,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:57",{"_index":1532,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":2565,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validationconfigexception",{"_index":1981,"title":{"classes/ValidationConfigException.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationerror",{"_index":1531,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":2086,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:18",{"_index":2752,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":2751,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":2750,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":2748,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationpipe",{"_index":1522,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":1524,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive(error",{"_index":1530,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":344,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":2067,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":1808,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["validations[`${key}.${property",{"_index":2553,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":1558,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":2138,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":2556,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":2143,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":2127,"title":{"classes/ValidationSchemaException.html":{}},"body":{"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validator",{"_index":580,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["valide",{"_index":2149,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":3798,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":2153,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":2125,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["validschemastub",{"_index":3198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validés",{"_index":4029,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":909,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":356,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":3125,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variabilit",{"_index":3386,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variables",{"_index":3009,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vars",{"_index":396,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"controllers/PasswdController.html":{}}}],["verbe",{"_index":4013,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":2229,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":2228,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verifiedcallback",{"_index":2326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verify",{"_index":927,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":891,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":906,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":2584,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verifytoken(@body",{"_index":2625,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verifytoken(body",{"_index":2602,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verifytokendto",{"_index":2603,"title":{"classes/VerifyTokenDto.html":{}},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{}}}],["vers",{"_index":2910,"title":{},"body":{"index.html":{}}}],["version",{"_index":772,"title":{},"body":{"injectables/AppService.html":{},"controllers/IdentitiesController.html":{},"classes/MongoDbTestInstance.html":{},"properties.html":{}}}],["versionkey",{"_index":438,"title":{},"body":{"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Tasks.html":{},"miscellaneous/variables.html":{}}}],["versionn",{"_index":3458,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":3462,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["verticallayout",{"_index":2002,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["veuillez",{"_index":3862,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":2933,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vides",{"_index":4101,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":3380,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vise",{"_index":3368,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["voici",{"_index":3604,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":2235,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"miscellaneous/variables.html":{}}}],["voir",{"_index":3495,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["votre",{"_index":4065,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":3790,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":4090,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":3498,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":3845,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":3961,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":3515,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":3649,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["wait",{"_index":1304,"title":{},"body":{"injectables/BackendsService.html":{}}}],["waiting",{"_index":1227,"title":{},"body":{"injectables/BackendsService.html":{}}}],["wanting",{"_index":1037,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":2221,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":2220,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["whitelistedheaders",{"_index":2651,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["winston",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["workerresultinfointerface",{"_index":2774,"title":{"interfaces/WorkerResultInfoInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["workerresultinterface",{"_index":2779,"title":{"interfaces/WorkerResultInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["wrappertype",{"_index":3132,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefilesync",{"_index":935,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${jsonformpath",{"_index":2036,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["wrong",{"_index":2589,"title":{},"body":{"controllers/PasswdController.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["x",{"_index":4055,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["y",{"_index":2903,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":1979,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["yml",{"_index":1986,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yup",{"_index":2123,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yupschema",{"_index":2168,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema.validate(attribute",{"_index":2171,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["z",{"_index":4131,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["za",{"_index":4130,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zoom",{"_index":611,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    queue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.queue.processor.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queue\n                    \n                \n\n                \n                    \n                        getqueue()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.queue.processor.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Queue, QueueEvents } from 'bullmq';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { getRedisConnectionToken } from '@nestjs-modules/ioredis';\nimport { Redis } from 'ioredis';\nimport { OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport abstract class AbstractQueueProcessor extends AbstractService implements OnModuleInit {\n  protected config: ConfigService;\n\n  private redis: Redis;\n  protected _queue: Queue;\n  public queueEvents: QueueEvents;\n\n  public get queue(): Queue {\n    return this._queue;\n  }\n\n  public constructor(context?: AbstractServiceContext) {\n    super(context);\n    if (!this.moduleRef) throw new Error('ModuleRef is not defined in ' + this.constructor.name);\n  }\n\n  public async onModuleInit() {\n    this.config = this.moduleRef.get(ConfigService, { strict: false });\n    this.redis = this.moduleRef.get(getRedisConnectionToken(), { strict: false });\n\n    this._queue = new Queue(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id?: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata?: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractServiceSchema.html":{"url":"injectables/AbstractServiceSchema.html","title":"injectable - AbstractServiceSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractServiceSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:153\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:318\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:118\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:195\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:257\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.schema.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport {\n  Document,\n  FilterQuery,\n  Model,\n  ModifyResult,\n  MongooseBaseQueryOptions,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { EventEmitterSeparator } from '~/_common/constants/event-emitter.constant';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { ServiceSchemaInterface } from './interfaces/service.schema.interface';\nimport { AbstractSchema } from './schemas/abstract.schema';\nimport mongodb from 'mongodb';\n\n@Injectable()\nexport abstract class AbstractServiceSchema extends AbstractService implements ServiceSchemaInterface {\n  protected abstract _model: Model;\n\n  protected constructor(context?: AbstractServiceContext) {\n    super(context);\n  }\n\n  public get model(): Model {\n    return this._model;\n  }\n\n  /* eslint-disable */\n  public async find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]> {\n    //TODO: add event emitter\n    this.logger.debug(['find', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.find, T, any, T>>(filter, projection, options).exec()\n  }\n\n  public async count(filter?: FilterQuery, options?: (mongodb.CountOptions & MongooseBaseQueryOptions) | null): Promise {\n    //TODO: add event emitter\n    this.logger.debug(['count', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.countDocuments(filter, options).exec()\n  }\n\n  public async findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]> {\n    this.logger.debug(['findAndCount', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindAndCount'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      // noinspection DuplicatedCode\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let count = await this._model.countDocuments(filter).exec()\n    let data = await this._model.find>(filter, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { data, count },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n        if (afterEvent?.count) count += afterEvent.count\n      }\n    }\n    return [data, count]\n  }\n\n  public async findById(\n    _id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindById'].join(EventEmitterSeparator),\n        { _id, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findById>(_id, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindById'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    return data\n  }\n\n  public async findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindOne'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findOne>(filter, projection, options).exec()\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindOne'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    return data\n  }\n\n  public async create(data?: any, options?: SaveOptions): Promise> {\n    const logInfos = Object.values({\n      ...arguments,\n      1: {\n        ...arguments[1],\n        session: typeof arguments[1] === 'object' && 'session' in arguments[1] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['create', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeCreate'].join(EventEmitterSeparator),\n        { data, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) data = { ...data, ...beforeEvent.data }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    const document: Document = new this._model({\n      metadata: {\n        createdBy: this.request?.user?.username || 'anonymous',\n        createdAt: new Date(),\n        lastUpdatedBy: this.request?.user?.username || 'anonymous',\n        lastUpdatedAt: new Date(),\n      },\n      ...data,\n    })\n    let created = document.save(options)\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { created },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.created) created = { ...created, ...afterEvent.created }\n      }\n    }\n    return created\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions,\n  ): Promise>> {\n    const logInfos = Object.values({\n      ...arguments,\n      2: {\n        ...arguments[2],\n        session: typeof arguments[2] === 'object' && 'session' in arguments[2] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['update', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpdate'].join(EventEmitterSeparator),\n        { _id, update, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) update = { ...update, ...beforeEvent.update }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let updated = await this._model\n      .findByIdAndUpdate>(\n        { _id },\n        {\n          ...update,\n          $setOnInsert: {\n            'metadata.createdBy': this.request?.user?.username || 'anonymous',\n            'metadata.createdAt': new Date(),\n          },\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec()\n    if (!updated) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { updated },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.updated) updated = { ...updated, ...afterEvent.updated }\n      }\n    }\n    return updated\n  }\n\n  public async upsert(\n    filter: FilterQuery,\n    update: UpdateQuery,\n    options?: QueryOptions\n  ): Promise>> {\n    this.logger.debug(['upsert', JSON.stringify(Object.values(arguments))].join(' '));\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpsert'].join(EventEmitterSeparator),\n        { filter, update, options },\n      );\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop;\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter };\n        if (beforeEvent?.update) update = { ...update, ...beforeEvent.update };\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options };\n      }\n    }\n    let result = await this._model\n      .findOneAndUpdate>(\n        filter,\n        {\n          ...update,\n          $setOnInsert: {\n            ...(update?.$setOnInsert || {}),\n            'metadata.createdBy': this.request?.user?.username || 'anonymous',\n            'metadata.createdAt': new Date(),\n          },\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          upsert: true,\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec();\n\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterUpsert'].join(EventEmitterSeparator),\n        { result },\n      );\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.result) result = { ...result, ...afterEvent.result };\n      }\n    }\n\n    if (!result) {\n      throw new NotFoundException();\n    }\n\n    return result;\n  }\n\n\n  public async delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise> {\n    this.logger.debug(['delete', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeDelete'].join(EventEmitterSeparator),\n        { _id, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let deleted = await this._model.findByIdAndDelete>({ _id }, options).exec()\n    if (!deleted) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { deleted },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.deleted) deleted = { ...deleted, ...afterEvent.deleted }\n      }\n    }\n    return deleted\n  }\n\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart extends Document {\n  @Prop({ type: Array, of: String, required: true, default: ['inetOrgPerson'] })\n  objectClasses: string[];\n\n  @Prop({ type: Object, required: true })\n  attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateQuestions.html":{"url":"classes/AgentCreateQuestions.html","title":"class - AgentCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseEmail\n                            \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseEmail(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Email ?', name: 'email'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Password ?', name: 'password', type: 'password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseUsername(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Username ?', name: 'username'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/_parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/_parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCommand.html":{"url":"classes/AgentsCommand.html","title":"class - AgentsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { AgentsService } from './agents.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\n\n@ApiTags('core')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    email: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateCommand.html":{"url":"classes/AgentsCreateCommand.html","title":"class - AgentsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, agentsService: AgentsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n// import { AgentsCommand } from '~/cli/agents.command';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService /* ...AgentsCommand.registerWithSubCommands() */],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: AgentsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:17\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:27\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AgentsCreateDto } from './_dto/agents.dto';\nimport { hash } from 'argon2';\nimport { randomBytes } from 'node:crypto';\nimport { SecurityPartDTO } from './_dto/parts/security.part.dto';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: AgentsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    data.password = await hash(data.password);\n    data.security = (data.security || {}) as SecurityPartDTO;\n    data.security.secretKey = randomBytes(32).toString('hex');\n    return await super.create(data, options);\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery & any,\n    options?: QueryOptions,\n  ): Promise>> {\n    if (update.password) {\n      update.password = await hash(update.password);\n    }\n    if (update.$set?.password) {\n      update.$set.password = await hash(update.$set.password);\n    }\n    return await super.update(\n      _id,\n      {\n        ...update,\n        $set: {\n          ...(update?.$set || {}),\n        },\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSession.html":{"url":"classes/ApiSession.html","title":"class - ApiSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/api-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/api-session.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiSession {\n  public readonly _id: string;\n  public readonly username: string;\n  public readonly displayName: string;\n  public readonly token: string;\n\n  public constructor(data: Partial) {\n    for (const key in data) {\n      this[key] = data[key];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\n\n@Public()\n@Controller()\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AuthGuard } from './_common/guards/auth.guard';\nimport { MongooseValidationFilter } from './_common/filters/mongoose-validation.filter';\nimport { DtoValidationPipe } from './_common/pipes/dto-validation.pipe';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        config: {\n          url: config.get('ioredis.uri'),\n          options: config.get('ioredis.options'),\n        },\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    RequestContextModule,\n    CoreModule.register(),\n    ManagementModule.register(),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionFilter,\n    // },\n    {\n      provide: APP_FILTER,\n      useClass: MongooseValidationFilter,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: DtoValidationPipe,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Partial\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\n\n@Injectable()\nexport class AppService extends AbstractService {\n  protected package: Partial;\n\n  public constructor(protected moduleRef: ModuleRef) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mail\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/ask-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/ask-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class AskTokenDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  uid: string;\n\n  @ApiProperty({ example: 'monemail@mondomaine.com', description: 'secondary mail' })\n  @IsString()\n  mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\n\n@Public()\n@ApiTags('core')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    const user = await this.service.getSessionData(identity);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...user,\n        sseToken: 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8', //TODO: change to real token\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const tokens = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      sseToken: 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8', //TODO: change to real token\n    });\n  }\n\n  @Post('logout')\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardInternal(['jwt'])\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/_common/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/guards/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard as AuthGuardInternal } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport { META_UNPROTECTED } from '~/_common/decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardInternal(['jwt']) {\n  public constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  public canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const isUnprotected = this.reflector.getAllAndOverride(META_UNPROTECTED, [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n    return isUnprotected || super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\nimport { KeyringsModule } from '../keyrings/keyrings.module';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, keyringsService: KeyringsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity: AgentType, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\nimport { KeyringsService } from '../keyrings/keyrings.service';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    protected readonly keyringsService: KeyringsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n        scopes: ['offline', 'api'],\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      console.log(user);\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType & { token: string } }): Promise {\n    this.logger.debug(`Atempt to authenticate with JTI: `);\n    if (payload.scopes.includes('offline')) {\n      return payload.identity;\n    }\n    if (payload.scopes.includes('api')) {\n      try {\n        const identity = await this.keyringsService.findOne({\n          _id: payload.identity._id,\n          token: payload.identity.token,\n        });\n        if (identity) {\n          return identity.toObject();\n        }\n      } catch (e) { }\n      return null;\n    }\n    try {\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        const data = JSON.parse(identity);\n        const success = await this.agentsService.model.countDocuments({\n          _id: payload.identity._id,\n          'security.secretKey': data.identity?.security?.secretKey,\n        });\n\n        return success ? data : null;\n      }\n    } catch (e) {\n      this.logger.warn('Invalid jwt session', e);\n    }\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['sesame'];\n    if (options?.scopes) scopes.push(...options.scopes);\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity, scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...omit(options, ['scopes']),\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity,\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  //TODO: change any\n  public async getSessionData(identity: AgentType): Promise {\n    // const entity = await this.agentsService.findOne(\n    //   { _id: identity.entityId },\n    //   {\n    //     projection: {\n    //       metadata: 0,\n    //     },\n    //   },\n    // )\n    return {\n      ...identity,\n      // entity,\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return this.createTokens(omit(identity.toObject(), ['password']), refresh_token);\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInfoInterface.html":{"url":"interfaces/BackendResultInfoInterface.html","title":"interface - BackendResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInterface.html":{"url":"interfaces/BackendResultInterface.html","title":"interface - BackendResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsCommand.html":{"url":"classes/BackendsCommand.html","title":"class - BackendsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                sse\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(res: Response, body: ExecuteJobDto, asyncQuery: string, timeoutDiscardQuery: string, syncTimeout?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ExecuteJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timeoutDiscardQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                syncTimeout\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        sse\n                        \n                    \n                \n            \n            \n                \n                        \n                    sse(res: Response, key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('sse')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(res: Response, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('syncall')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(res: Response, body: SyncIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sync')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SyncIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  Body,\n  Controller,\n  HttpStatus,\n  Logger,\n  ParseIntPipe,\n  Post,\n  Query,\n  Res,\n  Sse,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport Redis from 'ioredis';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ExecuteJobDto } from './_dto/execute-job.dto';\nimport { BackendsService } from './backends.service';\nimport { SyncIdentitiesDto } from './_dto/sync-identities.dto';\nimport { Types } from 'mongoose';\n\nfunction fireMessage(observer: Subscriber, channel: string, message: any, loggername: string) {\n  try {\n    observer.next({\n      data: { channel, payload: message },\n    } as MessageEvent);\n    Logger.debug(`Observer send to  with data `, loggername);\n  } catch (err) {\n    Logger.error(`Observer error from  with data . Error: ${err}`, loggername);\n  }\n}\n\n@Controller('backends')\n@ApiTags('core')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(\n    private backendsService: BackendsService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) {}\n\n  @Post('sync')\n  public async syncIdentities(\n    @Res() res: Response,\n    @Body() body: SyncIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('syncall')\n  public async syncAllIdentities(@Res() res: Response, @Query('async') asyncQuery: string) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncAllIdentities({\n      async,\n    });\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('execute')\n  public async executeJob(\n    @Res() res: Response,\n    @Body() body: ExecuteJobDto,\n    @Query('async') asyncQuery: string,\n    @Query('timeoutDiscard') timeoutDiscardQuery: string,\n    @Query(\n      'syncTimeout',\n      new ParseIntPipe({\n        optional: true,\n        errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE,\n      }),\n    )\n    syncTimeout?: number,\n  ): Promise {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const timeoutDiscard = /true|on|yes|1/i.test(timeoutDiscardQuery);\n    const [job, response] = await this.backendsService.executeJob(\n      body.action,\n      new Types.ObjectId(body.id),\n      body.payload,\n      {\n        async,\n        syncTimeout,\n        timeoutDiscard,\n      },\n    );\n    return res.status(HttpStatus.ACCEPTED).json({ async, job, response });\n  }\n\n  @Public()\n  @Sse('sse')\n  public async sse(@Res() res: Response, @Query('key') key: string): Promise> {\n    if (key !== 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8') throw new UnauthorizedException();\n\n    res.socket.on('close', () => {\n      Logger.debug(`Observer close connection`, this.constructor.name);\n    });\n\n    return new Observable((observer) => {\n      this.backendsService.queueEvents.on('added', (added) =>\n        fireMessage(observer, 'job:added', added, this.constructor.name),\n      );\n\n      this.backendsService.queueEvents.on('completed', (completed) =>\n        fireMessage(observer, 'job:completed', completed, this.constructor.name),\n      );\n\n      this.backendsService.queueEvents.on('failed', (failed) =>\n        fireMessage(observer, 'job:failed', failed, this.constructor.name),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_providers\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\nimport { JobsModule } from '../jobs/jobs.module';\nimport { TasksModule } from '../tasks/tasks.module';\n@Module({\n  imports: [ConfigModule, IdentitiesModule, JobsModule, TasksModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n  exports: [BackendsService],\n})\nexport class BackendsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendsService.html":{"url":"injectables/BackendsService.html","title":"injectable - BackendsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueProcessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, identitiesService: IdentitiesService, jobsService: JobsService, tasksService: TasksService)\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/backends.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identitiesService\n                                                  \n                                                        \n                                                                        IdentitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsService\n                                                  \n                                                        \n                                                                        JobsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(actionType: ActionType, concernedTo: Types.ObjectId, payload?: Record, options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionType\n                                            \n                                                            ActionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                concernedTo\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueProcessor\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueProcessor:35\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(payload: string[], options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Types } from 'mongoose';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\nimport { IdentitiesService } from '~/management/identities/identities.service';\nimport { JobState } from '../jobs/_enums/state.enum';\nimport { Jobs } from '../jobs/_schemas/jobs.schema';\nimport { JobsService } from '../jobs/jobs.service';\nimport { TasksService } from '../tasks/tasks.service';\nimport { ActionType } from './_enum/action-type.enum';\nimport { ExecuteJobOptions } from './_interfaces/execute-job-options.interface';\nimport { Tasks } from '../tasks/_schemas/tasks.schema';\n\nconst DEFAULT_SYNC_TIMEOUT = 30_000;\n\n@Injectable()\nexport class BackendsService extends AbstractQueueProcessor {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected identitiesService: IdentitiesService,\n    protected jobsService: JobsService,\n    protected tasksService: TasksService,\n  ) {\n    super({ moduleRef });\n  }\n\n  public async onModuleInit() {\n    await super.onModuleInit();\n\n    if (process.env['npm_lifecycle_event'] === 'console') {\n      this.logger.debug('QUEUE CHECKER IGNORED, cli mode detected !');\n      return;\n    }\n    this.logger.warn('ENABLE QUEUE CHECKER !');\n\n    const jobsCompleted = await this._queue.getCompleted();\n    for (const job of jobsCompleted) {\n      const isSyncedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: job.id, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.COMPLETED,\n            finishedAt: new Date(),\n            result: job.returnvalue,\n          },\n        },\n        { new: true },\n      );\n      if (isSyncedJob) {\n        await this.identitiesService.model.findByIdAndUpdate(isSyncedJob?.concernedTo?.id, {\n          $set: {\n            state: IdentityState.SYNCED,\n          },\n        });\n        this.logger.warn(`Job already completed, syncing... [${job.id}::COMPLETED]`);\n      }\n    }\n\n    this.queueEvents.on('waiting', (payload) => this.logger.debug(`Job is now waiting... [${payload.jobId}]`));\n    this.queueEvents.on('active', async (payload) => {\n      this.logger.debug(`Job is now active... [${payload.jobId}]`);\n      await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.IN_PROGRESS,\n            processedAt: new Date(),\n          },\n        },\n        { new: true },\n      );\n    });\n\n    this.queueEvents.on('failed', async (payload) => {\n      this.logger.debug(`Job failed ! [${payload.jobId}]`);\n      const failedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.FAILED,\n            finishedAt: new Date(),\n            result: {\n              error: {\n                message: payload.failedReason,\n              },\n            },\n          },\n        },\n        { new: true },\n      );\n      await this.identitiesService.model.findByIdAndUpdate(failedJob?.concernedTo?.id, {\n        $set: {\n          state: IdentityState.ON_ERROR,\n        },\n      });\n    });\n\n    this.queueEvents.on('completed', async (payload) => {\n      const completedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.COMPLETED,\n            finishedAt: new Date(),\n            result: payload.returnvalue,\n          },\n        },\n        { upsert: true, new: true },\n      );\n      console.log('completedJob', completedJob);\n      await this.identitiesService.model.findByIdAndUpdate(completedJob?.concernedTo?.id, {\n        $set: {\n          state: IdentityState.SYNCED,\n        },\n      });\n      this.logger.log(`Job completed... Syncing [${payload.jobId}]`);\n    });\n  }\n\n  public async syncAllIdentities(options?: ExecuteJobOptions): Promise {\n    const syncAllIdentities = (await this.identitiesService.find({\n      state: IdentityState.TO_SYNC,\n    })) as unknown as Identities[];\n    const identities = syncAllIdentities.map((identity: Identities) => {\n      return {\n        action: ActionType.IDENTITY_UPDATE,\n        identity,\n      };\n    });\n\n    const task: Tasks = await this.tasksService.create({\n      jobs: identities.map((identity) => identity.identity._id),\n    });\n\n    const result = {};\n    for (const identity of identities) {\n      try {\n        this.logger.debug(`Syncing identity ${identity.identity._id}`);\n        const [executedJob] = await this.executeJob(\n          identity.action,\n          identity.identity._id,\n          { identity },\n          {\n            ...options,\n            task: task._id,\n          },\n        );\n        result[identity.identity._id] = executedJob;\n      } catch (err: any & HttpException) {\n        this.logger.error(`Error while syncing identity ${identity.identity._id}`, err);\n        result[identity.identity._id] = {\n          ...err.response,\n        };\n      }\n    }\n\n    return result;\n  }\n\n  public async syncIdentities(payload: string[], options?: ExecuteJobOptions): Promise {\n    const identities: {\n      action: ActionType;\n      identity: Identities;\n    }[] = [];\n\n    if (!payload.length) throw new BadRequestException('No identities to sync');\n\n    for (const key of payload) {\n      const identity = await this.identitiesService.findById(key);\n      if (identity.state !== IdentityState.TO_SYNC) {\n        throw new BadRequestException({\n          status: HttpStatus.BAD_REQUEST,\n          message: `Identity ${key} is not in state TO_SYNC`,\n          identity,\n        });\n      }\n      identities.push({\n        action: ActionType.IDENTITY_UPDATE,\n        identity,\n      });\n    }\n\n    const task: Tasks = await this.tasksService.create({\n      jobs: identities.map((identity) => identity.identity._id),\n    });\n\n    const result = {};\n    for (const identity of identities) {\n      const [executedJob] = await this.executeJob(identity.action, identity.identity._id, identity.identity, {\n        ...options,\n        task: task._id,\n      });\n      result[identity.identity._id] = executedJob;\n    }\n    return result;\n  }\n\n  public async executeJob(\n    actionType: ActionType,\n    concernedTo: Types.ObjectId,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    payload?: Record,\n    options?: ExecuteJobOptions,\n  ): Promise {\n    const job = await this.queue.add(\n      actionType,\n      {\n        concernedTo,\n        payload,\n      },\n      options?.job,\n    );\n    const optionals = {};\n    if (!options?.async) {\n      optionals['processedAt'] = new Date();\n      optionals['state'] = JobState.IN_PROGRESS;\n    }\n    const identity = await this.identitiesService.findById(concernedTo);\n    const jobStore = await this.jobsService.create({\n      jobId: job.id,\n      action: actionType,\n      params: payload,\n      concernedTo: {\n        $ref: 'identities',\n        id: concernedTo,\n        name: [identity.inetOrgPerson?.cn, identity.inetOrgPerson?.givenName].join(' '),\n      },\n      comment: options?.comment,\n      task: options?.task,\n      state: JobState.CREATED,\n      ...optionals,\n    });\n    await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n      $set: {\n        state: IdentityState.PROCESSING,\n      },\n    });\n    if (!options?.async) {\n      let error: Error;\n      try {\n        const response = await job.waitUntilFinished(this.queueEvents, options.syncTimeout || DEFAULT_SYNC_TIMEOUT);\n        const jobStoreUpdated = await this.jobsService.update(jobStore._id, {\n          $set: {\n            state: JobState.COMPLETED,\n            processedAt: new Date(),\n            finishedAt: new Date(),\n            result: response,\n          },\n        });\n        await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n          $set: {\n            state: IdentityState.SYNCED,\n          },\n        });\n        return [jobStoreUpdated as unknown as Jobs, response];\n      } catch (err) {\n        error = err;\n      }\n      const jobFailed = await this.jobsService.update(jobStore._id, {\n        $set: {\n          state: JobState.FAILED,\n          finishedAt: new Date(),\n          result: {\n            error: {\n              message: error.message,\n            },\n          },\n        },\n      });\n      await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n        $set: {\n          state: IdentityState.ON_ERROR,\n        },\n      });\n      if (options?.timeoutDiscard !== false) {\n        job.discard();\n        throw new BadRequestException({\n          status: HttpStatus.BAD_REQUEST,\n          message: `Sync job ${job.id} failed to finish in time`,\n          error,\n          job: jobFailed as unknown as Jobs,\n        });\n      }\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        message: `Job now continue to run in background ${job.id}, timeout wait until finish reached`,\n        error,\n        job: jobFailed as unknown as Jobs,\n      });\n    }\n    return [jobStore.toObject(), null];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsSyncallCommand.html":{"url":"classes/BackendsSyncallCommand.html","title":"class - BackendsSyncallCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsSyncallCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, backendsService: BackendsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendsService\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public uid: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old password', type: String })\n  public oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CipherData.html":{"url":"interfaces/CipherData.html","title":"interface - CipherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CipherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { BadRequestException, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { IdentitiesService } from '../identities/identities.service';\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public static readonly TOKEN_EXPIRATION = 3600;\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    const identity = await this.identities.findOne({ 'inetOrgPerson.uid': passwdDto.uid });\n\n    return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, identity._id, passwdDto, {\n      async: false,\n    });\n  }\n\n  public async askToken(askToken: AskTokenDto): Promise {\n    await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n\n    const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n    const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n    const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n    let ciphertext = cipher.update(\n      JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n      'utf8',\n      'base64',\n    );\n    ciphertext += cipher.final('base64');\n\n    await this.redis.set(\n      ciphertext,\n      JSON.stringify({\n        k,\n        iv,\n        tag: cipher.getAuthTag().toString('base64'),\n      }),\n    );\n    await this.redis.expire(ciphertext, PasswdService.TOKEN_EXPIRATION);\n    return ciphertext;\n  }\n\n  public async decryptToken(token: string): Promise {\n    try {\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n    const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid });\n\n    return await this.backends.executeJob(\n      ActionType.IDENTITY_PASSWORD_RESET,\n      identity._id,\n      { uid: tokenData.uid, newPassword: data.newPassword },\n      {\n        async: false,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentCreateQuestions, AgentsCommand } from './agents.command';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bullmq';\nimport { RedisOptions } from 'ioredis';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport config, { MongoosePlugin } from '~/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { KeyringsCommand, KeyringsCreateQuestions } from './keyrings.command';\nimport { KeyringsModule } from '~/core/keyrings/keyrings.module';\nimport { BackendsCommand } from './backends.command';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { AuthModule } from '~/core/auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        config: {\n          ...config.get('ioredis.options'),\n          url: config.get('ioredis.uri'),\n        },\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n    BackendsModule,\n    AuthModule,\n  ],\n  providers: [\n    ...AgentsCommand.registerWithSubCommands(),\n    ...KeyringsCommand.registerWithSubCommands(),\n    ...BackendsCommand.registerWithSubCommands(),\n    AgentCreateQuestions,\n    KeyringsCreateQuestions,\n  ],\n})\nexport class CliModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPart.html":{"url":"classes/ConcernedToPart.html","title":"class - ConcernedToPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n@Schema({ _id: false })\nexport class ConcernedToPart extends Document {\n  @Prop({ type: String, required: true })\n  public $ref: string;\n\n  @Prop({ type: Types.ObjectId, required: true })\n  public id: Types.ObjectId;\n\n  @Prop({ type: String })\n  public name?: string;\n}\n\nexport const ConcernedToPartSchema = SchemaFactory.createForClass(ConcernedToPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPartDTO.html":{"url":"classes/ConcernedToPartDTO.html","title":"class - ConcernedToPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/_parts/concerned-to.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class ConcernedToPartDTO {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public $ref: string;\n\n  @IsMongoId()\n  @ApiProperty()\n  public id: Types.ObjectId;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                required\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly displayName: string = 'Console';\n\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AgentsModule } from './agents/agents.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BackendsModule } from './backends/backends.module';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { TasksModule } from './tasks/tasks.module';\n\n@Module({\n  imports: [AuthModule, BackendsModule, LoggerModule, KeyringsModule, AgentsModule, JobsModule, TasksModule],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPart.html":{"url":"classes/DataPart.html","title":"class - DataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/_parts/data.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_DATA_TYPE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport const DEFAULT_DATA_TYPE = 'default';\n\n@Schema({ _id: false })\nexport class DataPart extends Document {\n  @Prop({\n    type: String,\n    default: DEFAULT_DATA_TYPE,\n  })\n  public type?: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public message: string;\n}\n\nexport const DataPartSchema = SchemaFactory.createForClass(DataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecuteJobDto.html":{"url":"classes/ExecuteJobDto.html","title":"class - ExecuteJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecuteJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/execute-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ActionType)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional } from 'class-validator';\nimport { ActionType } from '../_enum/action-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ExecuteJobDto {\n  @IsNotEmpty()\n  @IsEnum(ActionType)\n  @ApiProperty({ type: String })\n  public action: ActionType;\n\n  @IsMongoId()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id: string;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: Object })\n  public payload: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecuteJobOptions.html":{"url":"interfaces/ExecuteJobOptions.html","title":"interface - ExecuteJobOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecuteJobOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/execute-job-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            job\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syncTimeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutDiscard\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job:         JobsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JobsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syncTimeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syncTimeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutDiscard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutDiscard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JobsOptions } from 'bullmq';\nimport { Types } from 'mongoose';\n\nexport interface ExecuteJobOptions {\n  job?: JobsOptions;\n  async?: boolean;\n  syncTimeout?: number;\n  timeoutDiscard?: boolean;\n  comment?: string;\n  task?: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@streamkits/nestjs_module_scrud';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                additionalFields\n                            \n                            \n                                    \n                                fingerprint\n                            \n                            \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  lifecycle: IdentityLifecycle;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  additionalFields: AdditionalFieldsPart;\n\n  @Prop({ type: String })\n  fingerprint: string;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesController.html":{"url":"controllers/IdentitiesController.html","title":"controller - IdentitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                updateStateMany\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:262\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})/state')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:223\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        updateStateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStateMany(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('state')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesUpsertDto, filtersQuery: literal type[], errorOnNotFound: string, upsert: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpsertDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filtersQuery\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                errorOnNotFound\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'false'\n                                            \n\n                                        \n                                        \n                                                upsert\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'true'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Res,\n  Version,\n} from '@nestjs/common';\nimport { IdentitiesDto, IdentitiesCreateDto, IdentitiesUpdateDto, IdentitiesUpsertDto } from './_dto/identities.dto';\nimport { IdentitiesService } from './identities.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { Identities } from './_schemas/identities.schema';\nimport { Types, Document, isValidObjectId } from 'mongoose';\nimport { IdentityState } from './_enums/states.enum';\n// import { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n// @UseFilters(new IdentitiesValidationFilter())\n@ApiTags('management')\n@Controller('identities')\nexport class IdentitiesController extends AbstractController {\n  constructor(\n    protected readonly _service: IdentitiesService,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as Identities).state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto)\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesUpsertDto,\n    @Query('filters')\n    filtersQuery: {\n      [key: string]: string;\n    }[] = [],\n    @Query('errorOnNotFound') errorOnNotFound: string = 'false',\n    @Query('upsert') upsert: string = 'true',\n  ): Promise;\n      message?: string;\n      validations?: MixedValue;\n    }>\n  > {\n    const filters = {};\n    if (filtersQuery.length === 0) {\n      throw new BadRequestException('Missing filters array');\n    }\n    for (const [key, filter] of Object.entries(filtersQuery)) {\n      filters[key] = isValidObjectId(filter) ? new Types.ObjectId(`${filter}`) : filter;\n    }\n\n    //TODO: check if the filters are valid and if the body is equal to filters\n\n    const data = await this._service.upsert(filters, body, {\n      errorOnNotFound: /true|on|yes|1/i.test(errorOnNotFound),\n      upsert: /true|on|yes|1/i.test(upsert),\n    });\n\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      return res.status(HttpStatus.ACCEPTED).json({\n        statusCode: HttpStatus.ACCEPTED,\n        message: 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.',\n        data,\n      });\n    }\n\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      message: 'Identitée créée avec succès.',\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      IdentitiesController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.findById(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Get('count')\n  public async count(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const total = await this._service.count(searchFilterSchema, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: total,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})/state')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async updateState(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const identity = await this._service.findById(_id);\n    if (!identity) {\n      throw new BadRequestException('Identity not found');\n    }\n    if (identity.state !== IdentityState.TO_VALIDATE) {\n      throw new BadRequestException(\"La validation de l'identité est déjà complétée.\");\n    }\n    const data = await this._service.updateState(_id, body.state);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch('state')\n  public async updateStateMany(\n    @Res() res: Response,\n    @Body()\n    body: {\n      originState: IdentityState;\n      targetState: IdentityState;\n      ids: Types.ObjectId[];\n    },\n  ): Promise {\n    const data = await this._service.updateStateMany(body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesJsonFormsController.html":{"url":"controllers/IdentitiesJsonFormsController.html","title":"controller - IdentitiesJsonFormsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesJsonFormsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/jsonforms\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                generate\n                            \n                            \n                                    \n                                    Async\n                                generateAll\n                            \n                            \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    Async\n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(res: Response, schema: string | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                schema\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateAll')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { Response } from 'express';\n\n@Controller('management/identities/jsonforms')\nexport class IdentitiesJsonFormsController extends AbstractController {\n  constructor(private readonly _service: IdentitiesJsonformsService) {\n    super();\n  }\n\n  @Post('generateAll')\n  async generateAll(@Res() res: Response): Promise {\n    const result = await this._service.generateAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Post('generate')\n  async generate(@Res() res: Response, @Body('schema') schema: string | null = null): Promise {\n    const result = await this._service.generate({ schema, path: './configs/identities/jsonforms' });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get()\n  async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesJsonformsModule.html":{"url":"modules/IdentitiesJsonformsModule.html","title":"module - IdentitiesJsonformsModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesJsonformsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesJsonFormsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { IdentitiesJsonFormsController } from './identities.jsonforms.controller';\n\n@Module({\n  controllers: [IdentitiesJsonFormsController],\n  providers: [IdentitiesJsonformsService],\n  exports: [IdentitiesJsonformsService],\n})\nexport class IdentitiesJsonformsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesJsonformsService.html":{"url":"injectables/IdentitiesJsonformsService.html","title":"injectable - IdentitiesJsonformsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesJsonformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generate\n                            \n                            \n                                    Async\n                                generateAll\n                            \n                            \n                                    Private\n                                resolveJsonFormPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveJsonFormPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveJsonFormPath(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { parse, stringify } from 'yaml';\nimport { existsSync, readFileSync, writeFileSync, readdirSync } from 'fs';\nimport Ajv from 'ajv';\nimport { ValidationConfigException } from '~/_common/errors/ValidationException';\n\n@Injectable()\nexport class IdentitiesJsonformsService extends AbstractService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n\n  constructor() {\n    super();\n    //this.validateSchema = this.ajv.compile(validSchema);\n  }\n\n  private resolveJsonFormPath(schema: string): string | null {\n    if (!schema.endsWith('.yml')) schema += '.yml';\n    const hardConfigPath = `./src/management/identities/jsonforms/_config/${schema}`;\n    const dynamicConfigPath = `./configs/identities/jsonforms/${schema}`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  async generate({ schema, path }): Promise {\n    if (schema) {\n      console.log(`Generating jsonforms for schema: ${schema}`);\n      if (!schema.endsWith('.yml')) schema += '.yml';\n      const filePath = `${path}/${schema}`;\n      console.log(`File path: ${filePath}`);\n      if (!existsSync(filePath)) {\n        console.log(`File not found: ${filePath}`);\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n\n      const jsonSchema = parse(readFileSync(filePath, 'utf-8'));\n\n      // const jsonForm = {\n      //   type: 'VerticalLayout',\n      //   elements: Object.keys(jsonSchema.properties).map((key) => {\n      //     return {\n      //       type: 'Control',\n      //       label: key,\n      //       scope: `#/properties/${key}`,\n      //       options: {\n      //         required: jsonSchema.required && jsonSchema.required.includes(key),\n      //       },\n      //     };\n      //   }),\n      // };\n\n      const jsonForm = {\n        type: 'Group',\n        label: schema,\n        elements: Object.keys(jsonSchema.properties)\n          .reduce((acc, key, index) => {\n            const groupIndex = Math.floor(index / 3); // Determine the current group based on the index\n            if (!acc[groupIndex]) {\n              acc[groupIndex] = {\n                // Initialize a new HorizontalLayout group if it doesn't exist\n                type: 'HorizontalLayout',\n                elements: [],\n              };\n            }\n\n            acc[groupIndex].elements.push({\n              // Add the current element to its corresponding group\n              type: 'Control',\n              label: key,\n              scope: `#/properties/${key}`,\n              options: {\n                required: jsonSchema.required && jsonSchema.required.includes(key),\n                showUnfocusedDescription: false,\n              },\n            });\n\n            return acc;\n          }, [])\n          .map((group) => group), // Flatten the structure\n      };\n      if (!schema.endsWith('.ui.yml')) schema = schema.replace('.yml', '.ui.yml');\n      const jsonFormPath = `${path.replace('validations', 'jsonforms')}/${schema}`;\n      console.log(`Writing jsonform to: ${jsonFormPath}`);\n      writeFileSync(`${jsonFormPath}`, stringify(jsonForm));\n      return jsonForm;\n    }\n  }\n\n  async generateAll(): Promise {\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    const hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ schema: file, path: hardConfigPath }));\n    const dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n      schema: file,\n      path: dynamicConfigPath,\n    }));\n\n    console.log('Generating jsonforms for all schemas');\n    console.log('Hard config files:', hardConfigFiles);\n    console.log('Dynamic config files:', dynamicConfigFiles);\n    const files = [...hardConfigFiles, ...dynamicConfigFiles].filter((file) => file.schema.endsWith('.yml'));\n    for (const file of files) {\n      this.generate(file);\n    }\n    return files.length;\n  }\n\n  async findAll(): Promise {\n    const hardConfigPath = './src/management/identities/jsonforms/_config';\n    const dynamicConfigPath = './configs/identities/jsonforms';\n    const hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ file, path: hardConfigPath }));\n    const dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({ file, path: dynamicConfigPath }));\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.ui.yml', '');\n      result.push({ [key]: data });\n    }\n    return [result, files.length];\n  }\n\n  async findOne(schema): Promise {\n    if (schema.endsWith('.yml')) schema = schema.replace('.yml', '');\n    const filePath = this.resolveJsonFormPath(schema + '.ui');\n    if (!filePath) {\n      throw new ValidationConfigException({ message: `File not found: ${schema}.ui.yml` });\n    }\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\n\nIdentitiesService \n\nIdentitiesService \n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesService  -->\n\nIdentitiesModule->IdentitiesService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                        \n                            IdentitiesService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Identities, IdentitiesSchema } from './_schemas/identities.schema';\nimport { IdentitiesService } from './identities.service';\nimport { IdentitiesController } from './identities.controller';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentitiesJsonformsService } from './jsonforms/identities.jsonforms.service';\nimport { IdentitiesJsonformsModule } from './jsonforms/identities.jsonforms.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule, IdentitiesJsonformsModule],\n        inject: [IdentitiesValidationService, IdentitiesJsonformsService],\n        useFactory: () => IdentitiesSchema,\n      },\n    ]),\n  ],\n  providers: [\n    IdentitiesService,\n    IdentitiesValidationService,\n    {\n      provide: APP_FILTER,\n      useClass: IdentitiesValidationFilter,\n    },\n    IdentitiesJsonformsService,\n  ],\n  controllers: [IdentitiesController],\n  exports: [IdentitiesService],\n})\nexport class IdentitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpsertDto.html":{"url":"classes/IdentitiesUpsertDto.html","title":"class - IdentitiesUpsertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpsertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesUpdateDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                $setOnInsert\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $setOnInsert\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    Async\n                                searchAll\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management')\n@Controller('management/identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                resolveConfigPath\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveConfigPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveConfigPath(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart | additionalFieldsPartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        AdditionalFieldsPart | additionalFieldsPartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync, readdirSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport { buildYup } from 'schema-to-yup';\nimport ajvErrors from 'ajv-errors';\nimport validSchema from './_config/validSchema';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { additionalFieldsPartDto } from '../_dto/_parts/additionalFields.dto';\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  constructor() {\n    ajvErrors(this.ajv);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger();\n  }\n\n  private resolveConfigPath(key: string): string | null {\n    const hardConfigPath = `./src/management/identities/validations/_config/${key}.yml`;\n    const dynamicConfigPath = `./configs/identities/validations/${key}.yml`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  async validate(data: AdditionalFieldsPart | additionalFieldsPartDto): Promise {\n    const objectClasses = data.objectClasses;\n    const attributes = data.attributes;\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = this.resolveConfigPath(key);\n      if (!existsSync(path)) {\n        validations[key] = `Fichier de config '${key}.yml' introuvable`;\n        reject = true;\n        continue;\n      }\n\n      // Check for invalid schema\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations[key] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        reject = true;\n        continue;\n      }\n    }\n\n    if (reject) {\n      throw new ValidationConfigException({ validations });\n    }\n\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key]);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any): Promise {\n    const path = this.resolveConfigPath(key);\n    const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n\n    const yupSchema = buildYup(schema, { noSortEdges: true });\n    try {\n      await yupSchema.validate(attribute, { strict: true, abortEarly: false });\n      return null;\n    } catch (error) {\n      return error.inner.reduce((acc, err) => {\n        acc[err.path] = err.message;\n        return acc;\n      }, {});\n    }\n  }\n\n  async findAll(): Promise {\n    this.logger.debug(['findAll', JSON.stringify(Object.values(arguments))].join(' '));\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    // Retrieve files from each directory and tag them with their source\n    const hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({\n      file,\n      path: hardConfigPath,\n      source: 'hardConfig',\n    }));\n    const dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n      file,\n      path: dynamicConfigPath,\n      source: 'dynamicConfig',\n    }));\n\n    // Combine the file arrays\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.yml', '');\n      result.push({ [key]: data, source: fileObj.source });\n    }\n    return [result, files.length];\n  }\n\n  async findOne(schema): Promise {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '));\n    const filePath = this.resolveConfigPath(schema);\n    if (!existsSync(filePath)) {\n      const message = `File not found: ${filePath}`;\n      throw new ValidationConfigException({ message });\n    }\n\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/jobs.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                concernedTo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                finishedAt\n                            \n                            \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                params\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                processedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                result\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ConcernedToPartSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        processedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: JobState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { JobState } from '../_enums/state.enum';\nimport { ConcernedToPart, ConcernedToPartSchema } from './_parts/concerned-to.parts.schema';\n\nexport type JobsDocument = Jobs & Document;\n\n@Schema({ versionKey: false })\nexport class Jobs extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public jobId: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public action: string;\n\n  @Prop({\n    type: ConcernedToPartSchema,\n    required: true,\n  })\n  public concernedTo?: ConcernedToPart;\n\n  @Prop({ type: Types.ObjectId })\n  public task?: Types.ObjectId;\n\n  @Prop({ type: String })\n  public comment?: string;\n\n  @Prop({ type: Object, default: {} })\n  public params?: object;\n\n  @Prop({ type: Object, default: {} })\n  public result?: object;\n\n  @Prop({ type: Date })\n  public processedAt?: Date;\n\n  @Prop({ type: Date })\n  public finishedAt?: Date;\n\n  @Prop({ type: Number, enum: JobState, default: JobState.CREATED })\n  state: JobState;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(JobsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Param, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { JobsDto } from './_dto/jobs.dto';\nimport { JobsService } from './jobs.service';\n\n@ApiTags('core')\n@Controller('jobs')\nexport class JobsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    jobId: 1,\n    action: 1,\n    concernedTo: 1,\n    metadata: 1,\n    params: 1,\n    result: 1,\n  };\n\n  public constructor(private readonly _service: JobsService) {\n    super();\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(JobsDto, JobsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema({ unsafe: true }) searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      JobsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(JobsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsCreateDto.html":{"url":"classes/JobsCreateDto.html","title":"class - JobsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsDto.html":{"url":"classes/JobsDto.html","title":"class - JobsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JobsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Jobs, JobsSchema } from './_schemas/jobs.schema';\nimport { JobsController } from './jobs.controller';\nimport { JobsService } from './jobs.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Jobs.name,\n        useFactory: () => JobsSchema,\n      },\n    ]),\n  ],\n  providers: [JobsService],\n  controllers: [JobsController],\n  exports: [JobsService],\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Jobs } from './_schemas/jobs.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JobsService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Jobs.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsUpdateDto.html":{"url":"classes/JobsUpdateDto.html","title":"class - JobsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(JobsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    Logger.debug(`Atempt to authenticate with JTI: `, 'JwtStrategy');\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public name: string;\n\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n    default: ['0.0.0.0/0'],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCommand.html":{"url":"classes/KeyringsCommand.html","title":"class - KeyringsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    token: 0,\n    // allowedNetworks: 1,\n    // suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      token: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateCommand.html":{"url":"classes/KeyringsCreateCommand.html","title":"class - KeyringsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, keyringsService: KeyringsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateQuestions.html":{"url":"classes/KeyringsCreateQuestions.html","title":"class - KeyringsCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseName\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseName(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Name ?', name: 'name'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\n\nKeyringsService \n\nKeyringsService \n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n  exports: [KeyringsService],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: KeyringsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:15\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model, SaveOptions, Document } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { KeyringsCreateDto } from './_dto/keyrings.dto';\nimport { randomBytes } from 'node:crypto';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: KeyringsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    const token = randomBytes(64).toString('hex');\n    return await super.create(\n      {\n        ...data,\n        token,\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.debug(`Try to authenticate user : ${username}`, 'LocalStrategy');\n    const user = await this.auth.authenticateWithLocal(username, password);\n    console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/logger.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                concerned\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                context\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concerned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:36\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:29\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DataPartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { DataPart, DataPartSchema } from './_parts/data.part.schema';\n\nexport const DEFAULT_CONTEXT = 'default';\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public level: string;\n\n  @Prop({\n    type: DataPartSchema,\n    required: true,\n    default: {},\n  })\n  public data: DataPart;\n\n  /**\n   * @description The context of the log message.\n   * @example 'identity'\n   */\n  @Prop({ type: String })\n  public context?: string;\n\n  /**\n   * @description The concerned document in collection of the log message.\n   * @example '5f7b1b3b7f7b1b3b7f7b1b3b'\n   */\n  @Prop({ type: String })\n  public concerned?: string;\n}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './_schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Logger } from './_schemas/logger.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoggerService extends AbstractServiceSchema {\n  constructor(@InjectModel(Logger.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\nimport { PasswdModule } from './passwd/passwd.module';\n\n@Module({\n  imports: [IdentitiesModule, PasswdModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                gettoken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(body: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'Change password'})@ApiResponse({status: undefined, description: 'Password has been successfully changed.'})@ApiResponse({status: undefined, description: 'Old password wrong'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        gettoken\n                        \n                    \n                \n            \n            \n                \n                        \n                    gettoken(asktoken: AskTokenDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('gettoken')@ApiOperation({summary: 'Ask token for reseting password'})@ApiResponse({status: undefined, description: 'Token'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asktoken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(body: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'Reset password'})@ApiResponse({status: undefined})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(body: VerifyTokenDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verifytoken')@ApiOperation({summary: 'Ask token for reseting password'})@ApiResponse({status: undefined})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerifyTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Res, Logger, HttpStatus } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { VerifyTokenDto } from './dto/verify-token.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\n\n@Controller('passwd')\n@ApiTags('passwd')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  public constructor(private passwdService: PasswdService) { }\n\n  @Post('change')\n  @ApiOperation({ summary: 'Change password' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Password has been successfully changed.' })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, description: 'Old password wrong' })\n  public async change(@Body() body: ChangePasswordDto, @Res() res: Response): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, data] = await this.passwdService.change(body);\n    this.logger.log(`Call passwd change for : ${body.uid}`);\n\n    return res.status(HttpStatus.OK).json(data);\n  }\n\n  @Post('gettoken')\n  @ApiOperation({ summary: 'Ask token for reseting password' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Token' })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST })\n  public async gettoken(@Body() asktoken: AskTokenDto, @Res() res: Response): Promise {\n    this.logger.log('GetToken for : ' + asktoken.uid);\n    const token = await this.passwdService.askToken(asktoken);\n\n    return res.status(HttpStatus.OK).json({ token });\n  }\n\n  @Post('verifytoken')\n  @ApiOperation({ summary: 'Ask token for reseting password' })\n  @ApiResponse({ status: HttpStatus.OK })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST })\n  public async verifyToken(@Body() body: VerifyTokenDto, @Res() res: Response): Promise {\n    this.logger.log('Verify token : ' + body.token);\n    const data = await this.passwdService.decryptToken(body.token);\n\n    return res.status(HttpStatus.OK).json(data);\n  }\n\n  @Post('reset')\n  @ApiOperation({ summary: 'Reset password' })\n  @ApiResponse({ status: HttpStatus.OK })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST })\n  public async reset(@Body() body: ResetPasswordDto, @Res() res: Response): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, data] = await this.passwdService.reset(body);\n    return res.status(HttpStatus.OK).json(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_PasswdModule_imports\n\n\n\n\nBackendsModule\n\nBackendsModule\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesModule } from '../identities/identities.module';\n\n@Module({\n  imports: [BackendsModule, IdentitiesModule],\n  controllers: [PasswdController],\n  providers: [PasswdService],\n})\nexport class PasswdModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswdService.html":{"url":"injectables/PasswdService.html","title":"injectable - PasswdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                RANDOM_BYTES_IV\n                            \n                            \n                                    Static\n                                    Readonly\n                                RANDOM_BYTES_K\n                            \n                            \n                                    Static\n                                    Readonly\n                                TOKEN_ALGORITHM\n                            \n                            \n                                    Static\n                                    Readonly\n                                TOKEN_EXPIRATION\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                askToken\n                            \n                            \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    Public\n                                    Async\n                                decryptToken\n                            \n                            \n                                    Public\n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(backends: BackendsService, identities: IdentitiesService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/management/passwd/passwd.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backends\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identities\n                                                  \n                                                        \n                                                                        IdentitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        askToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    askToken(askToken: AskTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                askToken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(passwdDto: ChangePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwdDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decryptToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decryptToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(data: ResetPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RANDOM_BYTES_IV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RANDOM_BYTES_K\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TOKEN_ALGORITHM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-gcm'\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TOKEN_EXPIRATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3600\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { BadRequestException, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { IdentitiesService } from '../identities/identities.service';\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public static readonly TOKEN_EXPIRATION = 3600;\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    const identity = await this.identities.findOne({ 'inetOrgPerson.uid': passwdDto.uid });\n\n    return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, identity._id, passwdDto, {\n      async: false,\n    });\n  }\n\n  public async askToken(askToken: AskTokenDto): Promise {\n    await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n\n    const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n    const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n    const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n    let ciphertext = cipher.update(\n      JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n      'utf8',\n      'base64',\n    );\n    ciphertext += cipher.final('base64');\n\n    await this.redis.set(\n      ciphertext,\n      JSON.stringify({\n        k,\n        iv,\n        tag: cipher.getAuthTag().toString('base64'),\n      }),\n    );\n    await this.redis.expire(ciphertext, PasswdService.TOKEN_EXPIRATION);\n    return ciphertext;\n  }\n\n  public async decryptToken(token: string): Promise {\n    try {\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n    const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid });\n\n    return await this.backends.executeJob(\n      ActionType.IDENTITY_PASSWORD_RESET,\n      identity._id,\n      { uid: tokenData.uid, newPassword: data.newPassword },\n      {\n        async: false,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MyNewPassword', description: 'New Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/reset-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  token: string;\n\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  @IsString()\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: String,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:22\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:16\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: QueryOptions | null | undefined): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyncIdentitiesDto.html":{"url":"classes/SyncIdentitiesDto.html","title":"class - SyncIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyncIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/sync-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/sync-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class SyncIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tasks.html":{"url":"classes/Tasks.html","title":"class - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/_schemas/tasks.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/tasks/_schemas/tasks.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type TasksDocument = Tasks & Document;\n\n@Schema({ versionKey: false })\nexport class Tasks extends AbstractSchema {\n  @Prop({ type: [Types.ObjectId] })\n  public jobs?: Types.ObjectId[];\n}\n\nexport const TasksSchema = SchemaFactory.createForClass(Tasks);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: TasksService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TasksSchema, Tasks } from './_schemas/tasks.schema';\nimport { TasksService } from './tasks.service';\nimport { TasksController } from './tasks.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Tasks.name,\n        useFactory: () => TasksSchema,\n      },\n    ]),\n  ],\n  providers: [TasksService],\n  controllers: [TasksController],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Tasks } from './_schemas/tasks.schema';\n\n@Injectable()\nexport class TasksService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Tasks.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iv\n                                        \n                                \n                                \n                                        \n                                            k\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        k\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        k:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { BadRequestException, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { IdentitiesService } from '../identities/identities.service';\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public static readonly TOKEN_EXPIRATION = 3600;\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    const identity = await this.identities.findOne({ 'inetOrgPerson.uid': passwdDto.uid });\n\n    return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, identity._id, passwdDto, {\n      async: false,\n    });\n  }\n\n  public async askToken(askToken: AskTokenDto): Promise {\n    await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n\n    const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n    const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n    const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n    let ciphertext = cipher.update(\n      JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n      'utf8',\n      'base64',\n    );\n    ciphertext += cipher.final('base64');\n\n    await this.redis.set(\n      ciphertext,\n      JSON.stringify({\n        k,\n        iv,\n        tag: cipher.getAuthTag().toString('base64'),\n      }),\n    );\n    await this.redis.expire(ciphertext, PasswdService.TOKEN_EXPIRATION);\n    return ciphertext;\n  }\n\n  public async decryptToken(token: string): Promise {\n    try {\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n    const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid });\n\n    return await this.backends.executeJob(\n      ActionType.IDENTITY_PASSWORD_RESET,\n      identity._id,\n      { uid: tokenData.uid, newPassword: data.newPassword },\n      {\n        async: false,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class VerifyTokenDto {\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  @IsString()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInfoInterface.html":{"url":"interfaces/WorkerResultInfoInterface.html","title":"interface - WorkerResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [backendName: string]:        Partial\n\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/_interfaces/worker-result.interface.ts:9\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInterface.html":{"url":"interfaces/WorkerResultInterface.html","title":"interface - WorkerResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         WorkerResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WorkerResultInfoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'attributes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'validations'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  objectClasses: string[];\n\n  @ApiProperty({\n    type: 'object',\n    name: 'attributes',\n  })\n  attributes: { [key: string]: any };\n\n  @ApiProperty({\n    type: 'object',\n    name: 'validations',\n  })\n  validations?: { [key: string]: { [key: string]: string } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @kradihsoy/lt-schematics : ^1.0.13\n        \n            @nestjs-modules/ioredis : ^1.0.1\n        \n            @nestjs/bullmq : ^10.0.1\n        \n            @nestjs/common : ^10.1.3\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.1.3\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.1\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @streamkits/nestjs_module_scrud : ^0.0.18\n        \n            ajv : ^8.12.0\n        \n            ajv-errors : ^3.0.0\n        \n            argon2 : ^0.40.1\n        \n            bullmq : ^4.14.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            helmet : ^7.1.0\n        \n            ioredis : ^5.3.2\n        \n            loglevel : ^1.8.1\n        \n            mongoose : ^8.0.2\n        \n            nest-commander : ^3.12.5\n        \n            nest-winston : ^1.9.4\n        \n            nestjs-request-context : ^3.0.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^11.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            swagger-themes : ^1.4.2\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.11.0\n        \n            winston-mongodb : ^5.1.1\n        \n            winston-transport : ^4.6.0\n        \n            yaml : ^2.3.4\n        \n            yup : ^1.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../action-type.enum.ts)\n                        \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            BackendCodesEnum   (src/.../backend-codes.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                        \n                            JobState   (src/.../state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/backends/_enum/action-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                Value : LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                 PING_TARGET\n                            \n                        \n                        \n                            \n                                Value : PING_TARGET\n                            \n                        \n                        \n                            \n                                 IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_CHANGE\n                            \n                        \n            \n        \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/core/backends/_interfaces/backend-codes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        BackendCodesEnum\n                    \n                \n                    \n                        \n                            BackendCodesEnum\n\n                        \n                    \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 GENERIC_ERROR\n                            \n                        \n                        \n                            \n                                 GENERIC_STOPPED\n                            \n                        \n                        \n                            \n                                 CONNECTION_ERROR\n                            \n                        \n                        \n                            \n                                 INVALID_LOGIN\n                            \n                        \n                        \n                            \n                                 INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 INVALID_JSON_RESPONSE\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n    src/core/jobs/_enums/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobState\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nArchitecture du projet\nFigma\nModules\nOrchestrateur\n\nGère la synchronisation des identités.\nMaintient une base d'identités pour faciliter la synchronisation.\nPermet la configuration de schémas additionnels pour une flexibilité totale.\nExpose des entrypoints via une API REST avec des tokens JWT.\n\nDeamon\n\nDéclenche les scripts backend pour effectuer les opérations de synchronisation.\nUtilise BullMQ et Redis pour communiquer avec l'orchestrateur.\n\nSchémas d'Identité\n\nUtilise le schéma LDAP InetOrgPerson pour stocker les informations dans une base de données MongoDB.\nPossibilité de configurer des schémas additionnels pour des champs différents dans chaque enregistrement.\nPermet de définir le typage, les règles, et la présence des champs dans les identités.\nSchémas optionnels tels que Supann et/ou Renater pour une utilisation fréquente.\n\nTechnologies utilisées\n\nLangages : NodeJS et NestJS.\nCommunication Démon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, mots de passe dans un serveur tiers (OpenLDAP).\nBackends : Scripts système en Python, PowerShell, Perl, Bash, etc.\n\nInterfaces Utilisateur\n\nFrontend : Interfaces permettant la configuration de l'orchestrateur et la manipulation des données à importer.\n\nConclusion\nSésame offre une solution puissante et flexible pour la synchronisation d'identités à partir de diverses sources vers des serveurs cibles. Son architecture modulaire et ses fonctionnalités avancées en font un outil idéal pour les environnements complexes nécessitant une gestion fine des schémas et des processus de synchronisation.\nVariables d'environnements\nExample :#Host Redis\nREDIS_HOST=redis\n#Port Redis\nREDIS_PORT=6379\n# redis credentials (si ces variables n existe pas, pas d'authentification par defaut\nREDIS_USER=monUser\nREDIS_PASSWORD=xx\n#Log level  ( fatal,error,warn,info,debug)\nLOG_LEVEL=info\n#Nom de la queue (bullMQ) Redis\nNAME_QUEUE=backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cn\n                            \n                            \n                                    \n                                departmentNumber\n                            \n                            \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                employeeNumber\n                            \n                            \n                                    \n                                employeeType\n                            \n                            \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                sn\n                            \n                            \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                uid\n                            \n                            \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class inetOrgPerson extends Document {\n  @Prop({ required: true })\n  cn: string;\n\n  @Prop()\n  displayName?: string;\n\n  @Prop()\n  facsimileTelephoneNumber?: string;\n\n  @Prop()\n  givenName?: string;\n\n  @Prop()\n  labeledURI?: string;\n\n  @Prop()\n  mail?: string;\n\n  @Prop()\n  mobile?: string;\n\n  @Prop()\n  postalAddress?: string;\n\n  @Prop()\n  preferredLanguage?: string;\n\n  @Prop({ required: true })\n  sn: string;\n\n  @Prop()\n  telephoneNumber?: string;\n\n  @Prop()\n  title?: string;\n\n  @Prop({ required: true })\n  uid: string;\n\n  @Prop({ required: true })\n  employeeNumber: string;\n\n  @Prop({ required: true })\n  employeeType: string;\n\n  @Prop()\n  departmentNumber: string;\n\n  @Prop()\n  userCertificate?: string;\n\n  @Prop()\n  userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson).index(\n  { employeeNumber: 1, employeeType: 1 },\n  { unique: true },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:89\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeType: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  departmentNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:53\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:69\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:74\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:89\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeType: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  departmentNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeType: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  departmentNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesJsonformsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CliModule\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\nKeyringsService \n\nKeyringsService \n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nIdentitiesService \n\nIdentitiesService \n\nIdentitiesService  -->\n\nIdentitiesModule->IdentitiesService \n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    76 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.33\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            TasksDocument   (src/.../tasks.schema.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/jobs/_schemas/jobs.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/_schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/tasks/_schemas/tasks.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            additionalFieldsPartDtoStub   (src/.../addtionalFields.dto.stub.ts)\n                        \n                        \n                            AdditionalFieldsPartSchema   (src/.../additionalFields.part.schema.ts)\n                        \n                        \n                            AgentsSchema   (src/.../agents.schema.ts)\n                        \n                        \n                            AgentStateList   (src/.../agent-state.enum.ts)\n                        \n                        \n                            ApiBodyDecorator   (src/.../api-body.decorator.ts)\n                        \n                        \n                            ApiCreateDecorator   (src/.../api-create.decorator.ts)\n                        \n                        \n                            ApiCreatedResponseDecorator   (src/.../api-created-response.decorator.ts)\n                        \n                        \n                            ApiDeletedResponseDecorator   (src/.../api-deleted-response.decorator.ts)\n                        \n                        \n                            ApiPaginatedDecorator   (src/.../api-paginated.decorator.ts)\n                        \n                        \n                            ApiPaginatedResponseDecorator   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            ApiReadResponseDecorator   (src/.../api-read-response.decorator.ts)\n                        \n                        \n                            ApiUpdateDecorator   (src/.../api-update.decorator.ts)\n                        \n                        \n                            ApiUpdatedResponseDecorator   (src/.../api-updated-response.decorator.ts)\n                        \n                        \n                            AutoIncrementIDSkipSymbol   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            ConcernedToPartSchema   (src/.../concerned-to.parts.schema.ts)\n                        \n                        \n                            DataPartSchema   (src/.../data.part.schema.ts)\n                        \n                        \n                            DEFAULT_CONTEXT   (src/.../logger.schema.ts)\n                        \n                        \n                            DEFAULT_DATA_TYPE   (src/.../data.part.schema.ts)\n                        \n                        \n                            DEFAULT_INCREMENT   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            DEFAULT_MESSAGE   (src/.../ValidationException.ts)\n                        \n                        \n                            DEFAULT_STATUS_CODE   (src/.../ValidationException.ts)\n                        \n                        \n                            DEFAULT_SYNC_TIMEOUT   (src/.../backends.service.ts)\n                        \n                        \n                            DEFAULT_THIRD_PARTY_AUTH   (src/.../agents.schema.ts)\n                        \n                        \n                            DEFAULT_VALIDATIONS   (src/.../ValidationException.ts)\n                        \n                        \n                            EventEmitterSeparator   (src/.../event-emitter.constant.ts)\n                        \n                        \n                            ExcludeAgentType   (src/.../agent.type.ts)\n                        \n                        \n                            FormFieldPartSchema   (src/.../field.part.schema.ts)\n                        \n                        \n                            FormSchema   (src/.../form.schema.ts)\n                        \n                        \n                            FormSectionPartSchema   (src/.../section.part.schema.ts)\n                        \n                        \n                            FormTypeList   (src/.../types.ts)\n                        \n                        \n                            IdentitiesDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IdentitiesSchema   (src/.../identities.schema.ts)\n                        \n                        \n                            IdentitiesUpdateDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IDSchema   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            inetOrgPersonDtoStub   (src/.../inetOrgPerson.dto.stub.ts)\n                        \n                        \n                            inetOrgPersonSchema   (src/.../inetOrgPerson.part.ts)\n                        \n                        \n                            invalidObjectClassAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidRequiredAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidSchemaStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidTypeAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            JobsSchema   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsSchema   (src/.../keyrings.schema.ts)\n                        \n                        \n                            keys   (src/.../to-plain-and-crush.ts)\n                        \n                        \n                            LoggerSchema   (src/.../logger.schema.ts)\n                        \n                        \n                            LogLevels   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            META_UNPROTECTED   (src/.../public.decorator.ts)\n                        \n                        \n                            MetadataPartSchema   (src/.../metadata.part.schema.ts)\n                        \n                        \n                            missingAttributeAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            ReqIdentity   (src/.../req-identity.decorator.ts)\n                        \n                        \n                            SecurityPartSchema   (src/.../security.part.schema.ts)\n                        \n                        \n                            seedRequestContextId   (src/.../contextId.ts)\n                        \n                        \n                            setLogLevel   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            StatePartSchema   (src/.../state.part.schema.ts)\n                        \n                        \n                            TasksSchema   (src/.../tasks.schema.ts)\n                        \n                        \n                            toPlainAndCrush   (src/.../to-plain-and-crush.ts)\n                        \n                        \n                            validAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            validSchema   (src/.../validSchema.ts)\n                        \n                        \n                            validSchemaStub   (src/.../identities.validation.stub.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/management/identities/_stubs/_parts/addtionalFields.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        additionalFieldsPartDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): additionalFieldsPartDto => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdditionalFieldsPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AdditionalFieldsPart)\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/agents.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AgentsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Agents)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_THIRD_PARTY_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'local'\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AgentStateList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(AgentState)\n  // eslint-disable-next-line\n  .filter((k) => typeof AgentState[k as any] === 'number')\n  // eslint-disable-next-line\n  .map((k) => parseInt(AgentState[k as any], 10))\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-body.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiBodyDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiBodyOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiBody({\n      schema: {\n        $ref: getSchemaPath(model),\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-create.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiCreatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-created-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiCreatedResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.CREATED],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...options,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-deleted-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiDeletedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiQuery({ name: 'limit', type: Number, required: false }),\n    ApiQuery({ name: 'skip', type: Number, required: false }),\n    ApiExtraModels(PaginatedFilterDto),\n    ApiQuery({\n      required: false,\n      name: 'filters',\n      style: 'deepObject',\n      explode: true,\n      type: 'object',\n      schema: {\n        $ref: getSchemaPath(PaginatedFilterDto),\n      },\n    }),\n    ApiPaginatedResponseDecorator(model, options),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PaginatedResponseDto) },\n          {\n            properties: {\n              statusCode: {\n                type: 'number',\n                enum: [HttpStatus.OK],\n              },\n              data: {\n                type: 'array',\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-read-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiReadResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-update.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiUpdatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-updated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  badRequestOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n      ...badRequestOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AutoIncrementIDSkipSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('AutoIncrementIDSkip')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_INCREMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema(\n  {\n    field: String,\n    modelName: String,\n    count: Number,\n  },\n  { versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n    src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConcernedToPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ConcernedToPart)\n                    \n                \n\n\n        \n    \n\n    src/core/logger/_schemas/_parts/data.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DataPart)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_DATA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n\n\n        \n    \n\n    src/core/logger/_schemas/logger.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CONTEXT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/_common/errors/ValidationException.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Validation failed'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_STATUS_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_VALIDATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/core/backends/backends.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYNC_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30_000\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/event-emitter.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EventEmitterSeparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n\n\n        \n    \n\n    src/_common/types/agent.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExcludeAgentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['password']\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/parts/field.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormFieldPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FormFieldPart)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/form.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Form)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/parts/section.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormSectionPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FormSectionPart)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_enum/types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormTypeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(FormTypes)\n  .filter((k) => typeof FormTypes[k as any] === 'number') // eslint-disable-line\n  .map((k) => parseInt(FormTypes[k as any], 10))\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/identities.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IdentitiesUpdateDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_COMPLETE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/identities.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Identities)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/_parts/inetOrgPerson.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    employeeNumber: 'employeeNumber',\n    employeeType: 'employeeType',\n    departmentNumber: 'departmentNumber',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(inetOrgPerson).index(\n  { employeeNumber: 1, employeeType: 1 },\n  { unique: true },\n)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/validations/_stubs/identities.validation.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        invalidObjectClassAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['testClass'],\n    attributes: { supann: { test: 'test' } },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidRequiredAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidSchemaStub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'invalid',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidTypeAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 123,\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        missingAttributeAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['class1'],\n    attributes: {},\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validSchemaStub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    supannEmpId: {\n      type: 'string',\n      description: 'Employee ID',\n    },\n    supannCivilite: {\n      type: 'string',\n      description: 'Title (Mr, Ms, etc.)',\n    },\n    supannBirthName: {\n      type: 'string',\n      description: 'Birth name',\n    },\n  },\n  required: ['supannEmpId', 'supannCivilite'],\n}\n                    \n                \n\n\n        \n    \n\n    src/core/jobs/_schemas/jobs.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Jobs)\n                    \n                \n\n\n        \n    \n\n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        KeyringsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Keyrings)\n                    \n                \n\n\n        \n    \n\n    src/_common/functions/to-plain-and-crush.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (value: TValue): string[] => {\n  if (!value) return [];\n  const getKeys = (nested: any, paths: string[]): string[] => {\n    if (isObject(nested)) {\n      return Object.entries(nested).flatMap(([k, v]) => getKeys(v, [...paths, k]));\n    }\n    if (isArray(nested)) {\n      if (nested.length > 0 && ['string', 'number', 'boolean'].includes(typeof nested[0])) {\n        return nested.flatMap((item) => getKeys(item, paths));\n      }\n      return nested.flatMap((item, i) => getKeys(item, [...paths, `${i}`]));\n    }\n    return [paths.join('.')];\n  };\n  return getKeys(value, []);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toPlainAndCrush\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (value: TValue, options?: ClassTransformOptions): object => {\n  return objectify(\n    keys(instanceToPlain(value, options)),\n    (k) => k,\n    (k) => get(value, k),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogLevels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.levels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLogLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.setLevel\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        META_UNPROTECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'unprotected'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => applyDecorators(SetMetadata(META_UNPROTECTED, true))\n                    \n                \n\n\n        \n    \n\n    src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MetadataPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MetadataPart)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/params/req-identity.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqIdentity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, ctx: ExecutionContext): AgentType => {\n  const request = ctx.switchToHttp().getRequest();\n  return request.user;\n})\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/_parts/security.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SecurityPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SecurityPart)\n                    \n                \n\n\n        \n    \n\n    src/contextId.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seedRequestContextId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplicationContext | ModuleRef, req?: T) => {\n  const contextId = ContextIdFactory.create();\n  app.registerRequestByContextId(\n    {\n      ...req,\n      user: {\n        _id: '000000000000000000000000',\n        ...req?.user,\n      },\n    },\n    contextId,\n  );\n  return contextId;\n}\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/_parts/state.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StatePartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StatePart)\n                    \n                \n\n\n        \n    \n\n    src/core/tasks/_schemas/tasks.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TasksSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Tasks)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/validations/_config/validSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    $schema: {\n      type: 'string',\n      errorMessage: \"Le champ '$schema' doit être une chaîne de caractères.\",\n    },\n    type: {\n      type: 'string',\n      const: 'object',\n      errorMessage: \"Le champ 'type' doit être 'object'.\",\n    },\n    properties: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          properties: {\n            type: {\n              type: 'string',\n              enum: ['string', 'integer', 'number', 'boolean', 'array', 'object', 'date'],\n              errorMessage: \"Chaque propriété doit avoir un 'type' de 'string'.\",\n            },\n            description: {\n              type: 'string',\n              errorMessage: \"La 'description' doit être une chaîne de caractères.\",\n            },\n            format: {\n              type: 'string',\n              enum: ['date', 'email'],\n              errorMessage: \"Le 'format' doit être 'date' ou 'email'.\",\n            },\n            items: {\n              type: 'object',\n              errorMessage: \"Le champ 'required' doit être un booléen.\",\n            },\n            maxItems: {\n              type: 'integer',\n              errorMessage: \"Le nombre maximal d'éléments 'maxItems' doit être un entier.\",\n            },\n            minItems: {\n              type: 'integer',\n              errorMessage: \"Le nombre minimal d'éléments 'minItems' doit être un entier.\",\n            },\n            maxLength: {\n              type: 'integer',\n              errorMessage: \"La longueur maximale 'maxLength' doit être un entier.\",\n            },\n            minLength: {\n              type: 'integer',\n              errorMessage: \"La longueur minimale 'minLength' doit être un entier.\",\n            },\n            maxDate: {\n              type: 'string',\n              errorMessage: \"La date maximale 'maxDate' doit être une date valide.\",\n            },\n            minDate: {\n              type: 'string',\n              errorMessage: \"La date minimale 'minDate' doit être une date valide.\",\n            },\n            max: {\n              type: ['number', 'string'],\n              errorMessage: \"La valeur maximale 'max' doit être un nombre ou une date.\",\n            },\n            min: {\n              type: ['number', 'string'],\n              errorMessage: \"La valeur minimale 'min' doit être un nombre ou une date.\",\n            },\n            exclusiveMinimum: {\n              type: 'number',\n              errorMessage: \"La valeur doit être strictement supérieure à 'exclusiveMinimum'.\",\n            },\n            exclusiveMaximum: {\n              type: 'number',\n              errorMessage: \"La valeur doit être strictement inférieure à 'exclusiveMaximum'.\",\n            },\n            pattern: {\n              type: 'string',\n              errorMessage: \"Le motif 'pattern' doit correspondre à une expression régulière valide.\",\n            },\n            noUnknown: {\n              type: 'boolean',\n              errorMessage: \"L'option 'noUnknown' doit être un booléen.\",\n            },\n            trim: {\n              type: 'boolean',\n              errorMessage: \"L'option 'trim' doit être un booléen.\",\n            },\n            uppercase: {\n              type: 'boolean',\n              errorMessage: \"L'option 'uppercase' doit être un booléen.\",\n            },\n            lowercase: {\n              type: 'boolean',\n              errorMessage: \"L'option 'lowercase' doit être un booléen.\",\n            },\n            positive: {\n              type: 'boolean',\n              errorMessage: \"L'option 'positive' doit être un booléen.\",\n            },\n            negative: {\n              type: 'boolean',\n              errorMessage: \"L'option 'negative' doit être un booléen.\",\n            },\n            truncate: {\n              type: 'boolean',\n              errorMessage: \"L'option 'truncate' doit être un booléen.\",\n            },\n            round: {\n              type: 'boolean',\n              errorMessage: \"L'option 'round' doit être un booléen.\",\n            },\n            constantCase: {\n              type: 'boolean',\n              errorMessage: \"L'option 'constantCase' doit être un booléen.\",\n            },\n            camelCase: {\n              type: 'boolean',\n              errorMessage: \"L'option 'camelCase' doit être un booléen.\",\n            },\n          },\n          required: ['type'],\n          additionalProperties: false,\n          errorMessage: {\n            required: \"Le champ 'type' est requis pour chaque propriété.\",\n            additionalProperties: 'Propriétés supplémentaires non autorisées.',\n          },\n        },\n      },\n      additionalProperties: false,\n      errorMessage: \"Propriétés supplémentaires non autorisées dans 'properties'.\",\n    },\n    required: {\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      errorMessage: \"Le champ 'required' doit être un tableau de chaînes de caractères.\",\n    },\n  },\n  required: ['type'],\n  additionalProperties: false,\n  errorMessage: {\n    required: \"Le champ 'type' est requis.\",\n    additionalProperties: 'Propriétés supplémentaires non autorisées au niveau racine.',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    employeeNumber: 'employeeNumber',\n    employeeType: 'employeeType',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nRéponse Attendue\n\n\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), uid (Identifiant Unique), et employeeNumber + employeeType (Identifiant Identité). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identité\"\n    \"employeeType\": \"Type Identité\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identité\",\n             \"employeeType\": \"Type Identité\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nEndpoint pour la Création d'Identité\nMême procédure pour la validation, mais ici nous avons : \nURL: /management/identities/upsert : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure au moins la données (inetOrgPerson.uid) et (inetOrgPerson.employeeNumber + inetOrgPerson.employeeType), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nDe plus pour une modification, il specifier le state a -1\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identite\",\n    \"employeeType\": \"Type Identite\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Example :curl -X POST \"http:///identities/upsert\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identite\",\n             \"employeeType\": \"Type Identite\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'Réponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nformat: 'email'\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nformat: 'url'\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nCorps de la Requête\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
