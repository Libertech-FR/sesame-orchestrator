var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.187,1,2.539]],["body/classes/AbstractController.html",[0,0.225,1,3.877,2,1.004,3,0.161,4,0.134,5,0.152,6,5.264,7,0.412,8,0.943,9,2.852,10,3.096,11,1.037,12,3.509,13,5.752,14,7.361,15,1.724,16,5.163,17,7.122,18,0.789,19,7.513,20,1.477,21,0.007,22,1.056,23,0.503,24,3.236,25,2.886,26,5.908,27,5.908,28,5.908,29,0.275,30,2.338,31,5.264,32,1.608,33,4.524,34,5.264,35,5.264,36,1.021,37,0.215,38,1.694,39,2.243,40,0.775,41,1.921,42,2.071,43,2.032,44,2.338,45,2.742,46,2.886,47,4.06,48,5.264,49,3.049,50,4.271,51,4.524,52,4.271,53,2.112,54,5.264,55,0.813,56,1.381,57,5.264,58,0.005,59,0.005]],["title/interfaces/AbstractControllerContext.html",[17,4.03,38,1.41]],["body/interfaces/AbstractControllerContext.html",[0,0.236,1,3.209,3,0.169,4,0.142,5,0.16,6,5.541,7,0.434,8,0.974,9,2.557,10,2.854,11,0.974,12,3.599,14,5.541,16,4.273,17,6.929,18,0.564,21,0.007,23,0.379,29,0.281,30,2.46,31,5.541,32,1.692,33,4.761,34,5.541,35,5.541,36,1.075,37,0.222,38,1.783,39,2.945,40,0.872,41,2.522,42,2.18,43,2.139,44,2.46,45,2.886,46,3.038,47,4.273,48,5.541,49,3.209,50,4.495,51,4.761,52,4.495,53,2.223,54,5.541,55,0.856,56,1.453,57,5.541,58,0.005,59,0.005,60,2.626,61,4.495,62,6.218]],["title/classes/AbstractQueueProcessor.html",[0,0.187,63,3.766]],["body/classes/AbstractQueueProcessor.html",[0,0.181,2,0.811,3,0.13,4,0.109,5,0.123,7,0.333,8,0.819,9,2.843,10,2.51,11,1.051,12,2.766,13,4.998,15,1.393,16,4.486,18,0.854,20,1.193,21,0.007,22,0.854,23,0.549,24,2.615,25,2.332,29,0.274,36,0.825,37,0.137,49,2.464,50,3.451,53,2.659,55,1.257,56,1.116,58,0.004,59,0.004,63,4.998,64,4.774,65,1.147,66,4.211,67,4.287,68,7.249,69,6.627,70,4.074,71,7.081,72,2.672,73,5.445,74,1.604,75,3.189,76,3.189,77,1.659,78,1.99,79,6.396,80,5.779,81,4.774,82,4.774,83,4.884,84,4.774,85,4.774,86,4.774,87,3.164,88,2.464,89,2.332,90,2.464,91,2.464,92,2.464,93,4.774,94,1.214,95,4.774,96,4.774,97,3.281,98,4.254,99,4.774,100,2.396,101,3.135,102,2.793,103,3.008,104,6.527,105,4.254,106,2.464,107,4.774,108,2.793,109,4.774,110,4.774,111,5.816,112,1.973,113,6.627,114,4.774,115,4.774,116,3.818,117,4.254,118,4.774]],["title/classes/AbstractSchema.html",[0,0.187,119,2.695]],["body/classes/AbstractSchema.html",[0,0.245,2,1.093,3,0.175,4,0.146,5,0.165,7,0.449,8,0.995,11,1.125,18,0.719,21,0.007,23,0.523,29,0.272,37,0.184,42,2.256,43,2.213,44,2.546,49,3.321,55,1.29,58,0.005,59,0.005,65,1.393,74,2.111,119,4.341,120,6.434,121,3.89,122,2.692,123,4.432,124,3.347,125,6.434,126,7.036,127,1.406,128,3.229,129,7.036,130,6.434,131,3.872,132,1.981,133,2.845,134,1.813,135,6.434]],["title/injectables/AbstractService.html",[66,2.341,136,1.189]],["body/injectables/AbstractService.html",[0,0.183,3,0.131,4,0.109,5,0.123,7,0.335,8,0.823,9,2.846,10,2.922,11,1.053,12,3.356,13,5.02,15,1.402,16,4.506,18,0.831,20,1.201,21,0.007,22,0.859,23,0.488,24,3.591,25,2.348,29,0.266,30,1.901,36,0.83,37,0.188,38,1.378,39,1.824,40,0.77,41,1.562,42,2.616,43,2.567,44,2.953,45,2.23,46,2.348,47,3.302,49,2.48,50,3.474,51,3.679,52,3.474,53,2.344,55,0.902,56,1.744,58,0.004,59,0.004,66,3.121,72,2.382,74,1.834,75,3.646,76,3.916,80,5.795,89,3.916,100,2.412,106,2.48,108,2.811,136,1.584,137,1.942,138,4.282,139,4.793,140,7.476,141,6.65,142,6.556,143,4.805,144,4.805,145,4.805,146,4.805,147,4.805,148,4.805,149,4.805,150,4.805,151,4.805,152,1.985,153,3.937,154,3.679,155,4.282,156,3.937,157,3.745,158,6.114,159,5.842,160,4.282,161,4.282,162,1.862,163,4.282,164,2.48,165,3.156,166,1.453,167,3.937,168,4.282,169,4.282,170,0.966,171,4.282,172,4.282,173,4.282,174,4.282]],["title/interfaces/AbstractServiceContext.html",[38,1.41,80,3.556]],["body/interfaces/AbstractServiceContext.html",[0,0.195,3,0.14,4,0.117,5,0.132,7,0.359,8,0.861,9,2.596,10,2.606,11,1.108,12,3.485,16,3.532,18,0.623,21,0.007,23,0.418,24,2.815,29,0.272,30,2.033,36,0.888,37,0.197,38,1.473,39,2.604,40,0.85,41,2.23,42,2.707,43,2.656,44,3.055,45,2.385,46,2.511,47,3.532,49,2.652,50,3.715,51,3.935,52,3.715,53,2.452,55,0.944,56,1.804,58,0.004,59,0.004,60,2.171,61,3.715,66,2.446,72,1.64,74,1.263,75,2.511,76,4.194,80,5.582,89,4.194,100,2.579,106,2.652,108,3.006,136,1.658,138,4.579,139,4.693,140,6.881,141,4.579,152,2.123,153,4.21,154,3.935,155,4.579,156,6.751,157,3.875,158,6.326,159,6.113,160,4.579,161,4.579,162,1.991,163,4.579,164,2.652,165,3.375,166,1.554,167,4.21,168,4.579,169,4.579,170,1.033,171,4.579,172,4.579,173,4.579,174,4.579,175,5.139]],["title/injectables/AbstractServiceSchema.html",[136,1.189,176,2.982]],["body/injectables/AbstractServiceSchema.html",[0,0.06,3,0.043,4,0.036,5,0.04,7,0.109,8,0.341,9,2.068,10,1.217,11,0.925,12,1.341,13,2.083,15,0.457,16,1.869,18,0.694,20,1.992,21,0.007,22,1.183,23,0.506,24,0.858,25,3.894,29,0.182,36,0.271,37,0.045,41,0.509,42,0.954,43,0.539,49,2.222,53,2.636,55,1.184,56,1.547,58,0.002,59,0.002,65,0.478,66,2.731,67,1.029,72,0.868,74,0.668,75,1.329,76,1.329,77,0.691,78,2.287,80,3.112,87,1.703,88,0.809,89,0.765,90,0.809,91,0.809,92,0.809,94,1.618,98,1.396,105,1.396,106,3.633,119,0.858,121,1.633,122,2.074,123,0.809,124,2.689,133,0.693,134,0.441,136,0.657,137,0.633,154,2.083,162,3.369,164,1.404,170,1.757,176,1.649,177,1.567,178,2.271,179,2.757,180,1.203,181,1.295,182,2.186,183,2.109,184,2.109,185,1.975,186,4.125,187,2.518,188,2.663,189,2.72,190,1.649,191,4.472,192,3.383,193,1.567,194,3.74,195,4.663,196,2.467,197,1.649,198,2.61,199,1.567,200,2.829,201,1.649,202,4.895,203,2.711,204,1.567,205,0.95,206,4.316,207,4.22,208,1.567,209,0.95,210,1.567,211,0.987,212,1.567,213,0.95,214,1.567,215,0.858,216,3.479,217,1.567,218,1.029,219,1.567,220,1.284,221,1.567,222,5.342,223,1.2,224,2.72,225,1.132,226,1.396,227,1.567,228,1.567,229,2.229,230,1.567,231,1.396,232,1.869,233,4.305,234,2.229,235,2.72,236,1.567,237,6.096,238,2.698,239,1.567,240,1.567,241,5.342,242,1.567,243,1.567,244,1.567,245,1.567,246,7.373,247,7.373,248,7.373,249,7.373,250,7.373,251,4.645,252,1.567,253,1.132,254,1.567,255,5.738,256,7.373,257,3.605,258,3.605,259,3.605,260,3.522,261,2.207,262,3.605,263,5.738,264,5.738,265,1.567,266,1.567,267,7.373,268,4.305,269,5.738,270,3.605,271,3.605,272,1.567,273,1.567,274,4.873,275,1.567,276,1.567,277,1.567,278,1.396,279,1.567,280,1.567,281,1.567,282,2.72,283,2.72,284,1.649,285,0.727,286,3.605,287,3.366,288,1.567,289,2.72,290,1.567,291,2.72,292,1.567,293,1.077,294,5.342,295,5.342,296,1.077,297,2.543,298,1.284,299,1.284,300,2.589,301,1.567,302,1.567,303,1.567,304,1.2,305,3.605,306,1.567,307,1.567,308,2.72,309,4.091,310,1.567,311,2.72,312,2.72,313,2.424,314,1.869,315,2.424,316,2.72,317,2.72,318,1.617,319,2.72,320,2.72,321,2.72,322,1.567,323,1.567,324,1.567,325,1.567,326,1.567,327,3.125,328,1.567,329,1.567,330,1.567,331,1.567,332,1.567,333,1.567,334,3.239,335,1.567,336,1.567,337,1.567,338,1.077]],["title/classes/AdditionalFieldsPart.html",[0,0.187,339,3.381]],["body/classes/AdditionalFieldsPart.html",[0,0.231,2,1.035,3,0.166,4,0.139,5,0.156,7,0.425,8,0.961,11,0.961,18,0.761,21,0.007,23,0.563,29,0.243,37,0.22,40,0.907,58,0.005,59,0.005,112,2.533,122,1.909,127,1.831,128,4.204,131,4.294,132,1.875,170,1.225,203,1.909,261,3.981,318,2.477,339,5.263,340,5.427,341,4.589,342,4.589,343,4.093,344,4.971,345,3.737,346,6.09,347,5.029,348,3.164,349,6.09,350,6.09,351,2.792,352,3.056,353,3.056,354,3.143,355,3.143,356,3.236,357,4.99,358,5.427]],["title/classes/AgentCreateQuestions.html",[0,0.187,359,3.556]],["body/classes/AgentCreateQuestions.html",[0,0.278,2,0.783,3,0.125,4,0.105,5,0.118,7,0.322,9,1.394,11,0.917,12,3.076,15,1.345,18,0.663,20,1.825,21,0.007,22,1.672,23,0.504,29,0.25,30,1.824,37,0.209,40,0.978,42,2.234,43,2.192,44,2.522,45,2.958,46,3.113,55,0.877,56,1.707,58,0.004,59,0.004,65,1.12,72,2.034,74,1.566,77,1.62,78,1.705,94,1.856,127,1.596,170,0.927,180,3.23,192,2.324,196,1.997,203,1.445,238,2.072,284,2.796,300,2.45,359,4.607,360,3.778,361,6.373,362,6.373,363,6.373,364,5.221,365,6.507,366,4.455,367,4.611,368,5.877,369,5.221,370,4.413,371,4.611,372,5.221,373,3.954,374,4.611,375,4.015,376,4.601,377,4.38,378,5.414,379,4.38,380,4.015,381,2.796,382,2.796,383,2.796,384,3.53,385,4.428,386,3.53,387,5.983,388,4.38,389,2.561,390,4.88,391,3.169,392,1.927,393,2.754,394,3.728,395,3.728,396,4.015,397,3.778,398,2.253,399,3.778,400,3.778,401,3.028,402,2.088,403,2.576,404,3.169,405,3.169,406,2.697,407,2.905,408,3.169,409,2.697]],["title/classes/Agents.html",[0,0.187,406,2.877]],["body/classes/Agents.html",[0,0.161,2,0.72,3,0.115,4,0.097,5,0.109,7,0.296,8,0.754,11,0.754,18,0.808,21,0.007,23,0.586,29,0.254,37,0.172,39,1.61,40,1.006,55,1.35,58,0.004,59,0.004,65,0.745,112,1.282,119,3.292,124,2.539,127,1.945,128,4.466,131,4.458,132,1.305,170,1.209,203,1.329,261,2.722,318,2.637,345,3.597,348,3.44,351,2.192,352,2.128,353,3.017,354,2.189,355,2.189,366,3.948,370,3.603,373,3.504,393,2.597,406,4.084,410,3.779,411,5.346,412,4.798,413,3.24,414,5.346,415,3.323,416,5.346,417,4.241,418,1.791,419,4.241,420,4.241,421,6.139,422,4.241,423,4.241,424,5.346,425,5.72,426,4.241,427,5.72,428,5.72,429,4.241,430,6.221,431,4.241,432,4.241,433,2.672,434,4.241,435,4.241,436,3.247,437,2.672,438,3.066,439,3.475,440,3.779,441,3.066,442,2.399,443,3.644,444,3.475,445,5.356,446,3.779]],["title/classes/AgentsCommand.html",[0,0.187,408,3.381]],["body/classes/AgentsCommand.html",[0,0.287,2,0.833,3,0.133,4,0.112,5,0.126,7,0.342,9,1.482,11,0.834,12,3.371,15,1.939,18,0.603,20,1.661,21,0.007,22,1.62,23,0.459,29,0.256,30,1.939,37,0.216,40,0.919,42,2.33,43,2.285,44,2.629,45,3.084,46,3.246,55,1.038,56,1.762,58,0.004,59,0.004,65,1.168,72,2.121,74,1.633,77,1.689,78,2.162,94,1.246,170,0.985,180,3.334,192,2.947,196,2.363,203,1.536,238,2.16,284,2.971,300,2.604,359,3.543,360,4.015,364,4.015,366,3.758,368,5.181,369,4.015,370,3.891,372,4.015,373,3.335,375,4.186,376,4.749,377,4.566,378,5.554,379,4.566,380,4.186,381,2.971,382,2.971,383,2.971,384,3.752,385,4.571,386,3.752,387,6.176,388,4.566,389,2.643,390,5.088,391,3.368,392,2.009,393,2.871,394,3.887,395,3.887,396,4.749,397,4.015,398,2.394,399,4.015,400,4.015,401,3.218,402,2.22,403,2.686,404,3.368,405,3.368,406,2.867,407,3.088,408,4.566,409,2.867,447,4.364,448,2.971,449,4.901,450,4.901,451,3.368]],["title/controllers/AgentsController.html",[452,1.725,453,4.03]],["body/controllers/AgentsController.html",[0,0.128,1,2.625,3,0.092,4,0.077,5,0.087,7,0.236,9,1.021,11,0.917,18,0.664,20,1.827,21,0.007,22,1.467,23,0.529,29,0.29,32,0.919,36,0.583,37,0.097,40,0.631,55,1.258,56,1.708,58,0.003,59,0.003,65,0.894,74,1.25,77,1.293,78,2.427,94,1.858,122,2.76,124,3.547,127,1.598,133,1.493,134,0.951,152,1.395,164,1.742,170,1.47,180,2.249,181,1.607,186,3.252,196,2.682,200,2.943,206,1.694,215,1.849,238,2.376,285,3.566,334,2.047,366,1.909,370,1.742,373,1.694,383,4.131,384,2.585,385,3.084,392,1.021,406,1.975,413,1.567,415,1.607,438,2.44,452,1.184,453,4.167,454,1.161,455,3.376,456,1.649,457,4.925,458,4.686,459,4.682,460,2.585,461,4.717,462,4.839,463,3.376,464,5.284,465,3.376,466,5.415,467,2.585,468,3.895,469,5.882,470,5.882,471,4.686,472,3.376,473,3.376,474,2.585,475,3.895,476,3.376,477,3.376,478,2.32,479,5.882,480,5.217,481,5.882,482,5.217,483,2.585,484,3.376,485,4.925,486,4.167,487,3.376,488,3.376,489,1.694,490,2.217,491,2.766,492,2.975,493,3.008,494,1.909,495,2.585,496,5.597,497,2.766,498,5.217,499,1.975,500,2.44,501,3.895,502,4.682,503,2.766,504,1.742,505,2.585,506,2.44,507,2.585,508,2.585,509,2.585,510,2.44,511,2.44,512,2.585,513,2.44,514,2.585,515,3.677,516,2.585,517,2.585,518,2.44,519,3.376,520,2.32,521,2.585,522,1.649,523,1.909,524,3.376,525,2.766,526,2.585,527,2.585,528,3.393,529,2.32,530,3.376,531,5.087,532,3.008,533,3.008,534,3.677,535,2.585,536,4.474,537,4.292,538,4.686,539,3.376,540,4.686,541,2.585,542,1.909,543,3.376,544,2.766,545,3.376,546,2.585]],["title/classes/AgentsCreateCommand.html",[0,0.187,390,3.766]],["body/classes/AgentsCreateCommand.html",[0,0.285,2,0.822,3,0.131,4,0.11,5,0.124,7,0.338,9,1.462,11,0.827,12,3.361,15,1.922,18,0.598,20,1.646,21,0.007,22,1.615,23,0.456,29,0.255,30,1.914,37,0.215,40,0.916,42,2.309,43,2.265,44,2.606,45,3.057,46,3.217,55,1.031,56,1.75,58,0.004,59,0.004,65,1.158,72,2.102,74,1.618,77,1.674,78,2.151,94,1.23,170,0.973,180,3.311,192,2.931,196,2.347,203,1.516,238,2.141,284,2.933,300,2.57,359,3.496,360,3.963,364,3.963,366,3.724,368,5.146,369,3.963,370,3.864,372,3.963,373,3.305,375,4.149,376,4.717,377,5.524,378,5.524,379,4.526,380,4.149,381,2.933,382,2.933,383,2.933,384,3.703,385,5.383,386,3.703,387,6.135,388,4.526,389,2.625,390,5.733,391,5.146,392,1.991,393,2.845,394,3.852,395,3.852,396,4.717,397,3.963,398,2.363,399,3.963,400,3.963,401,3.176,402,2.191,403,2.662,404,3.324,405,3.324,406,2.829,407,3.047,408,3.324,409,2.829,447,4.325,448,2.933,451,3.324,547,4.837,548,4.837]],["title/classes/AgentsCreateDto.html",[0,0.187,383,2.982]],["body/classes/AgentsCreateDto.html",[0,0.305,2,0.723,3,0.116,4,0.097,5,0.109,7,0.297,8,0.756,11,1.099,18,0.829,21,0.007,23,0.587,29,0.264,32,1.158,37,0.2,40,0.99,55,1.362,58,0.004,59,0.004,65,1.337,87,1.683,122,1.333,127,1.996,203,1.333,318,1.198,366,3.955,370,3.609,373,3.509,383,4.24,411,5.354,412,4.139,413,3.246,414,5.354,415,3.328,416,5.354,418,1.797,438,3.075,464,3.075,485,3.075,521,5.354,549,3.485,550,4.994,551,5.729,552,5.055,553,4.253,554,4.253,555,3.79,556,4.253,557,3.023,558,3.485,559,4.253,560,4.612,561,4.253,562,3.485,563,3.485,564,4.253,565,6.025,566,3.79,567,4.253,568,6.025,569,3.79,570,4.253,571,4.253,572,4.253,573,3.075,574,3.257,575,3.323,576,2.33,577,3.54,578,5.474,579,3.715,580,4.139,581,3.955,582,3.795,583,4.406,584,3.635,585,1.463,586,2.135,587,3.485,588,3.485,589,3.075,590,3.075,591,2.195,592,3.485]],["title/classes/AgentsDto.html",[0,0.187,464,3.556]],["body/classes/AgentsDto.html",[0,0.3,2,0.69,3,0.11,4,0.092,5,0.104,7,0.284,8,0.731,11,1.086,18,0.83,21,0.007,23,0.585,29,0.26,32,1.105,37,0.195,40,0.991,55,1.361,58,0.004,59,0.004,65,1.309,87,3.58,122,2.136,127,1.998,203,1.273,318,1.144,366,3.855,370,3.518,373,3.421,383,5.591,411,5.219,412,4.005,413,3.163,414,5.219,415,3.244,416,5.219,418,1.715,438,2.935,464,4.212,485,2.935,521,5.219,549,3.327,550,4.476,551,5.584,552,4.927,555,3.618,557,2.925,558,3.327,560,4.462,562,3.327,563,3.327,565,5.933,566,3.618,568,5.933,569,3.618,573,2.935,574,3.109,575,3.297,576,2.224,577,3.493,578,5.39,579,3.621,580,4.005,581,3.827,582,3.671,583,4.294,584,3.571,585,1.397,586,2.038,587,3.327,588,3.327,589,2.935,590,2.935,591,2.096,592,3.327,593,3.618,594,4.061,595,4.061,596,4.061,597,4.061,598,4.061,599,4.061,600,4.061,601,4.061,602,4.061,603,4.061,604,4.061]],["title/modules/AgentsModule.html",[166,1.487,605,3.231]],["body/modules/AgentsModule.html",[0,0.235,3,0.168,4,0.141,5,0.159,21,0.007,22,1.105,29,0.294,36,1.068,37,0.177,58,0.005,59,0.005,132,1.902,166,2.55,385,5.923,406,3.614,408,4.247,439,6.332,453,6.909,454,2.658,493,5.506,605,6.182,606,2.67,607,2.799,608,2.941,609,2.941,610,2.941,611,3.914,612,4.014,613,5.506,614,5.506,615,5.506,616,3.679,617,2.733,618,2.941,619,6.179,620,3.746,621,5.062,622,6.179,623,6.179,624,3.101,625,4.058,626,6.179,627,3.614,628,5.506]],["title/injectables/AgentsService.html",[136,1.189,385,2.982]],["body/injectables/AgentsService.html",[0,0.116,3,0.083,4,0.069,5,0.078,7,0.212,8,0.589,9,2.463,10,1.936,11,1.105,12,2.134,15,0.887,18,0.807,20,2.29,21,0.007,22,1.488,23,0.569,25,4.448,29,0.244,36,0.525,37,0.087,49,2.423,55,1.268,56,1.097,58,0.003,59,0.003,65,0.825,66,3.072,72,1.499,74,1.154,75,2.294,76,2.294,77,1.194,78,2.465,87,3.485,88,1.569,89,1.485,90,1.569,91,1.569,92,1.569,94,2.071,121,1.377,122,2.186,124,3.247,132,0.936,133,1.344,134,0.856,136,1.135,137,1.229,162,3.569,176,5.281,178,4.066,179,2.423,180,2.537,181,2.235,182,2.847,183,2.747,184,2.747,185,2.572,186,4.329,187,2.747,188,3.238,190,1.843,191,4.868,192,3.392,194,4.329,195,4.08,196,2.655,197,1.843,198,3.913,200,1.615,201,1.843,202,5.248,203,2.853,205,1.843,206,3.984,207,4.644,209,1.843,211,1.915,213,1.843,215,1.665,216,3.913,218,1.996,223,2.327,225,2.197,238,2.268,314,2.089,315,2.708,383,3.913,385,2.847,392,0.919,406,1.778,621,2.49,629,3.04,630,1.996,631,3.04,632,2.708,633,3.084,634,1.996,635,2.089,636,1.996,637,1.996,638,1.996,639,1.996,640,2.089,641,1.996,642,1.996,643,3.04,644,3.04,645,2.49,646,3.04,647,3.04,648,3.04,649,2.708,650,4.695,651,3.04,652,3.04,653,3.04,654,3.04,655,3.04]],["title/classes/AgentsUpdateDto.html",[0,0.187,485,3.556]],["body/classes/AgentsUpdateDto.html",[0,0.332,2,0.921,3,0.147,4,0.123,5,0.139,21,0.007,23,0.565,29,0.284,32,1.476,37,0.227,40,0.989,55,1.32,58,0.005,59,0.005,65,1.479,122,1.699,318,1.528,366,3.066,370,2.798,373,2.721,383,4.309,411,4.151,413,2.516,414,4.151,415,2.58,416,4.151,438,3.919,464,3.919,485,5.137,521,4.151,549,4.441,550,4.667,551,4.441,557,2.721,565,6.083,568,6.083,575,3.448,576,2.97,577,3.774,578,5.888,579,4.213,580,4.884,581,4.667,582,4.478,583,4.995,584,3.957,585,1.865,586,2.721,587,4.441,588,4.441,589,3.919,590,3.919,591,2.798,592,5.823]],["title/classes/AllExceptionFilter.html",[0,0.187,656,4.03]],["body/classes/AllExceptionFilter.html",[0,0.243,2,1.086,3,0.174,4,0.146,5,0.164,7,0.446,10,2.157,11,0.802,18,0.58,20,1.598,21,0.007,22,1.143,23,0.389,29,0.25,36,1.105,37,0.183,56,1.494,58,0.005,59,0.005,67,5.184,77,2.006,94,1.625,152,2.641,170,1.722,389,2.241,402,4.05,403,2.584,461,4.074,528,2.967,656,7.016,657,7.893,658,6.393,659,7.016,660,6.467,661,5.885,662,7.327,663,6.393,664,4.198,665,4.027,666,5.237,667,4.895,668,5.237,669,5.237,670,4.786,671,5.696,672,5.696,673,5.696,674,6.393,675,6.393,676,5.237]],["title/classes/ApiSession.html",[0,0.187,677,3.556]],["body/classes/ApiSession.html",[0,0.232,2,1.037,3,0.166,4,0.139,5,0.157,7,0.426,8,0.962,11,0.766,15,1.781,18,0.823,20,1.525,21,0.006,22,1.091,23,0.552,37,0.175,39,2.316,40,0.979,55,1.353,58,0.005,59,0.005,74,2.397,122,2.628,170,1.227,200,2.637,373,4.208,413,3.892,677,5.543,678,9.25,679,5.438,680,4.208,681,7.668,682,6.061,683,7.668,684,5.438,685,5.438,686,5.438,687,6.103,688,6.103]],["title/controllers/AppController.html",[452,1.725,689,4.03]],["body/controllers/AppController.html",[0,0.244,1,4.079,3,0.174,4,0.146,5,0.165,7,0.447,11,0.804,18,0.582,20,1.601,21,0.007,22,1.145,23,0.39,29,0.291,36,1.107,37,0.184,55,1.265,56,1.497,58,0.005,59,0.005,65,1.389,74,1.574,77,2.009,94,1.629,127,1.4,152,2.647,392,1.937,452,2.771,454,2.203,461,4.832,466,5.014,494,3.623,522,3.13,689,6.475,690,6.406,691,7.043,692,6.406,693,6.406,694,6.196,695,5.708,696,4.905,697,6.406,698,6.406,699,6.406]],["title/modules/AppModule.html",[166,1.487,700,3.766]],["body/modules/AppModule.html",[0,0.175,3,0.125,4,0.105,5,0.118,21,0.007,24,2.518,29,0.305,30,1.819,36,0.794,37,0.132,56,1.074,58,0.004,59,0.004,70,4.68,78,1.951,83,5.862,100,3.191,101,3.019,102,2.689,103,2.896,116,2.689,132,1.415,134,1.792,139,2.442,166,2.204,170,0.924,318,1.295,454,2.187,505,3.519,606,1.986,607,2.082,608,2.188,609,2.188,610,2.188,611,3.384,612,2.188,616,3.027,617,2.033,618,2.188,620,2.787,624,4.145,627,4.265,656,3.766,661,3.159,689,5.973,694,6.176,695,4.096,700,7.024,701,4.096,702,4.096,703,4.096,704,5.97,705,5.97,706,4.597,707,4.096,708,3.766,709,6.024,710,4.597,711,4.597,712,3.323,713,3.019,714,4.096,715,3.519,716,4.597,717,6.359,718,6.497,719,6.359,720,6.359,721,4.597,722,4.597,723,5.21,724,4.597,725,3.766,726,4.869,727,4.597,728,4.096,729,4.096,730,4.096,731,4.096,732,5.011,733,5.666,734,4.096,735,4.096,736,4.096,737,4.096,738,4.096,739,4.096,740,2.896,741,4.096,742,4.096,743,4.096,744,3.323,745,4.096,746,4.096,747,4.096,748,3.766,749,4.096,750,4.597,751,4.597,752,6.446,753,7.01]],["title/injectables/AppService.html",[136,1.189,694,3.556]],["body/injectables/AppService.html",[0,0.21,3,0.15,4,0.125,5,0.142,7,0.385,8,0.902,9,2.843,10,2.697,11,1.102,12,3.529,15,1.608,18,0.833,20,1.378,21,0.007,22,1.284,23,0.535,29,0.285,30,2.181,36,0.953,37,0.158,55,1.209,56,1.288,58,0.005,59,0.005,65,1.263,66,4.366,72,2.293,74,1.766,75,3.51,76,3.51,77,1.826,87,3.351,88,2.845,89,2.693,90,2.845,91,2.845,92,2.845,94,1.401,133,2.438,136,1.736,137,2.228,392,1.667,409,3.224,448,3.342,682,6.122,691,7.547,694,5.194,754,5.512,755,5.821,756,7.185,757,5.512,758,5.512,759,3.788,760,4.22,761,4.22,762,4.22,763,5.512,764,3.984,765,5.512,766,5.512,767,4.22,768,3.788,769,5.512,770,4.516]],["title/classes/AskTokenDto.html",[0,0.187,771,3.766]],["body/classes/AskTokenDto.html",[0,0.303,2,1.103,3,0.176,4,0.148,5,0.167,7,0.453,8,1,18,0.723,21,0.006,23,0.485,29,0.252,32,1.767,37,0.186,40,0.927,58,0.005,59,0.005,127,1.741,157,3.999,504,4.762,575,3.082,577,3.291,583,5.02,585,2.232,771,6.1,772,8.621,773,5.783,774,5.259,775,5.318,776,6.528,777,3.344,778,6.491,779,5.318,780,7.967,781,7.967,782,6.491,783,5.783,784,3.892]],["title/controllers/AuthController.html",[452,1.725,785,4.03]],["body/controllers/AuthController.html",[0,0.165,1,3.15,3,0.118,4,0.099,5,0.111,7,0.303,9,1.31,11,0.962,12,2.628,15,1.265,18,0.696,20,1.917,21,0.007,22,1.371,23,0.511,29,0.287,30,1.715,32,1.18,36,0.749,37,0.124,40,0.791,55,1.292,56,1.792,58,0.004,59,0.004,65,1.073,72,1.383,74,1.065,77,1.552,78,2.475,94,1.949,127,1.676,152,1.79,157,4.324,164,3.646,165,4.64,170,1.421,196,2.757,238,2.493,251,2.731,287,3.845,392,1.31,418,2.578,452,1.52,454,1.491,456,2.117,461,4.812,462,4.572,466,5.231,489,2.175,492,2.535,494,2.451,499,2.535,518,3.133,536,4.64,680,3.063,696,3.319,721,3.133,785,5.001,786,4.334,787,3.551,788,5.439,789,6.104,790,6.104,791,4.334,792,5.921,793,4.334,794,4.334,795,4.334,796,4.451,797,6.104,798,4.334,799,4.334,800,6.104,801,4.334,802,4.334,803,4.133,804,4.334,805,4.334,806,3.862,807,4.334,808,3.57,809,3.133,810,2.628,811,6.295,812,4.334,813,4.334,814,3.319,815,4.334,816,4.334,817,4.334,818,4.334,819,6.283,820,4.334,821,6.104,822,5.439,823,6.104,824,4.334,825,4.334,826,4.334,827,4.334,828,4.334,829,3.862,830,4.334,831,4.334,832,4.334,833,4.334,834,4.334]],["title/injectables/AuthGuard.html",[136,1.189,721,3.556]],["body/injectables/AuthGuard.html",[0,0.23,3,0.164,4,0.138,5,0.155,7,0.422,11,0.956,15,1.763,18,0.692,20,1.904,21,0.007,22,1.362,23,0.464,24,3.309,29,0.286,30,2.39,36,1.044,37,0.173,55,1.244,56,1.412,58,0.005,59,0.005,65,1.339,74,1.484,77,1.937,94,1.536,136,1.841,137,2.442,170,1.215,196,2.388,392,1.826,522,2.951,557,3.824,696,4.625,721,6.033,810,3.662,835,6.041,836,7.619,837,7.619,838,6.041,839,9.226,840,6.041,841,7.619,842,7.809,843,6.041,844,7.437,845,6.041,846,4.949,847,5.382,848,7.619,849,6.041,850,6.041,851,6.041,852,6.041]],["title/modules/AuthModule.html",[166,1.487,853,3.381]],["body/modules/AuthModule.html",[0,0.204,3,0.146,4,0.122,5,0.138,21,0.007,29,0.299,36,0.928,37,0.154,58,0.005,59,0.005,78,1.89,83,5.987,103,3.384,166,2.387,454,2.43,605,5.873,606,2.321,607,2.433,608,2.557,609,2.557,610,2.557,611,3.664,612,3.757,616,3.363,617,2.376,618,2.557,624,4.208,627,4.132,709,6.044,732,4.855,785,6.467,808,5.604,810,3.257,853,6.679,854,4.787,855,4.787,856,4.787,857,4.787,858,5.873,859,6.847,860,6.847,861,5.372,862,5.372,863,4.787,864,4.401,865,5.372,866,4.787,867,5.372,868,4.401,869,3.883,870,5.372,871,5.372,872,4.787,873,5.372,874,5.372,875,5.372,876,5.372]],["title/injectables/AuthService.html",[136,1.189,808,2.877]],["body/injectables/AuthService.html",[0,0.089,3,0.064,4,0.054,5,0.098,7,0.164,8,0.481,9,2.771,10,1.635,11,0.99,12,2.788,15,1.118,18,0.788,20,1.737,21,0.007,22,1.243,23,0.499,25,1.871,29,0.273,30,0.931,36,0.406,37,0.067,40,0.91,42,0.825,43,0.809,44,0.931,53,1.369,55,1.237,56,1.912,58,0.003,59,0.003,65,0.673,66,3.309,67,1.544,68,5.402,72,1.783,73,4.38,74,2.133,75,1.871,76,1.871,77,0.974,78,2.376,87,2.21,88,1.214,89,1.149,90,1.214,91,1.214,92,1.214,94,1.767,100,1.18,101,1.544,102,1.376,106,1.977,112,1.465,122,1.519,123,1.214,136,0.926,137,0.951,157,2.432,162,2.164,164,1.214,165,1.544,170,1.729,192,1.767,196,2.603,200,2.268,206,1.18,238,2.7,287,1.482,300,1.25,348,2.724,370,3.174,373,1.922,385,4.215,386,1.801,392,0.711,393,1.016,398,3.004,402,2.53,406,1.376,448,1.426,542,1.33,621,1.927,645,1.927,680,2.432,760,1.801,761,1.801,762,1.801,764,1.7,767,1.801,768,1.616,788,3.413,792,4.98,796,1.482,803,4.787,808,2.24,814,1.801,829,7.291,869,1.7,877,2.352,878,4.845,879,4.845,880,4.845,881,4.845,882,4.845,883,4.845,884,3.83,885,4.845,886,3.83,887,3.83,888,3.83,889,4.215,890,6.952,891,3.83,892,3.83,893,2.352,894,3.83,895,2.352,896,2.352,897,2.352,898,3.83,899,2.352,900,2.352,901,3.83,902,2.352,903,3.83,904,2.352,905,1.288,906,3.06,907,3.413,908,3.83,909,2.352,910,5.323,911,2.352,912,3.83,913,3.83,914,2.352,915,3.413,916,3.83,917,3.83,918,2.352,919,2.352,920,3.138,921,2.933,922,2.095,923,1.801,924,2.933,925,2.352,926,2.352,927,2.095,928,3.413,929,2.095,930,2.352,931,1.482,932,1.927,933,3.413,934,3.138,935,2.352,936,2.352,937,1.801,938,1.801,939,2.352,940,2.352,941,1.927,942,3.83,943,2.352,944,2.352,945,2.352,946,2.352,947,2.352,948,2.352,949,1.927,950,2.095,951,4.277,952,2.352,953,2.352,954,2.352,955,2.352,956,3.83,957,2.352,958,4.277,959,2.352,960,1.482,961,4.318,962,2.352,963,4.845,964,2.095,965,2.352,966,2.352,967,2.352,968,2.352,969,2.352,970,2.352,971,2.352,972,2.352,973,2.352,974,3.83,975,2.352,976,2.352,977,1.801,978,2.352,979,2.352,980,3.83,981,2.352,982,2.352,983,3.83,984,2.352,985,4.845,986,2.352,987,2.352,988,3.83,989,3.83,990,5.586,991,4.845,992,2.352,993,2.352,994,2.352,995,2.352,996,2.352,997,3.83,998,2.352,999,2.352,1000,2.352,1001,2.352,1002,2.352,1003,2.095,1004,3.83,1005,3.83,1006,2.352,1007,2.352,1008,2.352,1009,2.352]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.41,1010,4.03]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.123,4,0.103,5,0.117,7,0.317,8,0.791,11,1.17,21,0.007,22,1.295,23,0.532,29,0.144,37,0.208,38,1.808,40,0.986,41,2.838,42,1.592,43,1.562,44,1.796,58,0.004,59,0.004,60,1.918,121,2.856,122,2.453,134,1.279,179,4.039,188,3.95,285,2.926,314,5.378,348,3.78,351,1.655,393,1.962,442,2.568,504,3.254,542,3.566,906,3.816,1010,5.166,1011,3.476,1012,3.72,1013,6.354,1014,6.973,1015,6.973,1016,6.973,1017,6.973,1018,6.973,1019,6.737,1020,6.814,1021,5.618,1022,6.412,1023,5.618,1024,6.516,1025,4.558,1026,8.053,1027,5.618,1028,5.618,1029,4.828,1030,5.166,1031,5.618,1032,5.618,1033,5.618,1034,4.828,1035,5.618,1036,4.828,1037,5.618,1038,5.618,1039,5.618,1040,5.618,1041,3.282,1042,3.72,1043,3.72,1044,3.72,1045,4.558]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.41,1044,4.03]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.142,4,0.119,5,0.134,7,0.365,8,0.871,21,0.007,22,1.241,23,0.506,29,0.166,37,0.223,38,1.99,40,0.984,41,2.807,42,1.834,43,1.799,44,2.069,58,0.005,59,0.005,60,2.209,121,2.369,122,2.175,134,1.474,179,4.674,188,4.12,285,2.427,314,4.77,348,3.567,351,2.531,393,2.26,442,2.958,504,2.699,542,2.958,1010,4.285,1011,4.004,1012,4.285,1013,6.46,1014,4.66,1015,4.66,1016,4.66,1017,4.66,1018,4.66,1019,6.382,1020,6.353,1021,4.66,1022,5.686,1023,4.66,1024,7.127,1025,3.78,1026,7.909,1027,4.66,1028,4.66,1029,4.004,1030,4.285,1031,4.66,1032,4.66,1033,4.66,1034,4.004,1035,4.66,1036,4.004,1037,4.66,1038,4.66,1039,4.66,1040,4.66,1041,3.78,1042,4.285,1043,4.285,1044,5.686,1045,5.998]],["title/interfaces/BackendResultInfoInterface.html",[38,1.41,1046,4.03]],["body/interfaces/BackendResultInfoInterface.html",[3,0.184,4,0.154,5,0.174,7,0.472,8,1.025,11,1.144,21,0.006,23,0.535,37,0.234,38,2.341,40,0.94,41,2.963,58,0.005,59,0.005,60,2.854,200,3.135,261,3.974,389,3.196,403,2.731,670,5.658,1046,7.467,1047,5.536,1048,5.174,1049,4.885,1050,4.438,1051,6.021]],["title/interfaces/BackendResultInterface.html",[38,1.41,1049,3.556]],["body/interfaces/BackendResultInterface.html",[3,0.181,4,0.151,5,0.171,7,0.464,8,1.015,11,1.138,21,0.006,23,0.552,37,0.232,38,2.319,40,0.935,41,2.947,58,0.005,59,0.005,60,2.809,200,2.288,261,3.012,389,2.332,403,3.665,670,5.633,1046,7.834,1047,5.449,1048,5.092,1049,5.846,1050,5.954,1051,8.078]],["title/classes/BackendsCommand.html",[0,0.187,1052,3.766]],["body/classes/BackendsCommand.html",[0,0.275,2,0.949,3,0.152,4,0.127,5,0.144,7,0.39,9,1.689,11,0.909,12,3.469,15,2.114,18,0.658,20,1.811,21,0.007,22,1.522,23,0.441,29,0.255,30,2.21,37,0.208,40,0.878,42,2.541,43,2.492,44,2.867,45,3.363,46,3.54,55,1.107,58,0.005,59,0.005,65,1.274,72,1.783,74,1.373,77,1.842,78,2.36,94,1.42,170,1.457,192,3.104,196,2.521,238,1.816,284,3.386,318,1.574,327,3.267,375,4.565,376,5.068,380,4.565,381,3.386,382,3.386,392,2.191,393,3.131,394,4.239,395,4.239,396,5.068,407,3.519,409,3.267,447,4.759,448,3.386,451,3.838,803,3.267,1052,5.548,1053,4.976,1054,5.585,1055,5.585,1056,5.068,1057,4.576,1058,4.976,1059,5.937,1060,4.576,1061,4.976,1062,4.976,1063,3.668]],["title/controllers/BackendsController.html",[452,1.725,1064,4.03]],["body/controllers/BackendsController.html",[0,0.137,3,0.098,4,0.082,5,0.092,7,0.251,9,1.088,10,1.8,11,0.942,15,1.05,18,0.638,20,1.757,21,0.007,22,1.257,23,0.428,25,1.757,29,0.279,32,0.979,36,0.622,37,0.103,39,2.669,40,0.959,41,2.067,53,2.685,55,1.252,56,1.643,58,0.003,59,0.003,72,1.703,73,4.005,74,1.311,77,1.356,78,2.534,94,1.787,100,1.805,101,2.362,102,2.104,106,1.856,108,4.113,116,2.104,127,1.537,133,1.591,134,1.014,152,1.486,170,1.637,196,2.204,200,2.8,225,3.856,238,2.067,318,1.014,389,1.87,398,1.757,402,1.629,403,2.156,442,2.034,452,1.261,454,1.237,456,1.757,461,4.734,462,4.831,466,5.158,489,1.805,492,2.104,499,2.104,518,2.6,665,3.361,696,2.754,822,3.205,844,3.205,846,2.947,905,1.97,921,4.084,924,4.084,1056,4.005,1060,2.947,1063,2.362,1064,4.37,1065,3.597,1066,5.665,1067,6.357,1068,4.753,1069,5.665,1070,3.597,1071,5.761,1072,8.542,1073,6.357,1074,6.691,1075,5.334,1076,3.597,1077,3.597,1078,3.597,1079,3.597,1080,3.597,1081,5.334,1082,3.597,1083,3.597,1084,5.761,1085,5.334,1086,3.597,1087,5.334,1088,5.334,1089,3.597,1090,3.597,1091,3.205,1092,3.597,1093,3.597,1094,7.032,1095,5.334,1096,6.357,1097,3.597,1098,3.597,1099,5.334,1100,3.597,1101,4.084,1102,3.597,1103,3.597,1104,3.597,1105,6.357,1106,6.357,1107,3.597,1108,6.357,1109,3.597,1110,3.597,1111,3.597,1112,3.205,1113,4.753,1114,3.597,1115,4.084,1116,3.597,1117,3.597,1118,3.597,1119,3.597,1120,3.597,1121,3.597,1122,3.597,1123,3.597,1124,3.597,1125,3.597,1126,3.597,1127,5.334,1128,3.597,1129,3.597,1130,4.37,1131,3.597,1132,3.597,1133,3.503,1134,3.597]],["title/modules/BackendsModule.html",[166,1.487,1135,3.381]],["body/modules/BackendsModule.html",[0,0.228,3,0.163,4,0.136,5,0.154,21,0.007,29,0.296,36,1.035,37,0.172,58,0.005,59,0.005,103,3.775,166,2.514,454,2.607,606,2.589,607,2.714,608,2.852,609,2.852,610,2.852,611,3.859,612,3.958,616,3.608,617,2.65,618,2.852,624,3.804,709,5.804,1056,6.13,1064,6.812,1091,5.339,1135,6.716,1136,5.339,1137,5.339,1138,5.339,1139,5.339,1140,6.046,1141,6.327,1142,6.327,1143,5.992,1144,5.992,1145,5.992,1146,5.339,1147,5.339]],["title/injectables/BackendsService.html",[136,1.189,1056,3.099]],["body/injectables/BackendsService.html",[0,0.086,3,0.062,4,0.052,5,0.058,7,0.159,8,0.468,9,2.49,10,1.598,11,0.898,12,2.834,15,1.087,18,0.736,20,1.368,21,0.007,22,0.979,23,0.476,25,2.675,29,0.261,30,0.9,36,0.393,37,0.065,39,1.414,40,0.488,42,0.797,43,0.782,44,0.9,45,1.055,46,1.111,53,3.02,55,1.163,56,1.412,58,0.002,59,0.002,63,5.477,65,0.655,66,2.606,68,4.485,69,3.32,70,2.041,71,3.879,72,1.748,73,2.983,74,0.916,75,1.821,76,1.821,77,0.947,78,2.233,79,1.644,83,1.493,87,2.93,88,1.174,89,1.111,90,1.174,91,1.174,92,1.174,94,1.392,106,2.826,112,0.688,124,2,133,1.006,134,0.641,136,0.901,137,0.919,162,0.881,170,1.817,187,1.33,192,2.7,196,2.034,238,2.906,297,3.405,314,5.475,318,1.702,327,4.332,344,2.678,389,1.66,392,0.688,393,0.983,394,1.33,395,1.33,398,1.111,402,1.03,403,2.623,415,4.139,447,1.493,448,1.379,461,2.443,489,1.141,665,3.449,670,2.87,803,4.457,905,4.275,949,1.863,1056,2.348,1066,4.219,1068,4.219,1069,3.32,1101,2.853,1115,5.247,1130,3.053,1133,2.447,1148,2.026,1149,4.5,1150,4.71,1151,4.71,1152,2.274,1153,2.274,1154,5.67,1155,5.783,1156,6.243,1157,2.274,1158,2.274,1159,3.726,1160,2.274,1161,3.726,1162,2.274,1163,2.274,1164,2.274,1165,2.274,1166,2.274,1167,3.422,1168,3.726,1169,2.026,1170,1.33,1171,2.026,1172,4.665,1173,2.274,1174,2.274,1175,1.863,1176,2.274,1177,4.262,1178,2.274,1179,2.274,1180,2.274,1181,2.026,1182,1.863,1183,2.274,1184,2.274,1185,3.109,1186,2.274,1187,3.32,1188,2.026,1189,2.274,1190,3.726,1191,2.274,1192,3.726,1193,5.475,1194,4.626,1195,5.475,1196,4.485,1197,6.853,1198,5.384,1199,2.274,1200,2.274,1201,4.219,1202,2.274,1203,3.726,1204,2.274,1205,2.274,1206,4.734,1207,4.734,1208,2.274,1209,6.853,1210,2.274,1211,1.863,1212,3.726,1213,3.32,1214,2.026,1215,2.274,1216,3.726,1217,2.274,1218,2.274,1219,3.726,1220,2.274,1221,2.274,1222,2.274,1223,2.274,1224,2.274,1225,2.274,1226,3.726,1227,2.274,1228,4.485,1229,3.726,1230,4.95,1231,3.726,1232,3.726,1233,5.475,1234,5.475,1235,3.726,1236,3.726,1237,3.726,1238,3.726,1239,2.274,1240,2.274,1241,3.726,1242,2.274,1243,1.863,1244,2.561,1245,1.863,1246,2.274,1247,2.274,1248,2.274,1249,3.726,1250,3.726,1251,2.274,1252,2.274,1253,2.274,1254,2.274,1255,1.863,1256,1.563,1257,2.274,1258,2.274,1259,2.026,1260,4.734,1261,2.274,1262,2.026,1263,2.274,1264,3.726,1265,3.726,1266,4.734,1267,2.274,1268,2.274,1269,3.726,1270,2.274,1271,2.274,1272,1.863,1273,2.274,1274,2.274,1275,2.274,1276,2.274,1277,2.274,1278,2.274]],["title/classes/BackendsSyncallCommand.html",[0,0.187,1059,4.03]],["body/classes/BackendsSyncallCommand.html",[0,0.274,2,0.942,3,0.151,4,0.126,5,0.142,7,0.387,9,1.676,11,0.905,12,3.464,15,2.104,18,0.655,20,1.802,21,0.007,22,1.517,23,0.439,29,0.254,30,2.193,37,0.207,40,0.876,42,2.528,43,2.48,44,2.853,45,3.347,46,3.523,55,1.103,58,0.005,59,0.005,65,1.267,72,1.769,74,1.362,77,1.833,78,2.354,94,1.409,170,1.45,192,3.095,196,2.512,238,1.802,284,3.361,318,1.562,327,3.242,375,4.543,376,5.049,380,4.543,381,3.361,382,3.361,392,2.18,393,3.116,394,4.218,395,4.218,396,5.049,407,3.492,409,3.242,447,4.735,448,3.361,451,3.809,803,3.242,1052,4.244,1053,4.939,1056,5.787,1057,4.541,1058,4.939,1059,6.566,1060,4.541,1061,4.939,1062,4.939,1063,3.64,1279,5.543,1280,5.543]],["title/classes/ChangePasswordDto.html",[0,0.187,1281,3.766]],["body/classes/ChangePasswordDto.html",[0,0.284,2,0.998,3,0.16,4,0.134,5,0.151,7,0.41,8,0.939,18,0.748,21,0.006,23,0.58,29,0.237,32,1.598,37,0.168,40,1.001,53,2.676,55,1.309,58,0.005,59,0.005,127,1.801,157,3.756,261,3.39,370,4.477,504,4.624,575,3.101,577,3.403,583,4.715,585,2.02,775,4.811,776,6.132,777,3.407,784,4.024,1281,5.73,1282,8.674,1283,5.233,1284,6.749,1285,8.238,1286,5.873,1287,6.669,1288,6.669,1289,5.873,1290,7.484,1291,6.669,1292,5.873]],["title/modules/CliModule.html",[166,1.487,1293,3.766]],["body/modules/CliModule.html",[0,0.185,3,0.132,4,0.111,5,0.125,21,0.007,29,0.304,36,0.841,37,0.14,56,1.138,58,0.004,59,0.004,70,4.762,78,2.01,83,5.943,100,2.443,101,3.197,102,2.848,103,3.067,116,2.848,132,1.499,134,1.864,166,2.272,170,0.979,318,1.372,359,4.782,408,3.346,605,5.709,606,2.104,607,2.205,608,2.317,609,2.317,610,2.317,611,3.07,612,2.317,616,3.149,617,2.153,618,2.317,620,2.952,624,4.23,627,4.395,628,4.338,661,3.346,707,4.338,708,3.989,709,6.172,712,3.519,713,3.197,714,4.338,715,3.728,728,4.338,729,4.338,730,4.338,731,4.338,732,5.163,733,5.894,734,4.338,735,4.338,736,4.338,737,4.338,738,4.338,739,4.338,740,3.067,741,4.338,742,4.338,743,4.338,744,3.519,745,4.338,746,4.338,747,4.338,748,3.989,749,4.338,853,5.975,858,5.709,866,4.338,1052,3.728,1135,5.975,1293,7.224,1294,4.338,1295,4.869,1296,4.869,1297,4.869,1298,3.519,1299,4.782,1300,4.869,1301,4.869,1302,4.869,1303,4.869,1304,4.869,1305,4.869,1306,4.869]],["title/interfaces/ConfigInstance.html",[38,1.41,1307,4.03]],["body/interfaces/ConfigInstance.html",[3,0.168,4,0.101,5,0.114,7,0.309,8,0.778,21,0.007,23,0.587,29,0.268,32,1.206,37,0.205,38,1.778,40,0.912,42,1.554,43,1.524,44,1.753,45,2.057,46,2.165,47,3.045,58,0.004,59,0.004,60,1.872,102,4.94,112,1.34,132,1.364,134,2.296,157,2.224,162,1.717,192,3.356,287,2.792,318,2.015,344,2.506,348,1.831,418,3.923,557,2.224,712,4.481,713,4.071,715,4.747,740,4.879,755,3.045,796,5.321,810,2.687,864,5.079,868,5.079,869,3.203,931,3.906,941,3.631,960,3.906,977,3.393,1025,3.203,1307,5.858,1308,3.949,1309,5.601,1310,6.919,1311,5.892,1312,6.919,1313,6.9,1314,5.524,1315,4.26,1316,5.079,1317,5.079,1318,4.481,1319,5.524,1320,3.949,1321,3.949,1322,3.949,1323,3.949,1324,3.631,1325,3.949,1326,7.725,1327,3.949,1328,3.949,1329,3.949,1330,3.949,1331,3.949,1332,3.949,1333,3.949,1334,3.949,1335,3.949,1336,3.949,1337,3.949,1338,3.949,1339,3.949,1340,3.949,1341,3.949,1342,3.949,1343,3.949,1344,3.949,1345,3.949,1346,3.949,1347,3.949,1348,3.949,1349,3.949]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.187,1350,3.766]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.341,2,0.998,3,0.16,4,0.134,5,0.151,7,0.41,8,0.939,18,0.787,21,0.007,22,1.551,23,0.584,29,0.261,37,0.236,40,0.96,58,0.005,59,0.005,127,1.896,318,2.109,341,4.099,342,3.217,345,3.33,557,3.756,577,3.893,579,4.377,581,5.41,585,2.02,586,2.947,591,3.863,1350,6.642,1351,4.811,1352,7.107,1353,5.873,1354,5.873,1355,5.873,1356,6.307,1357,5.873,1358,5.873,1359,6.132,1360,3.321,1361,4.811,1362,4.811,1363,6.307,1364,4.036]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.187,1363,3.766]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.343,2,1.018,3,0.163,4,0.136,5,0.154,7,0.418,8,0.951,18,0.755,21,0.007,22,1.562,23,0.57,29,0.263,37,0.238,40,0.976,58,0.005,59,0.005,127,1.817,318,2.136,341,4.786,342,3.282,345,2.422,557,3.007,577,3.908,579,4.418,581,4.978,585,2.061,586,3.007,591,3.912,1350,6.366,1351,4.909,1352,7.159,1356,5.804,1359,6.812,1360,3.388,1361,4.909,1362,4.909,1363,6.691,1364,4.118,1365,5.992,1366,5.992,1367,5.992]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.187,1364,3.381]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.344,2,1.035,3,0.166,4,0.139,5,0.156,7,0.425,8,0.961,18,0.695,21,0.007,22,1.369,23,0.563,29,0.265,37,0.24,40,0.934,58,0.005,59,0.005,127,1.674,318,2.158,341,4.815,342,4.589,345,2.462,557,3.056,577,3.819,579,4.451,581,5.029,585,2.095,586,3.056,591,3.952,1350,6.73,1351,4.99,1352,6.274,1356,5.864,1359,6.274,1360,3.444,1361,4.99,1362,4.99,1363,6.73,1364,5.263,1368,6.274,1369,6.274,1370,6.09,1371,6.09]],["title/classes/ConsoleSession.html",[0,0.187,934,4.03]],["body/classes/ConsoleSession.html",[0,0.24,2,1.072,3,0.172,4,0.144,5,0.162,7,0.441,8,0.983,15,2.484,18,0.808,21,0.006,23,0.519,37,0.181,40,0.962,55,1.342,58,0.005,59,0.005,74,2.368,122,2.668,348,3.517,373,4.273,413,3.952,679,5.623,684,5.623,685,6.977,686,5.623,906,3.952,934,6.415,1372,9.153,1373,6.977,1374,6.435]],["title/controllers/CoreController.html",[452,1.725,1375,4.03]],["body/controllers/CoreController.html",[0,0.271,3,0.194,4,0.162,5,0.183,21,0.006,29,0.284,32,1.941,36,1.232,37,0.204,55,0.981,58,0.006,59,0.006,74,1.753,452,2.5,454,2.453,456,3.484,499,4.172,518,5.155,522,3.484,523,4.033,1375,6.909,1376,7.132,1377,6.354,1378,6.096,1379,6.354,1380,7.132]],["title/modules/CoreModule.html",[166,1.487,704,3.556]],["body/modules/CoreModule.html",[0,0.199,3,0.142,4,0.119,5,0.134,18,0.475,21,0.007,29,0.3,30,2.069,36,0.904,37,0.15,55,0.72,56,1.222,58,0.005,59,0.005,77,1.329,94,1.329,166,2.509,454,2.387,520,4.77,605,5.829,606,2.26,607,2.369,608,2.489,609,2.489,610,2.489,611,3.615,612,2.489,616,3.304,617,2.313,618,2.489,624,3.909,704,7.11,853,6.1,858,5.829,872,4.66,931,3.295,1135,6.1,1141,6.1,1142,6.1,1146,4.66,1147,4.66,1375,6.382,1377,4.66,1378,6.416,1379,4.66,1381,4.66,1382,4.66,1383,4.66,1384,6.416,1385,5.23,1386,6.941,1387,5.23,1388,6.941,1389,4.66,1390,5.23,1391,5.23,1392,5.23,1393,5.23,1394,5.23,1395,4.66,1396,4.66,1397,4.66]],["title/injectables/CoreService.html",[136,1.189,1378,3.556]],["body/injectables/CoreService.html",[0,0.278,3,0.199,4,0.167,5,0.188,15,2.649,18,0.665,21,0.006,29,0.232,36,1.266,37,0.21,55,1.179,58,0.006,59,0.006,136,2.07,137,2.961,1378,6.193,1398,7.326,1399,7.326]],["title/classes/CustomFieldsDto.html",[0,0.187,550,3.231]],["body/classes/CustomFieldsDto.html",[0,0.312,2,1.159,3,0.185,4,0.155,5,0.175,7,0.476,8,1.03,11,1.03,18,0.619,21,0.006,23,0.5,29,0.26,37,0.196,39,2.589,40,0.703,55,1.212,58,0.005,59,0.005,127,1.491,353,4.121,354,3.52,355,3.52,412,6.054,418,2.88,550,5.392,573,4.93,579,4.363,584,3.719,585,2.346,1400,8.21,1401,6.82,1402,6.82,1403,4.803]],["title/classes/DataPart.html",[0,0.187,1404,4.03]],["body/classes/DataPart.html",[0,0.239,2,1.068,3,0.171,4,0.143,5,0.161,7,0.439,8,0.98,11,0.98,18,0.709,21,0.007,23,0.576,29,0.247,37,0.244,40,0.985,55,1.282,58,0.005,59,0.005,65,1.105,112,1.9,121,3.537,122,1.97,127,1.707,128,3.92,131,4.151,132,1.934,134,1.771,170,1.57,318,2.201,345,3.157,348,3.51,351,2.847,352,3.154,389,2.979,1404,6.398,1405,5.599,1406,6.284,1407,7.572,1408,6.284,1409,5.148,1410,5.599]],["title/injectables/DtoValidationPipe.html",[136,1.189,726,3.766]],["body/injectables/DtoValidationPipe.html",[0,0.174,3,0.125,4,0.104,5,0.118,7,0.32,9,1.385,10,1.546,11,0.914,15,1.337,18,0.661,20,1.819,21,0.007,22,1.301,23,0.443,29,0.231,30,1.813,36,0.792,37,0.131,38,1.314,39,1.739,40,0.81,53,1.638,55,1.228,56,1.836,58,0.004,59,0.004,65,1.115,74,1.126,77,1.613,78,1.947,94,1.613,123,4.055,136,1.533,137,1.852,139,4.65,152,1.893,170,1.58,181,2.181,196,1.989,238,1.49,253,3.312,318,1.788,343,4.358,348,1.893,389,2.225,392,1.385,403,2.942,456,3.839,489,2.3,528,2.127,542,3.589,726,5.573,732,3.149,906,3.378,937,3.509,938,3.509,1167,4.587,1244,3.149,1411,7.001,1412,3.754,1413,6.486,1414,5.964,1415,6.992,1416,4.582,1417,4.582,1418,5.199,1419,6.437,1420,4.582,1421,5.654,1422,6.317,1423,4.582,1424,5.199,1425,4.083,1426,4.083,1427,4.083,1428,4.083,1429,4.083,1430,4.083,1431,4.587,1432,4.083,1433,4.361,1434,3.754,1435,2.127,1436,2.3,1437,4.083,1438,3.754,1439,4.083,1440,4.083,1441,4.083,1442,3.754,1443,4.083,1444,4.083,1445,4.083,1446,4.083,1447,5.654,1448,4.083,1449,4.083,1450,4.083,1451,4.083,1452,4.083,1453,4.083,1454,5.654,1455,4.083,1456,4.083,1457,4.083]],["title/classes/ErrorSchemaDto.html",[0,0.187,1458,4.383]],["body/classes/ErrorSchemaDto.html",[0,0.228,2,1.018,3,0.163,4,0.136,5,0.154,7,0.418,8,0.951,11,1.097,18,0.793,21,0.007,23,0.561,29,0.24,32,1.631,36,1.035,37,0.172,39,2.877,40,0.93,42,2.101,43,2.061,44,2.371,55,1.339,58,0.005,59,0.005,127,1.91,203,1.878,343,4.062,389,2.915,393,2.589,418,3.202,489,4.173,528,3.859,575,3.382,1244,4.118,1458,6.754,1459,9.014,1460,5.992,1461,8.315,1462,5.992,1463,5.992,1464,4.909,1465,5.992,1466,5.992,1467,2.781]],["title/classes/ExecuteJobDto.html",[0,0.187,1071,4.03]],["body/classes/ExecuteJobDto.html",[0,0.288,2,1.016,3,0.163,4,0.136,5,0.154,7,0.417,8,0.95,18,0.754,21,0.007,23,0.569,29,0.263,32,1.627,37,0.171,40,0.949,55,1.314,58,0.005,59,0.005,127,1.816,157,3.799,261,3.955,344,4.281,504,4.649,575,3.122,578,4.971,583,4.769,584,3.429,585,2.057,775,4.899,776,6.202,777,2.816,784,2.921,905,4.55,1071,6.202,1154,6.36,1181,5.328,1182,4.899,1228,6.806,1360,3.382,1403,4.428,1468,8.732,1469,5.98,1470,5.98,1471,5.98,1472,5.98,1473,5.98,1474,5.98,1475,5.98]],["title/interfaces/ExecuteJobOptions.html",[38,1.41,1156,4.03]],["body/interfaces/ExecuteJobOptions.html",[3,0.171,4,0.143,5,0.161,7,0.439,8,0.98,11,1.229,21,0.006,23,0.568,29,0.247,37,0.18,38,1.802,40,0.877,41,2.763,58,0.005,59,0.005,60,2.654,78,2.378,97,4.319,124,3.589,133,2.779,134,1.771,557,4.677,1074,7.92,1113,7.92,1115,6.999,1156,6.398,1230,7.283,1256,6.109,1476,6.284,1477,6.284,1478,8.889]],["title/classes/Form.html",[0,0.187,1479,3.381]],["body/classes/Form.html",[0,0.197,2,0.882,3,0.141,4,0.118,5,0.133,7,0.363,8,0.867,18,0.834,21,0.007,23,0.59,29,0.273,37,0.198,39,1.971,40,0.976,41,2.246,58,0.005,59,0.005,65,0.913,112,1.57,119,3.784,127,2.007,128,3.896,131,4.707,132,1.598,170,1.044,203,2.165,261,3.129,348,3.418,351,2.519,352,2.606,353,3.467,354,2.68,355,2.68,418,2.193,433,3.272,437,3.272,777,2.887,1036,3.976,1467,3.206,1479,4.747,1480,4.627,1481,5.611,1482,5.611,1483,4.39,1484,4.891,1485,4.706,1486,3.695,1487,5.193,1488,5.193,1489,5.193,1490,7.373,1491,6.36,1492,5.193,1493,5.193,1494,5.193,1495,5.193,1496,4.872,1497,5.193,1498,3.149,1499,4.255,1500,5.193,1501,5.193,1502,4.627,1503,4.255,1504,4.627]],["title/controllers/FormController.html",[452,1.725,1505,4.03]],["body/controllers/FormController.html",[0,0.131,1,2.673,3,0.094,4,0.079,5,0.089,7,0.241,9,1.046,11,0.927,18,0.671,20,1.846,21,0.007,22,1.478,23,0.545,29,0.289,32,0.941,36,0.598,37,0.099,40,0.641,55,1.254,56,1.726,58,0.003,59,0.003,65,0.91,74,1.273,77,1.317,78,2.437,94,1.878,122,2.774,124,3.57,127,1.614,133,1.529,134,0.974,152,1.429,170,1.485,180,2.291,181,1.646,186,3.3,196,1.624,200,2.961,206,1.736,215,1.894,238,2.401,285,3.428,334,2.097,392,1.046,452,1.213,454,1.19,456,1.69,457,4.489,458,3.966,459,4.268,460,2.648,461,4.736,462,4.868,466,5.435,467,2.648,468,3.966,469,5.936,470,5.936,471,4.755,474,2.648,475,3.966,478,2.377,479,5.936,480,5.28,481,5.936,482,5.28,483,2.648,486,4.244,489,1.736,490,2.271,491,2.833,492,3.03,494,1.956,495,2.648,496,5.655,497,2.833,498,5.28,499,2.023,500,2.5,501,3.966,502,4.74,506,2.5,507,2.648,508,2.648,509,2.648,510,2.5,511,2.5,512,2.648,513,2.5,514,2.648,515,3.745,516,2.648,517,2.648,520,2.377,522,1.69,523,1.956,525,2.833,526,2.648,527,2.648,528,3.428,529,2.377,534,3.745,535,2.648,536,4.529,537,4.345,538,4.755,540,2.648,541,2.648,544,2.833,546,2.648,665,4.345,777,1.286,1479,2.377,1483,1.956,1485,2.097,1486,1.646,1505,4.244,1506,3.459,1507,6.11,1508,3.459,1509,3.459,1510,3.459,1511,3.459,1512,3.459,1513,3.459,1514,3.459,1515,3.459,1516,4.985,1517,3.459,1518,3.459,1519,3.459,1520,3.745,1521,3.082,1522,4.616,1523,3.459,1524,3.459,1525,3.459,1526,3.459,1527,5.18,1528,3.459,1529,3.459,1530,3.459,1531,3.459,1532,3.459]],["title/classes/FormCreateDto.html",[0,0.187,1533,3.766]],["body/classes/FormCreateDto.html",[0,0.316,2,0.798,3,0.128,4,0.107,5,0.121,7,0.328,8,0.81,11,1.079,18,0.827,21,0.007,23,0.587,29,0.279,32,1.279,37,0.211,39,2.451,40,0.968,55,0.889,58,0.004,59,0.004,65,1.396,87,1.859,112,2.6,123,3.332,127,1.99,318,1.819,345,2.981,353,3.24,354,2.425,355,2.425,418,2.727,575,3.255,576,2.574,577,3.439,579,3.43,582,2.96,584,3.597,585,1.616,586,2.358,591,2.425,777,2.744,1360,2.657,1368,3.85,1369,3.85,1403,4.314,1467,2.181,1481,5.332,1482,5.332,1483,4.171,1484,4.647,1485,4.472,1486,3.511,1496,4.171,1498,2.849,1507,3.397,1516,3.397,1533,5.647,1534,3.85,1535,5.003,1536,5.753,1537,4.699,1538,3.85,1539,4.699,1540,4.699,1541,4.699,1542,5.069,1543,4.699,1544,4.699,1545,4.699,1546,4.187,1547,5.647,1548,4.699,1549,4.24,1550,3.397,1551,3.598,1552,3.229,1553,5.741,1554,3.85,1555,3.85,1556,3.85]],["title/classes/FormDto.html",[0,0.187,1507,3.556]],["body/classes/FormDto.html",[0,0.314,2,0.778,3,0.125,4,0.104,5,0.118,7,0.32,8,0.796,11,1.071,18,0.822,21,0.007,23,0.585,29,0.277,32,1.247,37,0.209,39,2.409,40,0.963,55,0.873,58,0.004,59,0.004,65,1.381,87,3.583,112,2.58,123,3.275,127,1.979,318,1.788,345,2.942,353,3.185,354,2.365,355,2.365,418,2.68,575,3.237,576,2.51,577,3.408,579,3.372,582,2.887,584,3.559,585,1.576,586,2.3,591,2.365,777,2.708,1360,2.592,1368,3.754,1369,3.754,1403,4.258,1467,2.127,1481,5.262,1482,5.262,1483,4.117,1484,4.586,1485,4.413,1486,3.465,1496,4.117,1498,2.778,1507,4.587,1516,3.312,1533,7.091,1534,3.754,1535,4.586,1536,5.654,1538,3.754,1542,5.002,1546,4.083,1547,5.573,1549,4.167,1550,3.312,1551,3.509,1552,3.149,1553,5.68,1554,3.754,1555,3.754,1556,3.754,1557,4.582,1558,4.582,1559,4.582,1560,4.582,1561,4.582,1562,4.582,1563,4.582,1564,4.582]],["title/classes/FormFieldDto.html",[0,0.187,1565,4.03]],["body/classes/FormFieldDto.html",[0,0.26,2,0.867,3,0.139,4,0.116,5,0.131,7,0.356,8,0.857,18,0.85,21,0.007,23,0.588,29,0.244,32,1.389,37,0.146,40,0.974,41,2.671,58,0.004,59,0.004,127,2.046,188,3.572,353,4.424,354,2.634,355,2.634,418,3.618,575,3.374,577,3.394,579,4.683,585,1.755,906,3.572,1542,5.288,1565,5.594,1566,5.104,1567,5.288,1568,5.288,1569,5.288,1570,5.288,1571,5.288,1572,5.288,1573,5.288,1574,4.666,1575,5.288,1576,8.565,1577,5.104,1578,5.104,1579,5.104,1580,5.104,1581,5.104,1582,6.828,1583,5.104,1584,5.104,1585,5.104,1586,5.104,1587,5.104,1588,5.563,1589,6.192]],["title/classes/FormFieldPart.html",[0,0.187,1590,4.03]],["body/classes/FormFieldPart.html",[0,0.179,2,0.798,3,0.128,4,0.107,5,0.121,7,0.328,8,0.81,18,0.836,21,0.007,23,0.593,29,0.205,37,0.185,40,0.96,41,2.582,58,0.004,59,0.004,127,2.014,128,4.178,131,4.689,132,1.446,170,0.945,188,3.423,203,2.609,261,4.408,348,3.806,351,2.354,352,2.358,353,4.317,354,2.425,355,2.425,418,3.516,906,3.423,1567,5.069,1568,5.069,1569,5.069,1570,5.069,1571,5.069,1572,5.069,1573,5.069,1574,4.472,1575,5.069,1589,6.017,1590,5.289,1591,4.187,1592,4.699,1593,4.699,1594,4.699,1595,4.699,1596,4.699,1597,4.699,1598,4.699,1599,4.699,1600,4.699,1601,4.699,1602,4.187,1603,4.187]],["title/modules/FormModule.html",[166,1.487,1604,3.766]],["body/modules/FormModule.html",[0,0.245,3,0.175,4,0.147,5,0.166,21,0.007,22,1.153,29,0.292,36,1.114,37,0.185,58,0.005,59,0.005,132,1.985,166,2.599,454,2.729,606,2.786,607,2.92,608,3.069,609,3.069,610,3.069,611,3.99,612,3.069,616,3.777,617,2.852,618,3.069,620,3.91,624,3.236,625,4.235,627,3.772,1479,4.431,1503,6.501,1505,7.043,1520,6.778,1521,5.746,1604,7.18,1605,5.746,1606,5.746,1607,6.448,1608,5.746,1609,6.448,1610,6.448]],["title/classes/FormSectionDto.html",[0,0.187,1553,3.556]],["body/classes/FormSectionDto.html",[0,0.296,2,0.887,3,0.142,4,0.119,5,0.134,7,0.364,8,0.87,11,1.113,18,0.805,21,0.007,23,0.592,29,0.273,32,1.421,37,0.15,40,0.948,58,0.005,59,0.005,112,2.682,127,1.939,318,1.953,345,3.352,418,2.928,575,3.236,577,3.425,579,4.135,584,3.755,585,1.796,586,2.62,591,3.578,777,2.895,1360,2.952,1403,4.553,1483,4.402,1496,4.402,1498,3.165,1538,5.679,1542,3.588,1553,6.413,1565,7.07,1574,4.719,1611,5.221,1612,4.903,1613,6.376,1614,5.221,1615,6.932,1616,5.221,1617,5.221,1618,5.221,1619,5.221,1620,5.221,1621,5.221,1622,5.221,1623,5.221,1624,5.221,1625,5.221,1626,3.997,1627,3.997]],["title/classes/FormSectionPart.html",[0,0.187,1499,4.03]],["body/classes/FormSectionPart.html",[0,0.21,2,0.94,3,0.15,4,0.126,5,0.142,7,0.386,8,0.904,11,1.131,18,0.818,21,0.007,23,0.594,29,0.254,37,0.206,40,0.992,41,2.341,58,0.005,59,0.005,112,1.673,122,1.734,127,1.971,128,4.525,131,4.485,132,1.703,170,1.112,203,1.734,348,2.975,351,2.626,352,2.777,777,2.978,1467,3.343,1483,4.529,1490,8.294,1491,4.533,1496,4.973,1498,3.354,1499,5.9,1502,4.93,1574,4.855,1590,4.533,1612,5.045,1613,6.56,1628,4.93,1629,5.533,1630,5.533,1631,5.533,1632,5.533,1633,5.533,1634,5.533,1635,5.533,1636,4.93]],["title/injectables/FormService.html",[136,1.189,1520,3.556]],["body/injectables/FormService.html",[0,0.124,3,0.088,4,0.074,5,0.084,7,0.227,8,0.62,9,2.562,10,2.018,11,1.12,12,3.203,15,1.442,18,0.818,20,2.313,21,0.007,22,1.515,23,0.574,25,4.496,29,0.24,30,1.286,36,0.562,37,0.093,49,2.551,55,1.267,58,0.003,59,0.003,65,0.869,66,3.181,72,1.578,74,1.47,75,2.415,76,2.415,77,1.256,78,2.462,87,3.533,88,1.677,89,1.588,90,1.677,91,1.677,92,1.677,94,2.112,122,1.874,124,3.198,132,1,134,0.916,136,1.194,137,1.314,162,3.605,176,5.358,178,4.21,179,2.551,180,2.186,181,2.352,182,2.996,183,2.891,184,2.891,185,2.707,186,4.023,187,2.891,188,3.337,190,1.97,191,4.956,192,3.355,194,4.414,195,4.205,196,2.604,197,1.97,198,2.996,200,1.118,201,1.97,202,5.222,203,2.884,205,1.97,206,4.07,207,4.744,209,1.97,211,2.047,213,1.97,215,1.78,216,4.052,218,2.134,392,0.983,630,2.134,633,2.134,634,2.134,635,2.233,636,2.134,637,2.134,638,2.134,639,2.134,640,2.233,641,2.134,642,2.134,1479,2.233,1520,3.573,1608,2.896,1637,3.25,1638,3.25,1639,2.488,1640,2.349,1641,3.25]],["title/classes/FormUpdateDto.html",[0,0.187,1516,3.556]],["body/classes/FormUpdateDto.html",[0,0.337,2,0.969,3,0.155,4,0.13,5,0.147,21,0.007,23,0.523,29,0.293,32,1.552,37,0.233,39,2.788,40,0.954,58,0.005,59,0.005,65,1.508,112,2.456,318,2.07,345,3.284,353,3.686,354,2.943,355,2.943,575,3.383,576,3.124,577,3.668,579,3.903,582,3.593,584,3.886,585,1.962,586,2.862,591,2.943,777,2.121,1360,3.225,1403,4.752,1467,2.647,1481,4.123,1482,4.123,1483,3.225,1484,3.593,1485,3.458,1486,2.715,1496,4.154,1498,3.458,1507,4.123,1516,5.309,1533,5.624,1534,4.672,1535,4.627,1547,5.624,1552,3.919,1553,6.202,1554,4.672,1555,4.672,1556,6.018]],["title/classes/Identities.html",[0,0.187,1172,3.099]],["body/classes/Identities.html",[0,0.206,2,0.921,3,0.147,4,0.123,5,0.139,7,0.378,8,0.892,18,0.764,21,0.007,23,0.571,29,0.289,37,0.227,41,2.736,58,0.005,59,0.005,65,0.953,112,2.397,119,3.893,121,3.219,127,1.839,128,4.223,131,4.268,132,1.669,134,1.528,170,1.09,203,2.485,318,2.002,339,5.449,345,3.402,348,3.704,351,2.591,352,2.721,356,4.764,357,6.496,415,3.774,433,3.415,437,3.415,1170,5.111,1172,4.995,1467,3.906,1642,4.441,1643,4.638,1644,5.207,1645,5.421,1646,6.496,1647,5.421,1648,6.004,1649,5.421,1650,5.421,1651,4.151,1652,5.421,1653,3.726,1654,5.421,1655,4.831,1656,5.421,1657,4.441,1658,4.151,1659,4.831]],["title/controllers/IdentitiesController.html",[452,1.725,1660,3.766]],["body/controllers/IdentitiesController.html",[0,0.088,1,1.953,3,0.063,4,0.053,5,0.06,7,0.162,9,1.45,11,0.904,15,0.676,18,0.654,20,1.801,21,0.007,22,1.432,23,0.517,29,0.281,32,0.631,36,0.4,37,0.066,40,0.713,41,0.753,53,1.353,55,1.241,56,1.872,58,0.002,59,0.002,65,0.665,74,1.179,77,0.962,78,2.412,94,1.832,106,1.953,121,1.049,122,2.659,124,3.383,127,1.575,133,1.025,134,0.653,152,0.957,162,1.466,170,1.499,179,2.475,180,2.121,181,1.103,186,2.548,187,2.805,196,2.659,200,2.949,206,1.163,215,1.269,238,2.424,285,2.226,300,2.01,334,1.405,343,3.52,353,2.779,354,1.196,355,1.196,356,1.231,389,2.752,392,0.7,398,1.848,402,1.714,403,1.939,415,2.904,452,0.812,454,0.797,456,1.132,457,4.002,458,3.672,459,3.296,460,1.774,461,4.677,462,4.894,466,5.391,467,1.774,468,2.897,469,5.517,470,5.517,471,3.672,474,1.774,475,2.897,478,1.592,479,5.871,480,5.289,481,6.011,482,5.289,483,1.774,486,4.536,489,1.163,490,1.521,491,1.898,492,2.213,494,1.31,495,1.774,496,4.672,497,1.898,498,4.672,499,1.355,500,1.675,501,2.897,502,4.193,503,1.898,504,1.196,505,1.774,506,1.675,507,1.774,508,1.774,509,1.774,510,1.675,511,1.675,512,1.774,513,1.675,514,1.774,515,2.735,516,1.774,517,1.774,520,1.592,523,1.31,526,1.774,528,3.84,529,2.6,534,4.411,535,1.774,536,4.3,537,4.125,538,3.672,540,4.239,541,2.897,544,1.898,546,1.774,665,1.46,670,2.294,725,1.898,803,3.238,1149,2.485,1167,2.735,1170,1.355,1172,2.384,1243,1.898,1244,2.6,1435,1.075,1436,1.163,1612,2.384,1643,1.355,1653,1.592,1660,2.897,1661,2.317,1662,4.273,1663,2.317,1664,3.784,1665,2.317,1666,4.993,1667,2.317,1668,4.896,1669,2.317,1670,2.317,1671,2.317,1672,2.317,1673,2.317,1674,2.317,1675,4.536,1676,3.784,1677,2.317,1678,2.064,1679,2.317,1680,2.317,1681,2.317,1682,2.317,1683,2.317,1684,2.064,1685,2.064,1686,2.213,1687,1.898,1688,1.898,1689,2.897,1690,2.064,1691,2.317,1692,1.898,1693,2.317,1694,2.064,1695,3.784,1696,3.1,1697,2.072,1698,3.371,1699,2.897,1700,3.371,1701,3.1,1702,3.371,1703,3.784,1704,2.897,1705,3.784,1706,3.784,1707,3.371,1708,2.213,1709,3.1,1710,3.784,1711,1.756,1712,2.14,1713,2.6,1714,2.485,1715,3.371,1716,2.485,1717,3.371,1718,3.784,1719,2.317,1720,2.317,1721,2.317,1722,3.784,1723,2.317,1724,3.371,1725,1.592,1726,2.317,1727,3.371,1728,3.1,1729,2.317,1730,3.784,1731,2.317,1732,2.317,1733,1.675,1734,1.898,1735,2.317,1736,1.898,1737,1.405,1738,2.317,1739,2.317,1740,2.317,1741,2.317,1742,2.317]],["title/classes/IdentitiesCreateDto.html",[0,0.187,1666,3.556]],["body/classes/IdentitiesCreateDto.html",[0,0.316,2,0.793,3,0.127,4,0.106,5,0.12,7,0.326,8,0.807,11,0.994,18,0.754,21,0.007,23,0.566,29,0.284,32,1.271,37,0.211,40,0.663,41,2.09,55,0.885,58,0.004,59,0.004,65,1.392,87,1.847,112,1.943,123,3.318,127,1.815,203,1.463,341,4.027,342,4.027,345,1.887,356,3.906,415,3.499,575,2.969,576,2.557,584,3.329,585,1.606,586,2.343,777,2.391,784,3.14,1170,4.858,1360,2.641,1403,3.76,1435,3.676,1467,2.984,1535,4.99,1549,4.221,1550,3.375,1551,3.575,1552,3.209,1588,5.314,1643,4.3,1644,4.828,1648,5.052,1651,3.575,1653,3.209,1666,5.314,1668,3.066,1675,3.066,1711,2.984,1712,4.479,1743,3.825,1744,5.899,1745,4.16,1746,5.266,1747,4.647,1748,4.418,1749,4.338,1750,4.418,1751,5.725,1752,5.443,1753,5.443,1754,4.418,1755,3.416,1756,4.647,1757,5.266,1758,5.266,1759,3.416,1760,3.521,1761,4.418,1762,4.669,1763,5.205,1764,4.16,1765,4.669,1766,4.16,1767,4.669,1768,4.16,1769,4.669,1770,3.825,1771,3.825,1772,3.825,1773,3.825,1774,4.05,1775,3.825,1776,3.825,1777,3.825,1778,3.825,1779,3.825]],["title/classes/IdentitiesDto.html",[0,0.187,1668,3.231]],["body/classes/IdentitiesDto.html",[0,0.314,2,0.783,3,0.125,4,0.105,5,0.118,7,0.322,8,0.8,11,0.989,18,0.751,21,0.007,23,0.565,29,0.283,32,1.255,37,0.209,40,0.657,41,2.072,55,0.877,58,0.004,59,0.004,65,1.385,87,3.272,112,1.927,123,3.289,127,1.807,203,1.445,341,4,342,4,345,1.864,356,3.88,415,3.476,575,2.956,576,2.526,584,3.308,585,1.586,586,2.314,777,2.37,784,3.113,1170,4.837,1360,2.608,1403,3.728,1435,3.656,1467,2.958,1535,4.601,1549,4.185,1550,3.333,1551,3.53,1552,3.169,1588,5.279,1643,4.272,1644,4.796,1648,5.019,1651,3.53,1653,3.169,1666,6.336,1668,4.185,1675,3.028,1711,2.958,1712,4.455,1743,3.778,1744,5.877,1745,4.109,1746,5.221,1747,4.607,1748,4.38,1749,4.315,1750,4.38,1751,5.695,1752,5.414,1753,5.414,1754,4.38,1755,3.386,1756,4.607,1757,5.221,1758,5.221,1759,3.386,1760,3.491,1761,4.38,1763,5.185,1764,4.109,1766,4.109,1768,4.109,1770,3.778,1771,3.778,1772,3.778,1773,3.778,1774,4.015,1775,3.778,1776,3.778,1777,3.778,1778,3.778,1779,3.778,1780,4.611,1781,4.611,1782,4.611,1783,4.611]],["title/controllers/IdentitiesJsonFormsController.html",[452,1.725,1784,4.03]],["body/controllers/IdentitiesJsonFormsController.html",[0,0.182,1,3.372,3,0.13,4,0.109,5,0.123,7,0.334,11,1.004,18,0.726,20,2,21,0.007,22,1.43,23,0.487,29,0.253,36,0.826,37,0.137,40,0.768,56,1.87,58,0.004,59,0.004,65,1.149,74,1.175,77,1.661,78,2.517,94,2.034,127,1.749,152,1.976,162,3.246,170,1.609,196,2.824,200,2.752,238,2.601,327,5.271,348,1.976,351,3.227,392,1.446,452,1.677,454,1.645,456,2.336,459,4.491,461,4.888,462,2.705,466,5.346,478,3.286,489,2.4,490,3.141,492,2.797,494,2.705,522,2.336,523,2.705,528,3.713,536,5.254,537,5.04,906,2.22,931,3.013,1041,4.724,1784,5.354,1785,4.782,1786,4.782,1787,5.823,1788,5.823,1789,4.782,1790,6.535,1791,4.782,1792,4.782,1793,6.535,1794,4.782,1795,5.823,1796,4.782,1797,4.261,1798,4.782,1799,4.491,1800,4.261,1801,4.782,1802,4.782,1803,4.782,1804,4.782,1805,4.782,1806,4.782,1807,4.261,1808,4.261,1809,4.261,1810,4.261,1811,4.261,1812,4.261]],["title/modules/IdentitiesJsonformsModule.html",[166,1.487,1813,3.556]],["body/modules/IdentitiesJsonformsModule.html",[0,0.252,3,0.18,4,0.151,5,0.171,21,0.006,29,0.276,36,1.147,37,0.19,58,0.005,59,0.005,166,2.632,454,2.778,606,2.867,607,3.006,608,3.159,609,3.159,610,3.159,611,4.041,612,4.144,616,3.844,617,2.935,618,3.159,1784,7.132,1799,6.775,1800,5.913,1813,6.909,1814,5.913,1815,5.913,1816,5.913,1817,6.636,1818,6.636]],["title/injectables/IdentitiesJsonformsService.html",[136,1.189,1799,3.381]],["body/injectables/IdentitiesJsonformsService.html",[0,0.116,3,0.083,4,0.069,5,0.204,7,0.401,8,0.59,9,2.231,10,1.939,11,0.965,12,2.137,15,1.676,18,0.781,20,1.436,21,0.007,22,1.027,23,0.507,29,0.234,36,0.526,37,0.087,39,2.65,40,0.72,53,2.496,56,1.905,58,0.003,59,0.003,65,0.827,66,3.661,70,2.576,72,2.705,74,1.156,75,2.298,76,2.298,77,1.196,78,2.302,87,2.556,88,1.572,89,1.488,90,1.572,91,1.572,92,1.572,94,1.775,106,2.427,112,0.921,136,1.136,137,1.231,162,2.226,170,1.9,185,2.576,192,1.715,196,2.49,200,1.618,234,2.495,318,1.325,327,2.751,345,1.901,348,1.258,351,3.177,389,2.014,392,0.921,760,2.332,761,2.332,762,2.332,767,4.399,768,3.948,906,1.414,931,4.649,932,2.495,933,2.714,950,2.714,1041,4.153,1045,3.4,1424,3.853,1574,3.483,1733,4.153,1787,5.756,1799,3.232,1807,2.714,1819,3.046,1820,6.242,1821,5.119,1822,5.756,1823,4.703,1824,4.703,1825,3.046,1826,4.191,1827,3.046,1828,3.046,1829,3.046,1830,3.046,1831,4.703,1832,3.046,1833,4.191,1834,3.046,1835,2.714,1836,3.046,1837,2.093,1838,2.714,1839,3.773,1840,2.332,1841,2.714,1842,2.714,1843,5.745,1844,4.191,1845,6.575,1846,3.046,1847,6.575,1848,3.046,1849,2.714,1850,2.714,1851,3.046,1852,4.703,1853,6.854,1854,3.046,1855,4.703,1856,2.714,1857,3.046,1858,5.119,1859,6.46,1860,3.046,1861,5.745,1862,3.046,1863,4.703,1864,4.703,1865,4.703,1866,4.703,1867,6.982,1868,3.046,1869,3.046,1870,3.046,1871,3.046,1872,2.495,1873,3.046,1874,3.046,1875,4.703,1876,2.332,1877,4.703,1878,3.046,1879,3.046,1880,3.046,1881,3.046,1882,3.046,1883,2.714,1884,3.046,1885,3.046,1886,2,1887,3.046,1888,4.703,1889,3.046,1890,4.703,1891,3.046,1892,3.046,1893,3.046,1894,3.046,1895,3.046,1896,2.714,1897,2.714,1898,6.221,1899,4.191,1900,5.756,1901,4.191,1902,3.046,1903,2.495,1904,3.046,1905,6.046,1906,3.046,1907,3.046,1908,3.046,1909,3.046,1910,4.191,1911,3.046,1912,2.714,1913,2.714,1914,3.046,1915,2.714,1916,3.046,1917,3.046,1918,3.046]],["title/modules/IdentitiesModule.html",[166,1.487,1140,3.231]],["body/modules/IdentitiesModule.html",[0,0.212,3,0.151,4,0.127,5,0.143,21,0.007,22,0.997,29,0.303,30,2.206,36,0.963,37,0.16,58,0.005,59,0.005,132,1.716,166,2.43,454,2.489,606,2.409,607,2.525,608,2.653,609,2.653,610,2.653,611,3.73,612,3.825,616,3.445,617,2.465,618,2.653,620,3.38,624,3.632,625,3.661,627,3.261,718,6.449,725,4.567,732,3.831,752,4.567,753,4.967,1140,6.287,1149,6.325,1172,3.512,1658,5.541,1660,6.153,1685,4.967,1686,5.38,1687,4.567,1688,4.567,1689,5.541,1690,4.967,1799,6.321,1813,5.232,1919,4.967,1920,4.967,1921,4.967,1922,5.574,1923,5.574,1924,4.974,1925,5.574,1926,5.574,1927,5.574,1928,5.574]],["title/injectables/IdentitiesService.html",[136,1.189,1149,3.231]],["body/injectables/IdentitiesService.html",[0,0.08,3,0.057,4,0.048,5,0.054,7,0.146,8,0.437,9,2.24,10,1.758,11,1.04,12,1.663,15,1.016,18,0.761,20,2.188,21,0.007,22,1.39,23,0.546,25,4.213,29,0.228,36,0.362,37,0.06,40,0.461,49,1.798,53,2.066,55,1.227,56,1.457,58,0.002,59,0.002,65,0.612,66,2.479,70,1.908,72,1.845,74,1.099,75,1.702,76,1.702,77,0.885,78,2.385,87,3.188,88,1.081,89,1.024,90,1.081,91,1.081,92,1.081,94,1.933,106,3.219,119,1.148,121,1.578,122,2.072,124,3.211,132,0.645,133,1.977,134,0.59,136,0.842,137,0.847,162,3.368,164,3.412,170,1.49,176,4.804,178,3.281,179,1.798,180,1.977,181,2.479,182,2.112,183,2.037,184,2.037,185,1.908,186,4.04,187,3.381,188,2.683,190,1.27,191,4.048,192,3.326,194,3.936,195,3.046,196,2.563,197,1.27,198,3.157,200,2.274,201,1.27,202,4.902,203,2.68,205,1.27,206,3.473,207,4.048,209,1.27,211,1.32,213,1.27,215,1.148,216,3.157,223,1.604,225,1.515,234,4.735,238,2.25,251,3.281,253,2.518,300,1.851,309,3.987,314,1.44,318,0.981,334,2.112,343,2.544,351,1.63,392,0.634,398,1.702,402,1.578,403,3.513,415,3.146,433,1.32,630,1.376,633,1.376,634,1.376,636,1.376,637,1.376,638,1.376,639,1.376,641,1.376,642,1.376,649,1.867,803,4.048,949,1.717,1063,3.42,1149,2.287,1170,3.046,1172,3.642,1201,1.867,1243,2.854,1245,2.854,1436,3.901,1643,3.046,1653,1.44,1662,3.983,1678,1.867,1686,3.046,1687,1.717,1688,1.717,1694,3.983,1696,1.717,1704,2.667,1725,3.579,1728,2.854,1734,4.267,1839,2.936,1840,1.604,1929,2.095,1930,3.483,1931,2.095,1932,2.095,1933,2.095,1934,3.483,1935,3.764,1936,6.237,1937,2.095,1938,2.095,1939,2.095,1940,2.095,1941,2.095,1942,3.072,1943,2.095,1944,5.78,1945,5.78,1946,2.095,1947,2.095,1948,2.095,1949,4.47,1950,5.78,1951,3.483,1952,2.095,1953,3.483,1954,3.483,1955,2.095,1956,2.095,1957,2.095,1958,1.226,1959,1.717,1960,2.095,1961,2.095,1962,3.483,1963,3.483,1964,2.095,1965,2.095,1966,3.483,1967,2.095,1968,3.483,1969,2.095,1970,3.483,1971,2.095,1972,3.104,1973,3.483,1974,2.095,1975,2.095,1976,5.78,1977,5.78,1978,3.483,1979,4.47,1980,2.095,1981,3.483,1982,3.483,1983,3.483,1984,3.483,1985,3.483,1986,3.483,1987,3.483,1988,3.483,1989,4.47,1990,3.483,1991,2.095,1992,2.095,1993,1.717]],["title/classes/IdentitiesUpdateDto.html",[0,0.187,1675,3.231]],["body/classes/IdentitiesUpdateDto.html",[0,0.334,2,0.94,3,0.15,4,0.126,5,0.142,21,0.007,23,0.536,29,0.295,32,1.506,37,0.23,40,0.571,41,1.799,58,0.005,59,0.005,65,1.491,112,1.673,341,3.945,342,3.945,345,2.236,356,2.94,415,2.633,575,3.144,576,3.031,584,3.627,585,1.903,586,2.777,777,2.058,784,2.703,1170,4.684,1360,3.129,1403,4.213,1435,3.343,1467,3.343,1535,4.537,1552,3.802,1588,5.788,1643,3.236,1644,3.633,1648,4.95,1651,4.236,1653,3.802,1666,5.206,1668,3.633,1675,4.73,1711,2.568,1712,4.073,1743,4.533,1744,5.829,1746,4.533,1747,3.999,1748,3.802,1749,3.945,1750,3.802,1751,5.206,1752,4.95,1753,4.95,1754,3.802,1755,2.94,1756,3.999,1757,4.533,1758,4.533,1759,2.94,1760,3.031,1761,3.802,1763,5.142,1770,4.533,1771,4.533,1772,4.533,1773,4.533,1774,4.537,1775,4.533,1776,4.533,1777,4.533,1778,4.533,1779,5.9]],["title/controllers/IdentitiesValidationController.html",[452,1.725,1994,4.03]],["body/controllers/IdentitiesValidationController.html",[0,0.187,1,3.441,3,0.134,4,0.112,5,0.127,7,0.344,11,0.949,18,0.686,20,1.889,21,0.007,22,1.351,23,0.46,29,0.283,32,1.341,36,0.851,37,0.141,55,1.04,56,1.893,58,0.004,59,0.004,65,1.172,74,1.21,77,1.695,78,2.46,94,1.921,127,1.652,152,2.035,170,1.52,196,2.734,200,2.786,238,2.457,327,4.737,339,5.566,343,2.406,351,2.756,353,2.472,354,2.542,355,2.542,389,1.727,392,1.489,398,2.406,402,2.231,403,1.991,409,2.881,452,1.727,454,1.694,456,2.406,459,4.582,461,4.798,462,4.786,466,5.307,478,3.385,489,2.472,490,3.235,492,4.421,494,2.785,499,2.881,523,2.785,527,3.771,528,3.759,529,3.385,536,4.378,537,4.2,1244,3.385,1686,3.9,1692,4.035,1724,4.389,1727,4.389,1728,4.035,1788,5.941,1795,5.941,1797,4.389,1808,4.389,1809,4.389,1810,4.389,1811,4.389,1812,4.389,1994,5.462,1995,4.925,1996,4.925,1997,5.463,1998,4.925,1999,4.925,2000,4.925,2001,4.925,2002,4.389,2003,4.389,2004,4.925,2005,4.925]],["title/classes/IdentitiesValidationFilter.html",[0,0.187,1689,3.766]],["body/classes/IdentitiesValidationFilter.html",[0,0.241,2,1.079,3,0.173,4,0.145,5,0.163,7,0.443,10,2.143,11,0.797,18,0.577,20,1.587,21,0.007,22,1.135,23,0.387,29,0.271,36,1.098,37,0.182,56,1.484,58,0.005,59,0.005,67,5.163,77,1.998,94,1.615,152,2.624,170,1.717,343,3.103,389,2.227,402,3.867,461,4.057,528,2.948,659,6.995,660,6.441,661,5.868,662,7.31,664,4.171,666,5.204,667,4.863,668,5.204,669,5.204,670,4.766,672,5.659,1689,6.538,1840,4.863,2006,7.862,2007,5.659,2008,6.45,2009,6.351,2010,6.351,2011,6.351,2012,6.351,2013,6.351]],["title/modules/IdentitiesValidationModule.html",[166,1.487,1924,3.381]],["body/modules/IdentitiesValidationModule.html",[0,0.252,3,0.18,4,0.151,5,0.171,21,0.006,29,0.276,36,1.147,37,0.19,58,0.005,59,0.005,166,2.632,454,2.778,606,2.867,607,3.006,608,3.159,609,3.159,610,3.159,611,4.041,612,4.144,616,3.844,617,2.935,618,3.159,1686,5.767,1924,6.568,1994,7.132,2003,5.913,2014,5.913,2015,5.913,2016,6.636,2017,6.636,2018,6.636]],["title/injectables/IdentitiesValidationService.html",[136,1.189,1686,2.877]],["body/injectables/IdentitiesValidationService.html",[0,0.104,2,0.737,3,0.075,4,0.151,5,0.171,7,0.192,8,0.545,10,2.499,11,0.767,15,1.57,18,0.717,20,1.527,21,0.007,22,1.092,23,0.405,29,0.261,36,0.475,37,0.079,39,3.07,40,0.792,52,1.987,53,2.528,55,0.74,56,1.846,58,0.003,59,0.003,70,1.506,72,2.678,77,1.103,78,2.245,94,1.882,106,2.776,111,2.449,112,1.312,136,1.049,137,1.111,162,2.74,170,1.882,181,1.308,185,2.378,196,2.63,200,2.432,237,3.868,238,1.411,251,2.735,261,1.245,278,2.449,318,2.226,327,2.539,339,4.199,341,2.378,342,1.506,343,2.628,348,1.136,351,2.699,389,2.332,398,1.343,402,1.245,403,2.174,490,3.533,591,2.24,760,2.105,761,2.105,764,1.987,767,3.324,768,2.983,777,2.001,906,2.497,931,3.85,932,2.252,1029,3.324,1101,2.105,1172,3.85,1272,4.407,1364,3.697,1422,4.119,1431,3.889,1435,1.276,1436,3.716,1612,3.85,1686,2.539,1697,3.347,1698,3.868,1699,3.324,1712,1.555,1713,1.889,1714,1.805,1733,1.987,1759,2.307,1820,6.193,1821,4.793,1822,5.445,1826,3.868,1833,3.868,1835,2.449,1837,1.889,1838,2.449,1839,3.533,1840,2.105,1841,2.449,1842,2.449,1845,5.445,1847,5.445,1849,2.449,1850,2.449,1853,4.793,1856,2.449,1858,3.868,1883,2.449,1896,2.449,1897,2.449,1898,3.868,1899,2.449,1900,3.868,1901,2.449,1905,5.006,1910,2.449,1912,2.449,1913,2.449,1915,2.449,1942,2.983,1997,5.71,2002,2.449,2019,2.749,2020,4.341,2021,4.341,2022,4.341,2023,3.868,2024,4.341,2025,2.749,2026,2.749,2027,4.341,2028,2.749,2029,3.868,2030,2.749,2031,6.11,2032,6.11,2033,4.341,2034,4.341,2035,3.868,2036,7.585,2037,2.749,2038,4.341,2039,4.341,2040,2.749,2041,2.749,2042,2.749,2043,2.749,2044,2.749,2045,2.252,2046,2.749,2047,2.449,2048,2.749,2049,2.749,2050,2.749,2051,2.749,2052,2.749,2053,2.749,2054,6.11,2055,2.749,2056,7.674,2057,6.11,2058,2.749,2059,2.749,2060,2.252,2061,2.749,2062,2.632,2063,2.749,2064,5.928,2065,2.749,2066,1.987,2067,1.608,2068,1.889,2069,2.449,2070,2.449,2071,1.889,2072,2.749,2073,2.449,2074,2.749,2075,2.749,2076,4.341,2077,2.749,2078,1.987,2079,4.341,2080,2.749,2081,4.341,2082,3.868,2083,2.749,2084,2.749,2085,2.749,2086,2.749,2087,2.749,2088,2.449,2089,2.749,2090,2.749,2091,2.749,2092,2.749,2093,2.749,2094,2.749,2095,2.749,2096,2.749,2097,2.449,2098,2.749,2099,2.749,2100,2.252,2101,2.449,2102,2.749,2103,2.749,2104,2.749,2105,2.749,2106,2.749,2107,2.749,2108,2.749]],["title/interfaces/InternalLogOptions.html",[38,1.41,2109,3.766]],["body/interfaces/InternalLogOptions.html",[0,0.13,3,0.093,4,0.078,5,0.088,7,0.239,8,0.645,9,1.035,11,0.861,21,0.007,23,0.376,24,4.388,29,0.217,36,0.591,37,0.197,38,1.474,40,0.957,53,1.224,55,0.707,56,1.805,58,0.003,59,0.003,60,1.446,65,0.602,72,1.092,78,0.916,108,3.61,116,4.013,123,2.653,132,1.053,134,1.739,136,1.242,139,4.478,152,1.414,157,1.718,162,2.992,164,2.653,170,1.829,192,3.417,200,1.768,238,1.113,260,5.582,261,3.628,285,3.584,293,5.053,296,2.352,297,1.629,389,2.889,392,1.035,398,2.511,402,2.328,403,1.383,443,2.075,522,1.672,713,3.375,740,2.156,905,1.875,951,5.253,1315,4.241,1374,4.461,1433,2.352,1467,1.589,1725,5.505,1876,2.621,1886,2.248,2109,4.726,2110,2.621,2111,5.621,2112,5.253,2113,4.211,2114,3.935,2115,3.935,2116,3.935,2117,2.621,2118,2.804,2119,2.804,2120,2.804,2121,3.935,2122,5.056,2123,2.804,2124,2.804,2125,2.804,2126,2.804,2127,2.804,2128,2.804,2129,2.804,2130,2.804,2131,2.804,2132,7.64,2133,4.211,2134,2.804,2135,7.6,2136,6.327,2137,6.327,2138,6.327,2139,6.327,2140,5.957,2141,6.327,2142,2.804,2143,2.804,2144,2.804,2145,2.804,2146,2.804,2147,3.715,2148,2.804,2149,2.804,2150,2.804,2151,2.804,2152,2.804,2153,2.804,2154,2.804,2155,2.804,2156,2.804,2157,2.804,2158,4.241,2159,4.211,2160,5.056,2161,2.804,2162,2.804,2163,2.804,2164,2.804,2165,2.804,2166,2.804,2167,2.804,2168,2.804,2169,2.804]],["title/injectables/InternalLogger.html",[136,1.189,2117,3.766]],["body/injectables/InternalLogger.html",[0,0.111,3,0.08,4,0.067,5,0.075,7,0.205,8,0.573,9,1.695,11,0.985,15,0.855,18,0.748,20,1.961,21,0.007,22,1.402,23,0.511,24,4.155,25,1.432,29,0.201,36,0.507,37,0.181,38,1.309,40,0.919,53,1.048,55,0.944,56,1.698,58,0.003,59,0.003,65,0.802,72,1.79,77,1.16,78,1.5,94,1.994,108,3.28,116,4.437,123,2.356,132,0.902,134,1.58,136,1.103,137,1.185,139,3.363,152,1.211,157,1.471,162,2.815,164,2.356,170,1.776,192,3.374,200,1.57,238,0.953,260,5.251,261,3.435,285,3.372,293,3.137,296,2.014,297,1.395,389,3.065,392,0.886,398,2.23,402,2.068,403,2.266,418,1.928,443,4.756,522,1.432,713,2.998,740,1.847,905,2.501,951,4.846,1315,3.853,1374,4.053,1433,3.853,1467,1.361,1725,5.213,1876,4.846,1886,1.925,2109,4.846,2110,2.244,2111,2.402,2112,3.495,2113,4.594,2114,3.495,2115,4.846,2116,3.495,2117,3.495,2118,3.74,2119,2.402,2120,2.402,2121,3.495,2122,4.594,2123,2.402,2124,2.402,2125,2.402,2126,2.402,2127,2.402,2128,2.402,2129,2.402,2130,2.402,2131,3.74,2132,7.815,2133,3.74,2134,2.402,2135,7.413,2136,5.952,2137,5.952,2138,5.952,2139,5.952,2140,5.671,2141,5.952,2142,2.402,2143,3.74,2144,4.594,2145,2.402,2146,3.74,2147,4.575,2148,2.402,2149,3.74,2150,2.402,2151,3.74,2152,4.594,2153,2.402,2154,3.74,2155,4.594,2156,2.402,2157,4.594,2158,3.853,2159,3.74,2160,4.594,2161,2.402,2162,2.402,2163,2.402,2164,2.402,2165,2.402,2166,2.402,2167,2.402,2168,2.402,2169,2.402,2170,2.931,2171,4.565,2172,2.931,2173,2.931,2174,2.931,2175,2.931,2176,2.931,2177,2.931,2178,2.931,2179,2.931,2180,2.931]],["title/interfaces/InternalLoggerOptions.html",[38,1.41,2115,3.766]],["body/interfaces/InternalLoggerOptions.html",[0,0.131,3,0.094,4,0.079,5,0.089,7,0.241,8,0.65,9,1.046,21,0.007,23,0.42,24,4.403,29,0.219,36,0.598,37,0.198,38,1.485,40,0.947,53,1.236,55,0.713,56,1.812,58,0.003,59,0.003,60,1.461,65,0.608,72,1.104,78,0.925,108,3.633,116,4.034,123,2.673,132,1.065,134,2.184,136,1.252,139,3.664,152,1.429,157,1.736,162,3.004,164,2.673,170,1.832,192,3.421,200,1.782,238,1.124,260,5.604,261,3.64,285,3.598,293,3.56,296,2.377,297,1.646,389,2.898,392,1.046,398,2.531,402,2.346,403,1.398,418,2.188,443,2.097,522,1.69,713,3.402,740,2.179,905,1.894,951,5.28,1315,5.681,1374,4.489,1433,2.377,1467,1.605,1725,5.524,1876,2.648,1886,2.271,2109,3.966,2110,2.648,2111,2.833,2112,3.966,2113,4.244,2114,3.966,2115,4.755,2116,3.966,2117,2.648,2118,2.833,2119,2.833,2120,2.833,2121,3.966,2122,5.088,2123,2.833,2124,2.833,2125,2.833,2126,2.833,2127,2.833,2128,2.833,2129,2.833,2130,2.833,2131,2.833,2132,7.652,2133,4.244,2134,2.833,2135,7.612,2136,6.352,2137,6.352,2138,6.352,2139,6.352,2140,5.975,2141,6.352,2142,2.833,2143,2.833,2144,2.833,2145,2.833,2146,2.833,2147,3.745,2148,2.833,2149,2.833,2150,2.833,2151,2.833,2152,2.833,2153,2.833,2154,2.833,2155,2.833,2156,2.833,2157,2.833,2158,4.268,2159,4.244,2160,5.088,2161,2.833,2162,2.833,2163,2.833,2164,2.833,2165,2.833,2166,2.833,2167,2.833,2168,2.833,2169,2.833]],["title/classes/Jobs.html",[0,0.187,1177,3.231]],["body/classes/Jobs.html",[0,0.167,2,0.747,3,0.12,4,0.1,5,0.113,7,0.307,8,0.774,11,1.181,18,0.825,21,0.007,23,0.591,29,0.245,37,0.204,40,0.957,41,2.005,55,1.352,58,0.004,59,0.004,65,0.773,112,1.33,119,3.378,121,2.793,124,3.559,127,1.987,128,4.563,131,4.49,132,1.354,133,1.945,134,1.239,170,0.884,203,2.547,261,3.999,297,4.203,318,2.374,327,4.166,345,3.406,348,3.481,351,2.249,352,2.208,415,3.39,433,2.771,437,2.771,1155,6.346,1175,6.659,1177,4.677,1194,5.453,1198,6.346,1213,6.346,1228,5.835,1230,5.835,1255,5.835,1256,4.894,1259,3.919,1467,2.862,2181,3.604,2182,4.399,2183,4.399,2184,4.399,2185,4.399,2186,4.399,2187,4.399,2188,4.399,2189,4.399,2190,4.399,2191,4.399,2192,4.399,2193,3.919,2194,3.604,2195,3.919]],["title/modules/JobsModule.html",[166,1.487,1141,3.381]],["body/modules/JobsModule.html",[0,0.239,3,0.171,4,0.143,5,0.162,21,0.007,22,1.126,29,0.29,36,1.088,37,0.181,58,0.005,59,0.005,132,1.938,166,2.572,454,2.69,606,2.721,607,2.852,608,2.997,609,2.997,610,2.997,611,3.948,612,4.049,616,3.722,617,2.785,618,2.997,620,3.818,624,3.16,625,4.136,627,3.684,1141,6.496,1150,6.731,1177,4.136,2194,6.407,2196,5.611,2197,5.611,2198,5.611,2199,6.297,2200,5.845,2201,5.611,2202,5.611,2203,6.297,2204,6.297]],["title/injectables/JobsService.html",[136,1.189,1150,3.381]],["body/injectables/JobsService.html",[0,0.126,3,0.09,4,0.075,5,0.085,7,0.231,8,0.628,9,2.524,10,2.039,11,1.124,12,2.247,15,0.964,18,0.82,20,2.319,21,0.007,22,1.521,23,0.575,25,4.508,29,0.229,36,0.571,37,0.095,49,2.583,55,1.283,58,0.003,59,0.003,65,0.88,66,3.208,72,1.598,74,1.23,75,2.445,76,2.445,77,1.272,78,2.469,87,3.544,88,1.705,89,1.614,90,1.705,91,1.705,92,1.705,94,2.122,122,1.894,124,3.218,132,1.017,134,0.931,136,1.209,137,1.336,162,3.613,176,5.376,178,4.246,179,2.583,180,2.213,181,2.382,182,3.034,183,2.928,184,2.928,185,2.741,186,4.049,187,2.928,188,3.361,190,2.003,191,4.977,192,3.364,194,4.435,195,4.236,196,2.616,197,2.003,198,3.034,200,1.136,201,2.003,202,5.239,203,2.892,205,2.003,206,4.091,207,4.769,209,2.003,211,2.082,213,2.003,215,1.81,216,4.086,218,2.17,392,0.999,630,2.17,633,2.17,634,2.17,635,2.271,636,2.17,637,2.17,638,2.17,639,2.17,640,2.271,641,2.17,642,2.17,1150,3.44,1177,2.17,1639,2.53,1640,2.388,2201,2.944,2205,3.304,2206,3.304,2207,3.304]],["title/injectables/JwtStrategy.html",[136,1.189,859,3.766]],["body/injectables/JwtStrategy.html",[0,0.204,3,0.146,4,0.122,5,0.138,7,0.374,10,1.81,11,0.886,15,2.059,18,0.641,20,1.764,21,0.007,22,1.261,23,0.43,29,0.293,36,0.927,37,0.154,55,1.085,56,1.843,58,0.005,59,0.005,65,1.24,70,4.32,72,1.712,74,1.318,77,1.794,78,2.11,83,5.503,94,1.363,103,3.378,112,2.384,136,1.705,137,2.168,139,4.452,152,2.215,157,3.541,170,1.078,196,2.212,238,1.743,253,3.876,318,1.511,392,1.621,787,5.781,792,4.849,796,4.969,803,3.137,808,4.902,810,3.251,814,4.106,859,6.039,863,4.778,905,4.32,920,5.781,921,5.403,928,6.287,929,4.778,1003,4.778,1311,3.876,1997,5.701,2208,5.362,2209,6.287,2210,4.778,2211,5.362,2212,4.778,2213,7.027,2214,8.38,2215,5.362,2216,5.781,2217,4.778,2218,5.362,2219,4.778,2220,5.362,2221,5.362,2222,5.362,2223,5.362,2224,5.362,2225,4.778,2226,5.362,2227,5.362,2228,4.778,2229,7.056,2230,6.287,2231,5.362,2232,4.778]],["title/classes/Keyrings.html",[0,0.187,2233,3.099]],["body/classes/Keyrings.html",[0,0.215,2,0.96,3,0.154,4,0.129,5,0.145,7,0.394,8,0.916,11,1.073,18,0.776,21,0.007,22,1.446,23,0.576,29,0.256,37,0.232,40,0.99,55,1.328,58,0.005,59,0.005,65,0.993,112,1.708,119,3.998,121,3.306,127,1.869,128,4.29,131,4.325,132,1.739,134,1.592,170,1.136,203,2.288,297,4.069,318,2.409,348,3.016,351,2.661,352,2.835,421,6.546,433,3.559,437,3.559,680,4.059,2233,5.095,2234,4.628,2235,5.558,2236,5.558,2237,5.649,2238,5.649,2239,5.649,2240,5.649,2241,5.033,2242,5.649,2243,4.628,2244,5.033]],["title/classes/KeyringsCommand.html",[0,0.187,1298,3.556]],["body/classes/KeyringsCommand.html",[0,0.277,2,0.78,3,0.125,4,0.104,5,0.118,7,0.32,9,1.388,11,0.797,12,3.319,15,1.854,18,0.577,20,1.588,21,0.007,22,1.595,23,0.387,29,0.277,30,1.816,37,0.209,39,1.742,40,0.851,42,2.227,43,2.185,44,2.514,45,2.948,46,3.103,53,1.641,55,1.003,56,1.072,58,0.004,59,0.004,65,1.117,72,2.325,74,1.79,77,1.615,78,2.103,94,1.167,112,1.388,122,1.438,170,1.581,180,3.222,192,3.113,196,2.283,203,1.438,238,2.368,284,2.783,287,2.891,300,3.375,368,3.154,373,2.303,375,4.002,376,4.59,377,4.366,378,4.366,379,4.366,380,4.002,381,2.783,382,2.783,388,4.366,389,1.609,391,3.154,392,1.921,393,2.745,394,3.716,395,3.716,396,4.59,398,2.242,401,4.172,402,2.079,403,2.568,404,3.154,405,3.154,407,2.891,409,2.685,413,2.13,447,4.172,448,2.783,451,3.154,677,4.592,680,2.303,808,4.261,809,3.318,889,4.417,910,4.864,958,3.514,960,2.891,1298,4.592,1299,3.318,2233,4.953,2245,3.76,2246,4.589,2247,4.589,2248,3.76,2249,2.891,2250,3.514,2251,3.318,2252,3.514,2253,3.76,2254,4.864,2255,5.204,2256,3.76,2257,3.76,2258,5.204,2259,3.76,2260,3.76,2261,5.204,2262,3.76,2263,3.76,2264,3.76,2265,3.76,2266,3.76,2267,5.204,2268,3.76]],["title/controllers/KeyringsController.html",[452,1.725,2269,4.03]],["body/controllers/KeyringsController.html",[0,0.143,1,2.85,3,0.102,4,0.086,5,0.097,7,0.263,9,1.14,11,0.903,18,0.653,20,1.798,21,0.007,22,1.43,23,0.516,29,0.293,32,1.026,36,0.652,37,0.108,40,0.57,55,1.252,56,1.681,58,0.004,59,0.004,65,0.971,74,1.357,77,1.404,78,2.411,94,1.829,122,2.657,124,3.379,127,1.572,133,1.668,134,1.063,152,1.558,164,1.946,170,1.447,180,2.442,181,1.795,196,2.657,200,2.915,206,1.893,238,2.339,285,2.563,334,2.286,392,1.14,452,1.322,454,1.297,456,1.842,457,5.2,458,5.004,459,4.944,460,2.888,461,4.696,462,4.33,466,5.368,467,2.888,468,4.229,469,5.508,470,5.508,471,4.229,474,2.888,475,4.229,478,2.592,479,6.126,480,5.508,481,6.126,482,5.508,483,2.888,489,1.893,490,2.477,492,3.231,494,2.133,496,5.508,498,5.004,499,2.206,500,2.726,501,4.229,502,4.491,503,3.09,504,1.946,505,2.888,506,2.726,507,2.888,508,2.888,509,2.888,510,2.726,511,2.726,512,2.888,513,2.726,514,2.888,515,3.992,516,2.888,517,2.888,518,2.726,520,2.592,522,1.842,523,2.133,525,3.09,526,2.888,527,2.888,528,3.339,529,2.592,532,3.36,533,3.36,534,3.992,535,2.888,536,4.292,537,4.117,538,4.229,540,4.229,541,2.888,542,3.123,546,2.888,680,2.772,889,3.349,2233,2.376,2235,2.592,2236,2.592,2249,4.532,2250,2.888,2252,2.888,2269,4.525,2270,3.771,2271,3.771,2272,5.004,2273,3.771,2274,3.771,2275,3.771,2276,3.771,2277,3.771,2278,3.771,2279,3.771,2280,3.771,2281,3.771,2282,5.523,2283,3.771,2284,3.771]],["title/classes/KeyringsCreateCommand.html",[0,0.187,2254,3.766]],["body/classes/KeyringsCreateCommand.html",[0,0.274,2,0.765,3,0.122,4,0.103,5,0.116,7,0.315,9,1.362,11,0.787,12,3.304,15,1.83,18,0.569,20,1.568,21,0.007,22,1.588,23,0.382,29,0.276,30,1.783,37,0.207,39,1.71,40,0.846,42,2.199,43,2.157,44,2.482,45,2.911,46,3.064,53,1.611,55,0.993,56,1.053,58,0.004,59,0.004,65,1.102,72,2.303,74,1.773,77,1.594,78,2.087,94,1.145,112,1.362,122,1.412,170,1.568,180,3.19,192,3.095,196,2.261,203,1.412,238,2.345,284,2.732,287,2.839,300,3.332,368,3.096,373,2.261,375,3.951,376,4.545,377,5.361,378,4.31,379,4.31,380,3.951,381,2.732,382,2.732,388,4.31,389,1.58,391,4.958,392,1.896,393,2.71,394,3.669,395,3.669,396,4.545,398,2.201,401,4.119,402,2.041,403,2.535,404,3.096,405,3.096,407,2.839,409,2.636,413,2.091,447,4.119,448,2.732,451,3.096,677,4.534,680,2.261,808,5.095,809,3.257,889,5.281,910,4.802,958,3.45,960,2.839,1298,3.257,1299,3.257,2233,4.914,2245,3.691,2248,3.691,2249,2.839,2250,3.45,2251,3.257,2252,3.45,2253,3.691,2254,5.524,2255,5.138,2256,3.691,2257,3.691,2258,5.138,2259,3.691,2260,3.691,2261,5.138,2262,3.691,2263,3.691,2264,3.691,2265,3.691,2266,3.691,2267,5.138,2268,3.691,2285,4.506,2286,4.506]],["title/classes/KeyringsCreateDto.html",[0,0.187,2249,3.099]],["body/classes/KeyringsCreateDto.html",[0,0.305,2,0.943,3,0.151,4,0.126,5,0.143,7,0.388,8,0.906,11,1.133,18,0.799,21,0.007,22,1.434,23,0.56,29,0.254,32,1.512,37,0.207,40,0.961,55,1.343,58,0.005,59,0.005,65,1.41,87,2.197,122,1.741,127,1.924,297,3.436,318,2.26,412,4.962,418,2.346,550,5.578,560,5.528,573,4.014,574,4.252,575,3.036,577,3.509,578,5.268,583,4.548,585,1.91,589,4.014,590,4.014,591,4.14,680,4.026,2235,5.513,2236,5.513,2249,5.054,2272,4.252,2287,4.948,2288,4.948,2289,4.948,2290,5.553,2291,5.553,2292,7.148,2293,5.553,2294,5.553,2295,4.948,2296,4.948]],["title/classes/KeyringsCreateQuestions.html",[0,0.187,1299,3.556]],["body/classes/KeyringsCreateQuestions.html",[0,0.279,2,0.792,3,0.127,4,0.106,5,0.12,7,0.325,9,1.409,11,0.585,12,3.088,15,1.36,18,0.423,20,1.165,21,0.007,22,1.645,23,0.284,29,0.279,30,1.845,37,0.211,39,1.769,40,0.885,42,2.251,43,2.209,44,2.541,45,2.98,46,3.137,53,1.667,55,0.884,56,1.089,58,0.004,59,0.004,65,1.129,72,2.345,74,1.805,77,1.632,78,1.718,94,1.185,112,1.409,122,1.461,127,1.019,170,1.592,180,3.248,192,2.886,196,2.013,203,1.461,238,2.388,284,2.826,287,2.937,300,3.412,365,4.154,368,4.413,373,2.34,375,4.045,376,4.628,377,4.413,378,4.413,379,4.413,380,4.045,381,2.826,382,2.826,388,4.413,389,1.634,391,3.204,392,1.941,393,2.774,394,3.756,395,3.756,396,4.045,398,2.277,401,4.217,402,2.111,403,2.596,404,3.204,405,3.204,407,2.937,409,2.727,413,2.164,677,4.642,680,2.34,808,4.297,809,3.37,889,4.453,910,4.917,958,3.569,960,2.937,1298,3.37,1299,4.642,2233,4.987,2245,3.819,2248,3.819,2249,2.937,2250,3.569,2251,3.37,2252,3.569,2253,5.261,2254,4.917,2255,5.261,2256,3.819,2257,3.819,2258,5.261,2259,3.819,2260,3.819,2261,5.261,2262,3.819,2263,3.819,2264,3.819,2265,3.819,2266,3.819,2267,5.261,2268,3.819,2297,6.421,2298,4.662]],["title/classes/KeyringsDto.html",[0,0.187,2272,3.766]],["body/classes/KeyringsDto.html",[0,0.299,2,0.908,3,0.145,4,0.122,5,0.137,7,0.373,8,0.883,11,1.121,18,0.811,21,0.007,22,1.407,23,0.563,29,0.249,32,1.454,37,0.202,40,0.973,55,1.346,58,0.005,59,0.005,65,1.384,87,3.441,122,2.467,127,1.952,297,3.351,318,2.218,412,4.838,418,2.257,550,5.17,560,5.39,573,3.862,574,4.091,575,2.991,577,3.457,578,5.17,583,4.435,585,1.838,589,3.862,590,3.862,591,4.063,593,4.761,680,3.951,2235,5.41,2236,5.41,2249,5.736,2272,5.39,2287,4.761,2288,4.761,2289,4.761,2292,7.015,2295,4.761,2296,4.761,2299,5.343,2300,5.343,2301,5.343,2302,5.343,2303,5.343]],["title/modules/KeyringsModule.html",[166,1.487,858,3.231]],["body/modules/KeyringsModule.html",[0,0.239,3,0.171,4,0.143,5,0.162,21,0.007,22,1.126,29,0.29,36,1.088,37,0.181,58,0.005,59,0.005,132,1.938,166,2.572,454,2.69,606,2.721,607,2.852,608,2.997,609,2.997,610,2.997,611,3.948,612,4.049,616,3.722,617,2.785,618,2.997,620,3.818,624,3.16,625,4.136,627,3.684,858,6.208,889,5.938,2233,3.967,2243,6.407,2251,4.552,2269,6.969,2304,5.611,2305,5.611,2306,5.611,2307,6.297,2308,6.297,2309,6.297,2310,6.297]],["title/injectables/KeyringsService.html",[136,1.189,889,2.982]],["body/injectables/KeyringsService.html",[0,0.121,3,0.086,4,0.072,5,0.082,7,0.222,8,0.61,9,2.495,10,1.99,11,1.115,12,2.194,15,0.927,18,0.814,20,2.305,21,0.007,22,1.506,23,0.572,25,4.48,29,0.247,36,0.549,37,0.091,49,2.507,55,1.269,56,0.742,58,0.003,59,0.003,65,0.854,66,3.144,72,1.55,74,1.194,75,2.373,76,2.373,77,1.235,78,2.468,87,3.517,88,1.639,89,1.552,90,1.639,91,1.639,92,1.639,94,2.098,121,1.439,122,1.848,124,3.17,132,0.978,134,0.895,136,1.174,137,1.284,162,3.593,170,0.639,176,5.332,178,4.161,179,2.507,180,2.608,181,2.312,182,2.945,183,2.841,184,2.841,185,2.661,186,3.987,187,2.841,188,3.303,190,1.926,191,4.926,192,3.381,194,4.385,195,4.163,196,2.64,197,1.926,198,4.004,200,2.028,201,1.926,202,5.199,203,2.874,205,1.926,206,4.041,207,4.71,209,1.926,211,2.001,213,1.926,215,1.74,216,4.004,218,2.086,238,1.033,392,0.96,630,2.086,632,2.83,633,2.086,634,2.086,635,2.183,636,2.086,637,2.086,638,2.086,639,2.086,640,2.183,641,2.086,642,2.086,680,2.438,889,2.945,922,2.83,1640,2.296,2233,2.001,2249,4.161,2251,2.296,2311,3.177,2312,3.177,2313,3.177,2314,3.177,2315,3.177,2316,3.177,2317,3.177]],["title/injectables/LocalStrategy.html",[136,1.189,860,3.766]],["body/injectables/LocalStrategy.html",[0,0.201,3,0.144,4,0.121,5,0.136,7,0.37,10,1.787,11,0.878,15,1.545,18,0.635,20,1.749,21,0.007,22,1.251,23,0.426,29,0.288,36,0.915,37,0.152,40,0.919,42,1.857,43,1.821,44,2.095,55,1.193,58,0.005,59,0.005,65,1.23,74,1.301,77,1.779,78,2.097,94,1.346,112,2.37,136,1.691,137,2.14,139,4.43,152,2.187,157,4.185,158,5.733,164,2.733,165,3.477,170,1.065,192,2.551,196,2.193,238,1.722,318,1.492,370,4.303,373,4.185,392,1.601,393,2.288,403,2.829,436,4.054,442,2.995,443,4.243,522,2.587,764,3.828,787,5.733,792,4.809,808,4.877,809,3.828,810,3.21,814,4.054,860,6.001,920,4.338,921,5.358,927,4.718,964,4.718,1311,3.828,1997,5.666,2209,6.235,2210,4.718,2212,4.718,2213,6.984,2216,5.733,2217,4.718,2219,4.718,2225,4.718,2228,4.718,2230,6.235,2232,4.718,2318,5.295,2319,5.295,2320,5.295,2321,7.838,2322,5.295,2323,6.235,2324,5.295,2325,5.295,2326,5.295,2327,5.295,2328,5.295]],["title/classes/Logger.html",[0,0.187,10,1.66]],["body/classes/Logger.html",[0,0.193,2,0.863,3,0.138,4,0.116,5,0.13,7,0.354,8,0.854,10,2.767,11,1.029,18,0.744,21,0.007,23,0.564,24,4.491,29,0.26,37,0.235,40,0.98,55,1.307,58,0.004,59,0.004,65,0.892,112,1.535,119,3.727,121,3.476,127,1.792,128,4.115,131,4.177,132,1.563,134,1.431,162,1.967,170,1.368,200,2.64,203,1.591,318,2.31,345,3.315,348,3.171,351,2.481,352,2.548,389,2.386,393,2.94,433,3.199,437,3.199,441,3.67,442,2.871,443,4.126,777,2.531,784,4.006,803,2.97,1036,3.888,1404,6.288,1409,6.288,2140,5.548,2147,4.919,2329,4.16,2330,8.2,2331,5.077,2332,5.077,2333,5.077,2334,5.077,2335,5.077,2336,6.063,2337,4.524,2338,5.077,2339,4.16,2340,4.524,2341,4.524,2342,4.524,2343,4.524,2344,4.524]],["title/controllers/LoggerController.html",[452,1.725,2345,4.03]],["body/controllers/LoggerController.html",[0,0.269,1,4.333,3,0.192,4,0.161,5,0.182,10,2.389,21,0.007,29,0.284,36,1.224,37,0.203,58,0.006,59,0.006,65,1.476,74,1.74,392,2.141,452,2.482,454,2.435,456,3.459,494,4.004,522,3.459,523,4.004,2345,6.879,2346,7.08,2347,6.07,2348,6.309,2349,7.08]],["title/modules/LoggerModule.html",[166,1.487,1384,3.556]],["body/modules/LoggerModule.html",[0,0.245,3,0.175,4,0.147,5,0.166,10,2.176,21,0.007,22,1.153,29,0.292,36,1.114,37,0.185,58,0.005,59,0.005,132,1.985,166,2.599,454,2.729,606,2.786,607,2.92,608,3.069,609,3.069,610,3.069,611,3.99,612,3.069,616,3.777,617,2.852,618,3.069,620,3.91,624,3.236,625,4.235,627,3.772,1384,6.778,2339,6.501,2345,7.043,2347,6.778,2348,5.746,2350,5.746,2351,5.746,2352,6.448,2353,5.746,2354,6.448,2355,6.448]],["title/injectables/LoggerService.html",[136,1.189,2347,3.556]],["body/injectables/LoggerService.html",[0,0.126,3,0.09,4,0.075,5,0.085,7,0.231,8,0.629,9,2.525,10,2.277,11,1.125,12,2.25,15,0.966,18,0.821,20,2.32,21,0.007,22,1.522,23,0.575,25,4.509,29,0.23,36,0.572,37,0.095,49,2.587,55,1.27,58,0.003,59,0.003,65,0.881,66,3.212,72,1.6,74,1.232,75,2.449,76,2.449,77,1.274,78,2.469,87,3.546,88,1.709,89,1.618,90,1.709,91,1.709,92,1.709,94,2.123,122,1.896,124,3.221,132,1.019,134,0.933,136,1.212,137,1.339,162,3.614,176,5.379,178,4.251,179,2.587,180,2.217,181,2.386,182,3.04,183,2.933,184,2.933,185,2.746,186,4.052,187,2.933,188,3.364,190,2.008,191,4.98,192,3.365,194,4.438,195,4.24,196,2.618,197,2.008,198,3.04,200,1.139,201,2.008,202,5.242,203,2.893,205,2.008,206,4.094,207,4.772,209,2.008,211,2.086,213,2.008,215,1.814,216,4.091,218,2.175,392,1.001,630,2.175,633,2.175,634,2.175,635,2.276,636,2.175,637,2.175,638,2.175,639,2.175,640,2.276,641,2.175,642,2.175,1639,2.536,1640,2.394,2347,3.624,2353,2.951,2356,3.312,2357,3.312,2358,3.312]],["title/controllers/ManagementController.html",[452,1.725,2359,4.03]],["body/controllers/ManagementController.html",[0,0.271,3,0.194,4,0.162,5,0.183,21,0.006,29,0.284,32,1.941,36,1.232,37,0.204,55,0.981,58,0.006,59,0.006,74,1.753,452,2.5,454,2.453,456,3.484,499,4.172,522,3.484,523,4.033,1692,5.843,2359,6.909,2360,7.132,2361,6.354,2362,6.096,2363,6.354,2364,7.132]],["title/modules/ManagementModule.html",[166,1.487,705,3.556]],["body/modules/ManagementModule.html",[0,0.231,3,0.165,4,0.138,5,0.156,18,0.551,21,0.007,29,0.287,30,2.4,36,1.048,37,0.174,55,0.835,56,1.417,58,0.005,59,0.005,77,1.542,94,1.542,166,2.654,454,2.627,520,5.25,606,2.621,607,2.747,608,2.887,609,2.887,610,2.887,611,3.881,612,2.887,616,3.636,617,2.682,618,2.887,624,4.196,705,6.855,931,3.821,1140,6.065,1386,7.451,1388,7.451,1389,5.404,1395,5.404,1396,5.404,1397,5.404,2359,6.85,2361,5.404,2362,6.676,2363,5.404,2365,5.404,2366,5.404,2367,6.065,2368,6.065,2369,6.065,2370,6.065,2371,6.065]],["title/injectables/ManagementService.html",[136,1.189,2362,3.556]],["body/injectables/ManagementService.html",[0,0.278,3,0.199,4,0.167,5,0.188,15,2.649,18,0.665,21,0.006,29,0.232,36,1.266,37,0.21,55,1.179,58,0.006,59,0.006,136,2.07,137,2.961,2362,6.193,2372,7.326,2373,7.326]],["title/classes/MetadataDto.html",[0,0.187,1535,3.099]],["body/classes/MetadataDto.html",[0,0.331,2,1.13,3,0.181,4,0.151,5,0.171,7,0.464,8,1.015,11,1.015,18,0.604,21,0.007,23,0.552,29,0.287,32,1.81,37,0.191,55,1.199,58,0.005,59,0.005,123,4.497,127,1.454,575,2.891,579,4.297,584,3.663,585,2.288,586,3.338,1403,4.731,1535,5.095,1549,6.204,1550,4.808,2374,6.651,2375,6.651,2376,6.651]],["title/classes/MetadataPart.html",[0,0.187,126,4.03]],["body/classes/MetadataPart.html",[0,0.227,2,1.014,3,0.162,4,0.136,5,0.153,7,0.417,8,0.949,18,0.792,21,0.007,23,0.576,29,0.24,37,0.217,40,0.975,55,1.338,58,0.005,59,0.005,65,1.049,112,1.804,121,3.424,122,1.87,126,6.194,127,1.907,128,4.379,129,4.889,131,4.398,132,1.837,134,1.681,170,1.2,293,5.703,296,5.703,297,4.5,298,6.799,299,6.799,351,2.757,352,2.995,2377,5.317,2378,5.967,2379,5.967,2380,5.967,2381,5.967,2382,5.317]],["title/classes/MetadataPartDto.html",[0,0.187,1549,3.231]],["body/classes/MetadataPartDto.html",[0,0.291,2,1.035,3,0.166,4,0.139,5,0.156,7,0.425,8,0.961,11,1.191,18,0.798,21,0.006,23,0.536,29,0.243,32,1.658,37,0.175,40,0.907,55,1.342,58,0.005,59,0.005,127,1.921,293,5.757,296,5.757,297,4.184,298,6.863,299,6.863,552,5.536,575,3.238,577,3.461,584,4.102,585,2.095,1549,5.029,2383,6.09,2384,6.824,2385,6.09,2386,6.09,2387,6.09,2388,6.09,2389,7.465]],["title/classes/MongoDbTestInstance.html",[0,0.187,2390,4.03]],["body/classes/MongoDbTestInstance.html",[0,0.21,2,0.94,3,0.15,4,0.126,5,0.142,7,0.386,8,0.904,11,0.694,18,0.818,20,1.8,21,0.007,22,1.288,23,0.517,29,0.228,37,0.159,39,2.1,40,0.826,56,1.293,58,0.005,59,0.005,77,1.831,78,2.574,94,2.156,116,4.684,134,1.559,170,1.61,194,2.94,220,5.9,232,3.802,238,2.985,351,3.092,665,3.486,676,4.533,740,3.486,770,4.533,1034,6.494,2114,4.236,2390,5.9,2391,5.533,2392,7.135,2393,7.135,2394,7.558,2395,7.558,2396,5.533,2397,7.135,2398,5.533,2399,5.533,2400,7.202,2401,5.533,2402,5.533,2403,5.533,2404,4.93,2405,7.202,2406,5.533,2407,5.533,2408,5.533,2409,5.533,2410,5.533,2411,5.533,2412,5.533,2413,5.533,2414,5.533,2415,7.202,2416,5.533,2417,5.533,2418,5.533]],["title/interfaces/MongoosePlugin.html",[38,1.41,712,3.556]],["body/interfaces/MongoosePlugin.html",[3,0.175,4,0.107,5,0.12,7,0.327,8,0.809,11,0.995,21,0.007,23,0.449,29,0.272,32,1.275,37,0.211,38,1.847,40,0.95,42,1.642,43,1.611,44,1.853,45,2.174,46,2.288,47,3.219,58,0.004,59,0.004,60,1.978,102,4.307,112,1.416,132,1.442,134,1.815,157,2.351,162,1.815,192,3.463,287,2.951,318,2.075,344,4.164,348,1.935,557,3.696,712,5.323,713,4.231,715,4.933,740,4.997,755,5.45,796,4.639,810,2.84,864,5.278,868,5.278,869,3.386,931,4.059,941,6.498,960,4.059,977,3.586,1025,3.386,1307,5.278,1308,4.174,1309,4.427,1310,6.033,1311,4.657,1312,6.033,1313,5.74,1314,5.74,1315,4.427,1316,5.278,1317,5.278,1318,4.657,1319,5.74,1320,4.174,1321,4.174,1322,4.174,1323,4.174,1324,3.837,1325,4.174,1326,7.843,1327,4.174,1328,4.174,1329,4.174,1330,4.174,1331,4.174,1332,4.174,1333,4.174,1334,4.174,1335,4.174,1336,4.174,1337,4.174,1338,4.174,1339,4.174,1340,4.174,1341,4.174,1342,4.174,1343,4.174,1344,4.174,1345,4.174,1346,4.174,1347,4.174,1348,4.174,1349,4.174]],["title/classes/MongooseValidationFilter.html",[0,0.187,723,4.03]],["body/classes/MongooseValidationFilter.html",[0,0.253,2,0.835,3,0.134,4,0.112,5,0.126,7,0.343,9,2.283,10,1.659,11,0.836,18,0.605,20,1.664,21,0.007,22,1.191,23,0.406,29,0.256,36,0.85,37,0.141,39,1.866,42,1.724,43,1.691,44,1.946,55,1.039,56,1.149,58,0.004,59,0.004,67,4.373,77,1.693,94,1.693,134,1.385,139,3.538,152,2.031,170,1.793,343,3.689,344,3.766,389,1.724,393,2.125,402,3.42,403,2.692,443,2.981,461,3.437,489,2.468,528,2.282,585,1.691,659,6.187,660,5.456,661,5.19,662,6.631,664,4.373,666,4.029,667,3.765,668,4.029,669,4.029,673,4.381,723,6.187,937,3.765,938,3.765,1025,3.554,1101,5.782,1112,5.934,1272,4.029,1422,6.944,1433,4.577,1442,4.029,1725,4.577,1935,3.554,2007,4.381,2064,4.381,2097,4.381,2419,7.551,2420,6.66,2421,8.916,2422,9.07,2423,4.917,2424,6.66,2425,4.917,2426,4.917,2427,4.917,2428,4.917,2429,4.917,2430,4.917,2431,4.917,2432,4.917,2433,4.917,2434,4.917,2435,4.917,2436,4.917,2437,4.917,2438,4.917,2439,4.917,2440,4.917,2441,4.917,2442,4.917]],["title/classes/NotFoundDto.html",[0,0.187,2443,4.383]],["body/classes/NotFoundDto.html",[0,0.255,2,1.138,3,0.182,4,0.152,5,0.172,7,0.467,8,1.019,18,0.737,21,0.006,23,0.495,29,0.257,32,1.823,36,1.157,37,0.192,40,0.838,55,1.302,58,0.005,59,0.005,127,1.775,203,2.099,389,3.064,489,4.386,528,4.057,575,3.248,1464,5.486,1467,3.108,2443,7.236,2444,8.74,2445,6.696,2446,6.696,2447,6.696,2448,6.696]],["title/injectables/ObjectIdValidationPipe.html",[136,1.189,502,3.381]],["body/injectables/ObjectIdValidationPipe.html",[0,0.24,3,0.172,4,0.144,5,0.163,7,0.442,11,0.794,18,0.574,20,1.581,21,0.007,22,1.131,23,0.385,29,0.248,36,1.093,37,0.181,40,0.879,42,2.749,43,2.175,53,2.803,55,1.173,56,1.478,58,0.005,59,0.005,67,4.153,77,1.993,94,1.608,106,3.264,124,3.868,133,2.797,134,1.782,136,1.895,137,2.556,338,4.346,502,5.389,504,4.047,906,2.935,1167,4.572,1412,5.181,1414,6.424,1418,6.424,1419,7.299,2449,7.841,2450,8.522,2451,6.324,2452,7.841,2453,6.324,2454,6.324,2455,6.324,2456,6.324]],["title/classes/PaginatedFilterDto.html",[0,0.187,2457,4.383]],["body/classes/PaginatedFilterDto.html",[0,0.278,2,1.245,3,0.199,4,0.167,5,0.188,18,0.665,21,0.006,37,0.21,39,3.252,40,0.884,42,2.568,43,2.52,44,2.899,58,0.006,59,0.006,61,5.295,393,3.165,2457,7.633,2458,7.633,2459,7.326,2460,7.326]],["title/classes/PaginatedResponseDto.html",[0,0.187,33,3.766]],["body/classes/PaginatedResponseDto.html",[0,0.245,2,1.095,3,0.175,4,0.147,5,0.166,7,0.45,8,0.996,18,0.78,21,0.006,23,0.524,29,0.251,32,1.755,33,6.076,36,1.114,37,0.185,41,2.58,55,1.331,58,0.005,59,0.005,127,1.879,200,2.957,203,2.021,489,4.314,528,3.99,534,6.214,537,4.062,575,3.352,1464,5.283,1467,2.993,2458,7.992,2461,6.448,2462,7.935,2463,6.448,2464,6.448,2465,6.448]],["title/controllers/PasswdController.html",[452,1.725,2466,4.03]],["body/controllers/PasswdController.html",[0,0.129,3,0.092,4,0.077,5,0.087,7,0.236,10,1.72,11,0.856,18,0.619,20,1.705,21,0.007,22,1.219,23,0.416,29,0.266,32,0.921,36,0.585,37,0.097,39,2.589,42,1.787,43,1.753,44,2.016,45,2.365,46,2.489,53,1.21,55,1.226,56,1.919,58,0.003,59,0.003,72,1.08,74,0.831,77,1.295,78,2.357,94,1.734,127,1.491,152,1.398,165,4.805,170,1.232,196,2.574,200,2.517,238,2.218,285,2.845,370,4.238,393,2.202,394,2.981,395,2.981,401,3.346,403,2.477,452,1.186,454,1.164,456,1.653,461,4.599,462,1.913,466,5.384,492,1.979,499,1.979,522,1.653,542,3.466,617,3.631,670,5.342,671,7.317,680,4.554,721,2.446,771,5.223,777,3.444,806,3.015,810,2.051,1050,4.479,1281,5.223,1291,4.54,1522,7.628,1699,2.591,1701,4.175,2216,4.175,2466,4.175,2467,3.383,2468,4.54,2469,4.54,2470,4.54,2471,3.383,2472,3.383,2473,6.821,2474,7.689,2475,3.383,2476,5.095,2477,3.383,2478,5.095,2479,3.383,2480,5.095,2481,3.383,2482,3.383,2483,6.821,2484,6.821,2485,4.54,2486,3.383,2487,3.383,2488,4.54,2489,3.015,2490,5.223,2491,3.383,2492,5.095,2493,5.095,2494,3.383,2495,3.015,2496,5.588,2497,3.383,2498,3.383,2499,4.431,2500,3.015,2501,7.317,2502,3.015,2503,4.54,2504,3.015,2505,4.54,2506,3.383,2507,3.015,2508,3.383,2509,3.383,2510,3.383,2511,3.383,2512,6.821,2513,3.383,2514,2.591,2515,6.821,2516,3.383,2517,3.383,2518,3.383,2519,5.095,2520,3.383,2521,5.095,2522,5.095,2523,3.383,2524,3.383,2525,3.383,2526,3.383,2527,3.015,2528,3.383,2529,6.821,2530,3.383,2531,4.54,2532,5.095,2533,3.383,2534,3.383,2535,3.383,2536,3.383,2537,3.383,2538,3.383,2539,3.383,2540,3.383,2541,3.383,2542,3.383]],["title/modules/PasswdModule.html",[166,1.487,2543,3.766]],["body/modules/PasswdModule.html",[0,0.253,3,0.181,4,0.152,5,0.171,21,0.006,29,0.276,36,1.152,37,0.191,58,0.005,59,0.005,166,2.637,454,2.785,606,2.88,607,3.019,608,3.173,609,3.173,610,3.173,611,4.049,612,3.173,616,3.855,617,2.948,618,3.173,624,4.064,2466,7.146,2499,6.833,2500,5.94,2543,7.523,2544,5.94,2545,5.94,2546,5.94,2547,6.666,2548,6.666]],["title/injectables/PasswdService.html",[136,1.189,2499,3.556]],["body/injectables/PasswdService.html",[0,0.137,3,0.098,4,0.082,5,0.093,7,0.252,8,0.671,9,2.465,10,2.15,11,1.092,12,2.37,15,1.561,18,0.79,20,1.969,21,0.007,22,1.408,23,0.521,29,0.283,36,0.624,37,0.104,39,2.418,40,0.812,53,2.518,55,1.28,56,1.758,58,0.004,59,0.004,65,0.94,66,3.88,72,2.034,73,5.136,74,1.566,75,2.613,76,2.613,77,1.36,78,2.488,87,2.787,88,1.863,89,1.764,90,1.863,91,1.863,92,1.863,94,1.912,100,1.812,101,2.371,102,2.112,106,2.76,112,1.617,133,1.597,134,1.017,136,1.292,137,1.459,165,3.512,170,1.815,196,2.726,200,1.84,238,2.722,327,2.112,392,1.092,542,3.025,617,2.365,680,3.197,762,2.764,771,5.394,774,2.112,915,3.217,923,4.095,924,4.095,961,3.217,1056,4.438,1057,2.958,1063,3.512,1154,2.764,1177,2.371,1182,2.958,1281,5.394,1284,2.958,1733,2.61,2082,3.217,2101,5.677,2468,4.766,2470,4.766,2488,5.677,2489,4.766,2490,5.394,2495,4.766,2499,3.866,2502,3.217,2503,4.766,2504,3.217,2505,3.217,2507,3.217,2527,3.217,2549,3.61,2550,5.348,2551,3.61,2552,3.61,2553,5.348,2554,3.61,2555,5.348,2556,3.61,2557,5.348,2558,3.61,2559,3.61,2560,3.61,2561,3.61,2562,3.61,2563,3.61,2564,3.61,2565,7.044,2566,3.61,2567,3.61,2568,3.61,2569,3.61,2570,5.348,2571,5.348,2572,3.61,2573,3.243,2574,3.61,2575,6.371,2576,3.61,2577,6.371,2578,3.61,2579,3.61,2580,5.348,2581,3.61,2582,3.61,2583,3.61,2584,3.61,2585,3.61,2586,3.61,2587,3.61,2588,3.61,2589,3.61,2590,3.61,2591,3.61,2592,3.61,2593,3.61,2594,3.61,2595,3.61,2596,3.61,2597,3.61,2598,3.61,2599,3.61,2600,3.61,2601,3.61,2602,3.61,2603,3.61,2604,5.348,2605,3.61,2606,3.61,2607,3.61,2608,3.61,2609,3.61]],["title/interfaces/RawBodyBufferOptions.html",[38,1.41,2610,4.383]],["body/interfaces/RawBodyBufferOptions.html",[3,0.179,4,0.15,5,0.169,7,0.459,8,1.008,11,1.183,21,0.006,23,0.528,29,0.208,37,0.23,38,1.886,40,1.001,56,1.537,58,0.005,59,0.005,60,2.778,318,1.853,442,3.72,462,4.543,1317,5.388,1318,6.811,2610,7.727,2611,6.577,2612,6.577,2613,9.031,2614,9.031,2615,5.861,2616,6.577,2617,6.577,2618,8.032,2619,6.577,2620,6.577]],["title/classes/ResetPasswordDto.html",[0,0.187,2490,3.766]],["body/classes/ResetPasswordDto.html",[0,0.304,2,1.11,3,0.178,4,0.149,5,0.168,7,0.456,8,1.004,18,0.726,21,0.006,23,0.487,29,0.253,32,1.778,37,0.187,40,0.929,53,2.86,58,0.005,59,0.005,127,1.749,370,3.372,575,3.091,577,3.572,585,2.247,680,4.639,777,3.352,779,5.353,784,3.908,1283,5.822,1284,7.084,1287,5.822,1288,7.128,2490,6.125,2621,8.647,2622,6.534,2623,6.534,2624,7.128,2625,6.534]],["title/classes/SecurityPart.html",[0,0.187,424,3.766]],["body/classes/SecurityPart.html",[0,0.196,2,0.875,3,0.14,4,0.117,5,0.132,7,0.359,8,0.862,11,1.15,18,0.802,21,0.007,23,0.58,29,0.218,37,0.197,40,0.997,55,1.345,58,0.005,59,0.005,65,0.905,112,2.337,121,3.111,122,1.613,127,1.931,128,4.435,131,4.407,132,1.585,134,1.451,164,2.657,170,1.035,203,2.584,348,3.406,351,2.504,352,2.584,393,2.968,424,5.918,425,4.218,441,3.721,442,2.911,443,4.164,444,4.218,557,4.435,768,3.538,923,3.942,1020,3.942,2235,5.311,2626,4.587,2627,6.887,2628,6.887,2629,6.887,2630,6.887,2631,6.887,2632,5.148,2633,5.148,2634,5.148,2635,5.148,2636,5.148,2637,5.148,2638,4.587,2639,4.587,2640,4.587,2641,4.587]],["title/classes/SecurityPartDTO.html",[0,0.187,565,3.556]],["body/classes/SecurityPartDTO.html",[0,0.269,2,0.913,3,0.146,4,0.122,5,0.138,7,0.375,8,0.887,11,1.185,18,0.812,21,0.007,23,0.57,29,0.224,32,1.462,37,0.154,40,0.994,55,1.35,58,0.005,59,0.005,127,1.955,203,2.474,318,2.224,552,3.883,557,3.546,558,5.788,562,6.467,563,4.401,565,5.107,575,3.259,577,3.599,581,5.184,582,5.283,584,4.05,585,1.848,591,4.074,2235,5.425,2627,7.034,2628,7.034,2629,7.034,2630,7.034,2631,7.034,2642,5.372,2643,7.065,2644,5.372,2645,5.372,2646,5.372,2647,5.372,2648,5.372,2649,5.372]],["title/interfaces/ServiceSchemaInterface.html",[38,1.41,229,4.03]],["body/interfaces/ServiceSchemaInterface.html",[3,0.093,4,0.078,5,0.088,7,0.24,11,1.036,18,0.749,20,2.292,21,0.007,22,1.475,23,0.559,25,4.509,29,0.163,37,0.099,38,0.986,41,1.118,42,1.808,43,1.183,58,0.003,59,0.003,60,1.452,77,1.311,94,2.098,119,1.883,121,1.557,122,1.94,124,3.565,133,1.521,134,0.969,162,3.786,179,2.662,180,2.281,181,2.455,182,3.752,183,3.62,184,3.62,185,3.39,186,4.11,190,3.127,191,5.229,192,3.471,194,4.567,195,4.693,196,2.874,197,3.127,198,4.169,200,1.183,201,3.127,202,5.531,203,3.063,205,2.085,206,4.437,207,5.229,209,2.085,213,2.085,215,1.883,216,4.169,223,2.633,225,2.486,229,4.225,231,3.064,338,2.363,504,2.662,2650,3.438,2651,3.438,2652,3.438,2653,3.438,2654,3.438,2655,3.438,2656,3.438,2657,3.438,2658,3.438,2659,3.438]],["title/classes/StatePart.html",[0,0.187,427,4.03]],["body/classes/StatePart.html",[0,0.205,2,0.918,3,0.147,4,0.123,5,0.139,7,0.377,8,0.89,11,1.162,18,0.792,21,0.007,23,0.58,29,0.251,37,0.203,40,0.867,41,2.732,53,1.931,55,1.338,58,0.005,59,0.005,65,0.949,112,1.633,121,3.211,122,1.693,127,1.907,128,4.217,131,4.376,132,1.663,134,1.522,170,1.086,203,2.222,297,4.588,318,1.998,345,2.183,348,3.472,351,2.585,352,2.711,427,5.809,428,4.425,1045,5.721,1467,3.291,2236,5.439,2660,4.813,2661,7.052,2662,7.052,2663,7.052,2664,4.813,2665,7.052,2666,5.401,2667,5.401,2668,5.401,2669,5.401,2670,5.401,2671,4.813,2672,5.401,2673,5.401,2674,5.401,2675,4.813]],["title/classes/StatePartDTO.html",[0,0.187,568,3.556]],["body/classes/StatePartDTO.html",[0,0.284,2,0.994,3,0.159,4,0.133,5,0.15,7,0.408,8,0.937,11,1.182,18,0.812,21,0.006,23,0.545,29,0.237,32,1.592,37,0.168,40,0.77,41,2.427,55,1.351,58,0.005,59,0.005,127,1.956,297,4.355,552,4.228,568,5.396,575,3.271,577,3.084,578,4.903,584,4.053,585,2.012,1045,5.944,1588,5.396,2236,5.651,2384,7.326,2389,7.718,2661,7.326,2662,7.326,2663,7.326,2676,5.85,2677,5.85,2678,5.85,2679,5.85,2680,5.85,2681,5.85,2682,5.85]],["title/classes/SyncIdentitiesDto.html",[0,0.187,1084,4.03]],["body/classes/SyncIdentitiesDto.html",[0,0.315,2,1.178,3,0.188,4,0.158,5,0.178,7,0.484,8,1.041,18,0.629,21,0.006,23,0.505,29,0.263,32,1.887,37,0.199,40,0.855,55,1.221,58,0.005,59,0.005,127,1.515,347,5.445,575,2.964,582,5.223,585,2.384,905,4.859,1084,6.793,2683,8.291,2684,6.931,2685,6.931,2686,6.931]],["title/classes/Tasks.html",[0,0.187,1185,3.231]],["body/classes/Tasks.html",[0,0.249,2,1.115,3,0.178,4,0.149,5,0.169,7,0.458,8,1.007,11,1.007,18,0.596,21,0.007,23,0.528,29,0.274,37,0.248,55,1.192,58,0.005,59,0.005,65,1.153,112,1.984,119,4.394,121,3.633,124,3.659,127,1.434,128,3.294,131,3.919,132,2.02,133,2.902,134,1.849,170,1.32,203,2.057,351,2.925,352,3.294,433,4.135,437,4.135,1177,5.689,1185,5.689,2687,5.377,2688,6.563,2689,5.848,2690,5.377,2691,5.848]],["title/controllers/TasksController.html",[452,1.725,2200,3.381]],["body/controllers/TasksController.html",[0,0.269,1,4.333,3,0.192,4,0.161,5,0.182,21,0.007,29,0.284,36,1.224,37,0.203,58,0.006,59,0.006,65,1.476,74,1.74,392,2.141,452,2.482,454,2.435,456,3.459,494,4.004,522,3.459,523,4.004,1150,5.77,1185,4.65,2200,5.77,2202,6.309,2692,7.08,2693,6.309]],["title/controllers/TasksController-1.html",[285,1.919,452,1.449,2200,2.841]],["body/controllers/TasksController-1.html",[0,0.269,1,4.333,3,0.192,4,0.161,5,0.182,21,0.007,29,0.284,36,1.224,37,0.203,58,0.006,59,0.006,65,1.476,74,1.74,392,2.141,452,2.482,454,2.435,456,3.459,494,4.004,522,3.459,523,4.004,1151,5.77,1185,4.65,2200,5.77,2693,6.309,2694,7.08,2695,6.309]],["title/modules/TasksModule.html",[166,1.487,1142,3.381]],["body/modules/TasksModule.html",[0,0.239,3,0.171,4,0.143,5,0.162,21,0.007,22,1.126,29,0.29,36,1.088,37,0.181,58,0.005,59,0.005,132,1.938,166,2.572,454,2.69,606,2.721,607,2.852,608,2.997,609,2.997,610,2.997,611,3.948,612,4.049,616,3.722,617,2.785,618,2.997,620,3.818,624,3.16,625,4.136,627,3.684,1142,6.496,1151,6.731,1185,4.136,2200,5.845,2690,6.407,2695,5.611,2696,5.611,2697,5.611,2698,5.611,2699,6.297,2700,5.611,2701,6.297,2702,6.297]],["title/injectables/TasksService.html",[136,1.189,1151,3.381]],["body/injectables/TasksService.html",[0,0.126,3,0.09,4,0.075,5,0.085,7,0.231,8,0.628,9,2.524,10,2.039,11,1.124,12,2.247,15,0.964,18,0.82,20,2.319,21,0.007,22,1.521,23,0.575,25,4.508,29,0.229,36,0.571,37,0.095,49,2.583,55,1.283,58,0.003,59,0.003,65,0.88,66,3.208,72,1.598,74,1.23,75,2.445,76,2.445,77,1.272,78,2.469,87,3.544,88,1.705,89,1.614,90,1.705,91,1.705,92,1.705,94,2.122,122,1.894,124,3.218,132,1.017,134,0.931,136,1.209,137,1.336,162,3.613,176,5.376,178,4.246,179,2.583,180,2.213,181,2.382,182,3.034,183,2.928,184,2.928,185,2.741,186,4.049,187,2.928,188,3.361,190,2.003,191,4.977,192,3.364,194,4.435,195,4.236,196,2.616,197,2.003,198,3.034,200,1.136,201,2.003,202,5.239,203,2.892,205,2.003,206,4.091,207,4.769,209,2.003,211,2.082,213,2.003,215,1.81,216,4.086,218,2.17,392,0.999,630,2.17,633,2.17,634,2.17,635,2.271,636,2.17,637,2.17,638,2.17,639,2.17,640,2.271,641,2.17,642,2.17,1151,3.44,1185,2.17,1639,2.53,1640,2.388,2700,2.944,2703,3.304,2704,3.304,2705,3.304]],["title/interfaces/TicketForm.html",[38,1.41,2706,3.766]],["body/interfaces/TicketForm.html",[3,0.15,4,0.126,5,0.142,7,0.386,8,0.903,21,0.007,23,0.589,29,0.228,38,2.294,40,1.027,41,2.339,42,2.522,43,1.899,58,0.005,59,0.005,60,2.333,188,2.563,338,3.795,353,4.522,354,2.85,355,2.85,418,3.038,777,3.153,906,2.563,1483,4.97,1484,5.34,1485,5.139,1486,4.034,1496,4.97,1498,3.348,1567,3.795,1568,3.795,1569,3.795,1570,3.795,1571,3.795,1572,3.795,1573,3.795,1574,4.361,1575,3.795,1589,6.353,1612,3.479,1626,5.508,1627,4.228,2706,5.508,2707,4.524,2708,5.2,2709,5.783]],["title/interfaces/TicketFormField.html",[38,1.41,2708,3.556]],["body/interfaces/TicketFormField.html",[3,0.14,4,0.117,5,0.132,7,0.359,8,0.862,21,0.007,23,0.601,29,0.218,38,2.216,40,1.017,41,2.873,42,2.408,43,1.771,58,0.005,59,0.005,60,2.174,188,3.827,338,3.538,353,4.435,354,2.657,355,2.657,418,3.959,777,1.915,906,3.827,1483,3.884,1484,3.243,1485,3.121,1486,2.45,1496,4.371,1498,3.121,1567,5.667,1568,5.667,1569,5.667,1570,5.667,1571,5.667,1572,5.667,1573,5.667,1574,5.208,1575,5.667,1589,6.209,1612,3.243,1626,5.259,1627,3.942,2706,3.942,2707,4.218,2708,5.587,2709,5.587]],["title/interfaces/TicketFormSection.html",[38,1.41,2709,3.556]],["body/interfaces/TicketFormSection.html",[3,0.153,4,0.128,5,0.145,7,0.393,8,0.914,11,0.914,21,0.007,23,0.591,29,0.231,38,2.315,40,1.017,41,2.367,42,2.553,43,1.935,58,0.005,59,0.005,60,2.377,188,2.612,338,3.867,353,4.545,354,2.904,355,2.904,418,3.606,777,2.093,906,2.612,1483,5,1484,3.545,1485,3.412,1486,2.679,1496,5,1498,3.412,1567,3.867,1568,3.867,1569,3.867,1570,3.867,1571,3.867,1572,3.867,1573,3.867,1574,5.36,1575,3.867,1589,6.391,1612,5.378,1626,5.575,1627,4.309,2706,4.309,2707,4.61,2708,5.264,2709,6.171]],["title/classes/ValidationConfigException.html",[0,0.187,1839,3.231]],["body/classes/ValidationConfigException.html",[0,0.298,2,0.903,3,0.144,4,0.121,5,0.137,7,0.371,8,0.88,11,0.667,15,1.551,18,0.758,20,1.328,21,0.007,22,0.95,23,0.427,29,0.222,36,0.918,37,0.225,56,1.639,58,0.005,59,0.005,65,1.468,70,2.911,72,2.506,74,1.93,77,1.783,87,3.107,94,1.783,108,3.109,170,1.679,343,4.356,344,4.909,351,1.938,389,2.459,528,3.644,664,3.49,905,3.842,1133,3.49,1436,3.941,1839,4.606,1935,5.07,1942,3.652,2008,6.572,2158,5.738,2514,5.371,2710,4.069,2711,6.841,2712,6.841,2713,6.841,2714,7.066,2715,5.314,2716,4.735,2717,4.735,2718,4.735,2719,4.354,2720,4.354,2721,5.371,2722,4.069,2723,5.371,2724,5.371,2725,4.354,2726,4.354,2727,6.433,2728,4.354,2729,4.354,2730,5.747]],["title/classes/ValidationException.html",[0,0.187,2008,3.556]],["body/classes/ValidationException.html",[0,0.3,2,0.913,3,0.146,4,0.122,5,0.138,7,0.375,8,0.887,11,0.674,15,1.568,18,0.761,20,1.343,21,0.007,22,0.96,23,0.43,29,0.224,36,0.928,37,0.226,56,1.651,58,0.005,59,0.005,65,1.474,70,2.943,72,2.52,74,1.94,77,1.796,94,1.796,108,3.142,170,1.686,343,4.369,344,4.927,351,1.959,389,2.477,528,3.664,664,3.528,905,3.87,1133,3.528,1436,3.962,1839,3.528,1935,5.706,1942,3.692,2008,6.062,2158,5.763,2514,5.409,2710,4.113,2711,6.87,2712,6.87,2713,6.87,2714,7.083,2719,4.401,2720,4.401,2721,5.409,2722,4.113,2723,5.409,2724,5.409,2725,4.401,2726,4.401,2727,6.467,2728,4.401,2729,4.401,2730,5.788,2731,7.065,2732,5.372,2733,5.372]],["title/interfaces/ValidationRecursive.html",[38,1.41,1415,4.03]],["body/interfaces/ValidationRecursive.html",[0,0.192,3,0.138,4,0.115,5,0.13,9,1.53,10,1.708,18,0.459,21,0.007,29,0.243,30,2.002,36,0.874,37,0.145,38,1.451,39,2.577,40,0.845,53,1.809,55,1.055,56,1.913,58,0.004,59,0.004,60,2.137,61,3.658,65,0.889,74,1.244,78,1.354,123,3.504,136,1.641,139,4.351,152,2.09,170,1.647,181,2.408,196,1.586,238,1.645,253,3.658,318,1.913,343,4.46,389,2.38,392,1.53,403,2.744,456,3.317,489,2.539,528,2.349,542,3.84,726,5.198,732,3.477,906,2.349,937,3.874,938,3.874,1167,4.908,1244,3.477,1411,6.05,1412,4.146,1413,6.05,1414,4.146,1415,6.709,1418,4.146,1419,5.562,1421,4.509,1422,5.867,1424,5.562,1425,4.509,1426,4.509,1427,4.509,1428,4.509,1429,4.509,1430,4.509,1431,4.908,1432,4.509,1433,4.666,1434,4.146,1435,2.349,1436,2.539,1437,4.509,1438,4.146,1439,4.509,1440,4.509,1441,4.509,1442,4.146,1443,4.509,1444,4.509,1445,4.509,1446,4.509,1447,6.05,1448,4.509,1449,4.509,1450,4.509,1451,4.509,1452,4.509,1453,4.509,1454,6.05,1455,4.509,1456,4.509,1457,4.509,2734,5.06]],["title/classes/ValidationSchemaException.html",[0,0.187,1942,3.381]],["body/classes/ValidationSchemaException.html",[0,0.298,2,0.903,3,0.144,4,0.121,5,0.137,7,0.371,8,0.88,11,0.667,15,1.551,18,0.758,20,1.328,21,0.007,22,0.95,23,0.427,29,0.222,36,0.918,37,0.225,56,1.639,58,0.005,59,0.005,65,1.468,70,2.911,72,2.506,74,1.93,77,1.783,87,3.107,94,1.783,108,3.109,170,1.679,343,4.356,344,4.909,351,1.938,389,2.459,528,3.644,664,3.49,905,3.842,1133,3.49,1436,3.941,1839,3.49,1935,5.07,1942,4.821,2008,6.572,2158,5.738,2514,5.371,2710,4.069,2711,6.841,2712,6.841,2713,6.841,2714,7.066,2716,4.735,2717,4.735,2718,4.735,2719,4.354,2720,4.354,2721,5.371,2722,4.069,2723,5.371,2724,5.371,2725,4.354,2726,4.354,2727,6.433,2728,4.354,2729,4.354,2730,5.747,2735,5.314]],["title/classes/VerifyTokenDto.html",[0,0.187,2496,4.03]],["body/classes/VerifyTokenDto.html",[0,0.313,2,1.164,3,0.186,4,0.156,5,0.176,7,0.478,8,1.033,18,0.622,21,0.006,23,0.417,29,0.261,32,1.865,37,0.196,40,0.849,58,0.005,59,0.005,127,1.497,575,2.943,577,3.401,585,2.356,680,4.701,773,6.105,777,3.062,779,5.613,783,6.105,784,3.347,2469,6.105,2496,6.745,2624,7.336,2736,8.233,2737,8.233,2738,6.851]],["title/interfaces/WorkerResultInfoInterface.html",[38,1.41,2739,4.03]],["body/interfaces/WorkerResultInfoInterface.html",[3,0.192,4,0.161,5,0.182,18,0.643,21,0.006,29,0.224,37,0.241,38,2.408,40,0.923,41,2.302,58,0.006,59,0.006,60,2.991,61,5.118,200,2.435,670,4.293,682,6.07,1048,5.421,1049,5.118,1050,4.65,1194,5.421,2739,7.334,2740,7.482,2741,7.482,2742,7.08,2743,6.309,2744,5.801]],["title/interfaces/WorkerResultInterface.html",[38,1.41,2744,4.03]],["body/interfaces/WorkerResultInterface.html",[3,0.185,4,0.155,5,0.175,7,0.475,8,1.029,21,0.006,23,0.536,29,0.216,37,0.235,38,2.351,40,0.942,41,2.861,58,0.005,59,0.005,60,2.874,200,3.142,670,5.539,682,4.918,1048,5.209,1049,4.918,1050,4.468,1194,6.995,2739,7.485,2740,6.063,2741,6.063,2743,6.063,2744,6.717]],["title/classes/additionalFieldsPartDto.html",[0,0.187,1744,3.381]],["body/classes/additionalFieldsPartDto.html",[0,0.235,2,1.05,3,0.168,4,0.141,5,0.159,7,0.431,8,0.97,11,0.97,18,0.766,21,0.007,22,1.58,23,0.585,29,0.196,32,1.682,37,0.177,39,3.201,40,0.971,58,0.005,59,0.005,127,1.843,203,1.937,261,4.002,341,4.983,342,4.619,343,4.444,347,5.075,418,3.264,575,3.159,1744,5.311,1748,5.311,2745,6.179,2746,8.433,2747,6.179,2748,6.179,2749,6.179]],["title/dependencies.html",[607,2.673,755,2.841]],["body/dependencies.html",[0,0.276,21,0.007,24,3.071,30,2.218,32,1.526,36,0.969,58,0.005,59,0.005,97,3.853,100,3.646,101,3.682,102,3.279,103,3.532,123,2.893,132,1.726,133,2.479,134,1.58,139,3.86,152,2.316,153,4.593,154,4.292,232,3.853,351,2.044,381,4.404,382,3.399,436,4.292,510,4.052,585,1.928,586,2.813,607,2.539,645,4.593,708,4.593,755,3.853,759,3.853,764,4.052,796,3.532,810,3.399,846,4.593,869,4.052,1310,4.593,1311,5.825,1312,4.593,1315,3.853,1431,4.052,1820,5.562,1837,3.853,2045,5.951,2615,4.995,2750,5.606,2751,5.606,2752,5.606,2753,5.606,2754,5.606,2755,7.264,2756,5.606,2757,5.606,2758,5.606,2759,5.606,2760,5.606,2761,5.606,2762,5.606,2763,5.606,2764,5.606,2765,5.606,2766,7.264,2767,5.606,2768,5.606,2769,5.606,2770,5.606,2771,5.606,2772,5.606,2773,5.606,2774,5.606,2775,5.606,2776,5.606,2777,5.606,2778,8.524,2779,5.606,2780,5.606,2781,5.606,2782,5.606,2783,5.606,2784,5.606,2785,5.606,2786,5.606,2787,5.606,2788,5.606,2789,5.606,2790,5.606,2791,5.606,2792,5.606,2793,5.606,2794,5.606,2795,5.606,2796,5.606,2797,5.606,2798,5.606]],["title/miscellaneous/enumerations.html",[2799,2.841,2800,5.259]],["body/miscellaneous/enumerations.html",[7,0.389,21,0.007,40,0.575,41,1.812,58,0.005,59,0.005,285,4.091,297,2.653,300,2.962,304,6.153,334,3.38,665,3.512,906,4.601,1047,4.567,1130,4.567,1133,3.661,1154,5.541,1170,4.233,1175,5.929,1211,5.929,1245,4.567,1356,5.541,1374,5.232,1496,4.093,1648,4.974,1696,4.567,1700,4.967,1872,4.567,2110,4.268,2112,5.541,2116,5.541,2531,4.967,2671,6.449,2799,3.831,2800,4.967,2801,5.574,2802,7.237,2803,4.967,2804,6.449,2805,8.036,2806,5.574,2807,7.237,2808,5.574,2809,4.967,2810,5.574,2811,5.574,2812,5.574,2813,5.574,2814,5.574,2815,7.237,2816,7.237,2817,7.237,2818,7.237,2819,7.237,2820,7.237,2821,7.237,2822,4.967,2823,5.574,2824,5.574,2825,5.574,2826,5.574,2827,5.574,2828,5.574,2829,5.574,2830,5.574,2831,5.574,2832,4.967,2833,3.512,2834,4.967,2835,4.967,2836,5.574,2837,5.574,2838,5.574,2839,5.574,2840,5.574,2841,5.574,2842,5.574,2843,5.574,2844,5.574,2845,5.574,2846,5.574,2847,5.574,2848,5.574,2849,5.574,2850,5.574]],["title/index.html",[7,0.289,2851,3.683,2852,3.683]],["body/index.html",[4,0.097,21,0.006,58,0.004,59,0.004,60,2.554,73,5.261,79,3.092,97,4.821,100,2.147,232,4.156,356,2.273,606,2.613,661,2.94,748,3.505,777,1.591,784,2.09,796,2.695,819,3.505,960,2.695,1050,2.809,1063,2.809,1211,3.505,1309,2.94,1435,4.318,1708,3.537,1711,4.349,1712,3.42,1713,4.156,1716,2.809,1737,2.594,1747,3.092,1749,3.313,1755,4.803,1759,4.274,1760,4.176,1774,2.695,1958,5.216,2062,5.063,2066,4.372,2067,5.129,2100,4.955,2140,3.092,2147,3.092,2833,3.81,2853,6.25,2854,4.278,2855,7.033,2856,6.247,2857,3.812,2858,5.747,2859,3.505,2860,3.505,2861,5.48,2862,4.955,2863,3.505,2864,3.505,2865,5.512,2866,3.812,2867,3.812,2868,3.812,2869,3.812,2870,3.812,2871,3.275,2872,3.812,2873,6.048,2874,6.048,2875,5.389,2876,5.389,2877,3.092,2878,3.812,2879,3.812,2880,6.25,2881,6.048,2882,6.048,2883,2.594,2884,4.278,2885,6.25,2886,3.812,2887,4.63,2888,4.278,2889,5.389,2890,3.81,2891,6.59,2892,4.278,2893,4.278,2894,4.278,2895,4.278,2896,3.092,2897,3.812,2898,4.278,2899,4.278,2900,5.389,2901,4.278,2902,3.505,2903,4.63,2904,4.278,2905,3.275,2906,3.275,2907,3.812,2908,3.812,2909,3.505,2910,3.812,2911,3.812,2912,3.505,2913,2.809,2914,3.812,2915,3.505,2916,3.812,2917,3.505,2918,3.812,2919,3.812,2920,4.278,2921,2.94,2922,3.812,2923,3.812,2924,2.94,2925,4.278,2926,3.812,2927,3.505,2928,3.812,2929,3.812,2930,3.505,2931,3.812,2932,3.812,2933,3.812,2934,3.812,2935,3.812,2936,3.505,2937,3.812,2938,2.94,2939,3.81,2940,3.812,2941,3.812,2942,3.812,2943,3.812,2944,3.275,2945,3.275,2946,3.812,2947,3.505,2948,3.812,2949,4.278,2950,4.278,2951,4.278,2952,4.278,2953,4.278,2954,3.505,2955,3.275,2956,3.812,2957,4.278,2958,3.812,2959,3.812,2960,3.812,2961,3.275,2962,4.278,2963,4.278,2964,4.278,2965,4.278,2966,4.278,2967,4.278,2968,4.278,2969,2.94,2970,4.278,2971,3.812,2972,4.63,2973,4.278,2974,4.278,2975,4.278,2976,4.278,2977,3.275,2978,3.275,2979,4.278,2980,4.278,2981,4.278,2982,2.809,2983,4.278,2984,4.278,2985,4.278,2986,4.278,2987,4.278,2988,3.092,2989,4.278]],["title/classes/inetOrgPerson.html",[0,0.187,356,2.614]],["body/classes/inetOrgPerson.html",[0,0.175,2,0.781,3,0.125,4,0.105,5,0.118,7,0.321,8,0.798,11,1.231,18,0.865,21,0.007,23,0.58,29,0.146,37,0.182,40,1.022,58,0.004,59,0.004,112,1.39,122,1.441,127,2.082,131,4.825,132,1.415,170,0.924,318,2.515,345,2.947,351,2.319,352,2.307,356,3.379,413,3.384,421,4.869,774,4.265,1486,3.47,1646,3.766,2573,4.421,2664,6.497,2990,4.096,2991,4.594,2992,4.594,2993,4.594,2994,4.594,2995,4.594,2996,4.594,2997,4.594,2998,4.594,2999,4.594,3000,4.594,3001,4.594,3002,4.597,3003,4.597,3004,4.597,3005,4.597,3006,4.597,3007,4.597,3008,4.597,3009,4.597,3010,4.597,3011,4.597,3012,4.597,3013,4.597,3014,4.597,3015,4.597,3016,4.597,3017,4.096]],["title/classes/inetOrgPersonCreateDto.html",[0,0.187,3018,3.766]],["body/classes/inetOrgPersonCreateDto.html",[0,0.286,2,0.704,3,0.113,4,0.094,5,0.107,7,0.289,8,0.742,11,1.219,18,0.852,21,0.007,23,0.572,29,0.187,32,1.128,37,0.198,40,1.014,58,0.004,59,0.004,65,1.04,112,2.774,127,2.051,345,3.709,413,3.2,575,3.374,576,2.271,577,3.876,580,4.065,584,4.223,585,1.426,774,4.033,1486,3.282,1542,4.738,1763,2.514,2573,4.18,2991,4.344,2992,4.344,2993,4.344,2994,4.344,2995,4.344,2996,4.344,2997,4.344,2998,4.344,2999,4.344,3000,4.344,3001,4.344,3018,5.279,3019,3.397,3020,4.146,3021,8,3022,8.177,3023,4.146,3024,4.146,3025,4.146,3026,4.146,3027,3.694,3028,4.146,3029,3.694,3030,4.146,3031,4.146,3032,4.146,3033,4.146,3034,4.146,3035,4.146,3036,4.146,3037,4.146,3038,4.146,3039,3.175,3040,3.397]],["title/classes/inetOrgPersonDto.html",[0,0.187,1763,2.982]],["body/classes/inetOrgPersonDto.html",[0,0.28,2,0.674,3,0.108,4,0.09,5,0.102,7,0.277,8,0.719,11,1.214,18,0.846,21,0.007,23,0.568,29,0.182,32,1.08,37,0.193,40,1.01,58,0.004,59,0.004,65,1.183,87,3.688,112,2.752,127,2.037,345,3.679,413,3.123,575,3.352,576,2.174,577,3.85,580,3.939,584,4.192,585,1.365,774,3.935,1486,3.202,1542,4.624,1763,3.475,2573,4.079,2991,4.239,2992,4.239,2993,4.239,2994,4.239,2995,4.239,2996,4.239,2997,4.239,2998,4.239,2999,4.239,3000,4.239,3001,4.239,3018,7.253,3019,3.251,3021,7.923,3022,8.11,3027,3.536,3029,3.536,3039,3.038,3040,3.251,3041,3.968,3042,3.968,3043,3.968,3044,3.968,3045,3.968,3046,3.968,3047,3.968,3048,3.968,3049,3.968,3050,3.968,3051,3.968,3052,3.968,3053,3.968,3054,3.968,3055,3.968]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.187,3039,3.766]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.324,2,0.954,3,0.153,4,0.128,5,0.144,21,0.007,29,0.23,32,1.529,37,0.231,40,1.008,58,0.005,59,0.005,65,1.418,112,2.915,345,3.898,413,2.607,575,3.504,576,3.077,577,4.036,580,4.998,584,4.408,585,1.932,774,3.285,1486,2.673,1763,3.405,2573,3.405,2991,3.539,2992,3.539,2993,3.539,2994,3.539,2995,3.539,2996,3.539,2997,3.539,2998,3.539,2999,3.539,3000,3.539,3001,3.539,3018,5.569,3019,4.602,3039,5.569,3040,5.958]],["title/license.html",[2851,3.683,2852,3.683,3056,3.683]],["body/license.html",[21,0.006,58,0.006,59,0.006]],["title/modules.html",[606,2.878]],["body/modules.html",[21,0.005,58,0.005,59,0.005,605,4.225,606,2.78,700,4.927,704,4.651,705,4.651,853,4.422,858,4.225,1135,4.422,1140,4.225,1141,4.422,1142,4.422,1293,4.927,1384,4.651,1604,4.927,1813,4.651,1924,4.422,2543,4.927,3057,9.94,3058,9.94,3059,9.94,3060,9.94]],["title/overview.html",[3061,5.936]],["body/overview.html",[2,0.698,21,0.007,58,0.004,59,0.004,60,1.734,137,1.66,166,1.241,385,5.143,454,1.412,605,5.697,606,1.774,607,1.86,608,1.954,609,1.954,610,1.954,611,1.906,612,1.954,613,3.659,614,3.659,615,3.659,616,2.796,617,1.816,618,1.954,694,4.957,700,6.642,701,3.659,702,3.659,703,3.659,704,6.906,705,6.131,808,4.961,853,6.439,854,3.659,855,3.659,856,3.659,857,3.659,858,5.697,859,5.251,860,5.251,889,5.143,1056,5.344,1135,6.35,1136,3.659,1137,3.659,1138,3.659,1139,3.659,1140,5.955,1141,5.829,1142,5.829,1149,5.57,1150,5.829,1151,5.829,1293,6.86,1294,3.659,1378,4.957,1381,3.659,1382,3.659,1383,3.659,1384,5.725,1520,4.957,1604,5.731,1605,3.659,1606,3.659,1686,5.074,1799,5.962,1813,5.725,1814,3.659,1815,3.659,1816,3.659,1919,3.659,1920,3.659,1921,3.659,1924,5.442,2014,3.659,2015,3.659,2196,3.659,2197,3.659,2198,3.659,2304,3.659,2305,3.659,2306,3.659,2347,4.957,2350,3.659,2351,3.659,2362,4.957,2365,3.659,2366,3.659,2499,4.957,2543,6.494,2544,3.659,2545,3.659,2546,3.659,2696,3.659,2697,3.659,2698,3.659,3061,3.659,3062,4.106,3063,3.659,3064,4.106,3065,4.106,3066,4.106]],["title/properties.html",[8,0.741,755,2.841]],["body/properties.html",[4,0.171,8,0.945,21,0.006,58,0.006,59,0.006,770,6.17,777,2.801,2855,6.17,2856,6.17,2857,6.71,2858,6.17,2859,6.17,3056,6.71,3067,7.531]],["title/miscellaneous/typealiases.html",[2799,2.841,3068,5.902]],["body/miscellaneous/typealiases.html",[7,0.442,21,0.006,22,1.131,23,0.519,40,0.652,41,2.056,58,0.005,59,0.005,124,2.671,162,2.451,194,3.36,261,2.864,297,3.01,347,4.153,353,3.935,418,3.312,442,4.434,515,5.668,557,3.174,664,5.149,682,4.572,792,5.389,1011,4.842,1012,6.424,1013,4.346,1019,5.181,1022,6.424,1024,4.842,1041,4.572,1042,5.181,1043,5.181,1642,5.181,1655,6.987,2181,5.181,2193,6.987,2234,5.181,2241,6.987,2329,5.181,2337,6.987,2687,5.181,2689,6.987,2714,6.004,2799,4.346,3069,6.324,3070,5.635,3071,5.635,3072,5.635,3073,5.635,3074,5.635,3075,6.324,3076,7.841,3077,5.635,3078,6.324,3079,7.841,3080,5.635,3081,6.324,3082,7.841,3083,7.841,3084,6.324,3085,5.635,3086,6.324,3087,6.324,3088,6.324,3089,6.324]],["title/miscellaneous/variables.html",[2799,2.841,2972,4.519]],["body/miscellaneous/variables.html",[7,0.109,8,0.83,10,0.528,12,0.582,21,0.007,22,0.769,23,0.565,40,0.822,41,2.485,42,1.263,43,1.239,44,1.425,53,0.559,55,0.374,56,1.884,58,0.002,59,0.002,112,1.734,122,0.491,129,2.226,139,0.832,156,2.226,157,0.785,162,2.962,164,0.808,166,0.822,167,5.909,170,0.865,179,0.808,188,2.662,192,2.214,194,0.832,200,1.675,203,2.355,226,2.422,260,1.964,261,3.187,285,0.726,297,1.714,300,1.444,309,2.758,318,0.766,334,1.648,340,1.394,341,2.925,342,2.925,344,0.885,345,2.764,347,2.365,348,3.886,351,2.906,356,1.914,357,2.226,358,1.394,366,1.537,370,0.808,393,2.623,406,0.915,410,1.394,413,1.261,415,1.294,424,1.198,425,2.226,428,2.226,430,2.422,436,1.198,437,0.986,439,2.226,440,1.394,441,2.604,442,2.037,443,3.237,444,2.226,445,2.422,446,1.394,457,1.964,495,2.081,500,1.964,504,0.808,506,1.964,511,1.964,513,1.964,528,2.26,529,1.076,537,2.71,557,0.785,665,0.986,667,1.198,768,1.076,774,1.59,777,2.461,792,1.076,811,2.422,842,1.394,847,2.422,906,4.353,923,1.198,1011,2.081,1013,1.076,1020,1.198,1024,1.198,1133,2.365,1148,1.394,1187,2.422,1188,1.394,1318,1.131,1373,1.394,1405,1.394,1407,2.422,1409,2.226,1410,1.394,1435,2.26,1436,1.808,1467,2.662,1480,1.394,1486,1.714,1491,2.226,1503,2.226,1504,1.394,1547,2.081,1591,1.394,1602,2.422,1603,1.394,1628,1.394,1636,1.394,1642,1.282,1643,1.59,1644,1.785,1646,2.226,1657,2.226,1658,2.081,1659,1.394,1668,1.028,1675,1.028,1699,1.198,1704,1.198,1716,1.028,1733,2.604,1737,1.648,1744,1.076,1748,2.475,1749,1.973,1750,1.076,1754,1.868,1759,0.832,1760,3.141,1761,3.669,1763,0.949,1774,4.008,1958,0.915,1993,1.282,2047,2.422,2067,1.59,2181,1.282,2194,2.226,2195,1.394,2234,1.282,2243,2.226,2244,1.394,2323,2.422,2329,1.282,2336,3.209,2339,2.226,2340,1.394,2341,1.394,2342,1.394,2343,1.394,2344,1.394,2377,1.394,2382,1.394,2573,1.648,2626,1.394,2638,1.394,2639,1.394,2640,1.394,2641,1.394,2660,1.394,2665,2.422,2675,1.394,2687,1.282,2690,2.226,2691,1.394,2710,1.198,2721,2.081,2722,1.198,2723,2.081,2724,2.081,2799,1.076,2803,1.394,2804,2.422,2809,1.394,2822,1.394,2832,1.394,2861,0.949,2913,1.785,2944,1.198,2972,1.198,2990,1.394,2991,2.269,2992,1.712,2993,1.712,2994,1.712,2995,1.712,2996,1.712,2997,1.712,2998,1.712,2999,1.712,3000,1.712,3001,1.712,3017,1.394,3070,1.394,3071,1.394,3072,1.394,3073,1.394,3074,2.422,3077,4.339,3080,1.394,3085,1.394,3090,3.833,3091,1.565,3092,1.565,3093,2.718,3094,2.718,3095,6.362,3096,2.718,3097,2.718,3098,2.718,3099,6.616,3100,2.718,3101,2.718,3102,2.718,3103,2.718,3104,2.718,3105,2.718,3106,4.302,3107,2.718,3108,2.718,3109,3.602,3110,1.565,3111,1.565,3112,2.718,3113,1.565,3114,1.565,3115,1.565,3116,2.422,3117,2.718,3118,2.422,3119,2.718,3120,3.833,3121,1.565,3122,1.565,3123,2.718,3124,5.734,3125,2.718,3126,2.718,3127,2.718,3128,2.718,3129,3.602,3130,2.718,3131,1.565,3132,2.718,3133,1.565,3134,1.565,3135,2.718,3136,1.565,3137,2.718,3138,1.565,3139,2.718,3140,1.565,3141,2.718,3142,1.565,3143,2.718,3144,1.565,3145,4.374,3146,4.302,3147,3.989,3148,3.833,3149,3.989,3150,3.602,3151,1.565,3152,2.718,3153,1.565,3154,2.718,3155,1.565,3156,2.226,3157,6.362,3158,6.839,3159,3.602,3160,6.362,3161,5.339,3162,1.565,3163,5.339,3164,2.718,3165,2.718,3166,4.302,3167,6.616,3168,7.036,3169,2.718,3170,1.565,3171,2.718,3172,1.565,3173,2.718,3174,2.718,3175,5.339,3176,3.602,3177,4.302,3178,3.602,3179,3.602,3180,3.602,3181,3.602,3182,1.394,3183,1.565,3184,1.565,3185,1.565,3186,1.565,3187,1.565,3188,1.565,3189,1.565,3190,1.565,3191,1.565,3192,1.565,3193,2.718,3194,1.565,3195,1.565,3196,1.565,3197,1.565,3198,1.565,3199,1.565,3200,1.394,3201,1.565,3202,1.565,3203,1.565,3204,2.226,3205,1.565,3206,1.565,3207,2.422,3208,2.422,3209,2.422,3210,1.394,3211,1.394,3212,1.394,3213,1.565,3214,1.565,3215,1.565,3216,1.565,3217,1.565,3218,1.565,3219,1.565,3220,1.565,3221,1.565,3222,1.565,3223,1.565,3224,1.565,3225,1.565,3226,3.602,3227,1.565,3228,1.565,3229,1.565,3230,1.565,3231,6.616,3232,4.391,3233,3.86,3234,2.422,3235,3.209,3236,1.565,3237,1.394,3238,2.422,3239,1.394,3240,2.226,3241,1.394,3242,4.87,3243,2.951,3244,2.604,3245,2.951,3246,3.602,3247,1.565,3248,1.076,3249,1.394,3250,1.565]],["title/additional-documentation/cahier-des-charges.html",[1697,1.716,1711,1.454,3251,1.833,3252,2.792,3253,2.792]],["body/additional-documentation/cahier-des-charges.html",[4,0.155,21,0.006,58,0.003,59,0.003,60,2.143,73,3.196,97,3.487,100,1.688,232,4.198,606,1.454,796,3.196,819,4.157,960,2.12,1050,2.209,1063,3.332,1256,2.312,1309,2.312,1435,4.527,1702,6.06,1708,4.269,1711,4.294,1712,2.869,1713,3.487,1747,2.432,1749,2.779,1752,2.312,1755,4.989,1759,4.077,1760,4.49,1774,2.12,1903,2.756,1958,5.079,2062,5.396,2067,3.978,2100,2.756,2121,2.576,2833,3.196,2853,4.521,2855,6.286,2856,5.004,2858,5.004,2859,2.756,2861,5.449,2862,2.756,2863,2.756,2864,2.756,2865,5.757,2868,2.998,2869,2.998,2870,2.998,2871,2.576,2872,2.998,2875,2.998,2876,6.503,2877,2.432,2878,2.998,2879,2.998,2880,6.06,2883,4.97,2885,5.443,2887,4.677,2890,4.598,2891,6.286,2896,2.432,2897,4.521,2900,5.443,2905,4.677,2906,2.576,2907,2.998,2908,2.998,2910,2.998,2913,3.332,2914,2.998,2916,2.998,2917,2.756,2918,2.998,2919,2.998,2921,2.312,2922,2.998,2923,2.998,2924,3.487,2926,2.998,2927,2.756,2928,2.998,2929,2.998,2930,4.157,2931,2.998,2932,2.998,2933,4.521,2934,2.998,2935,2.998,2936,2.756,2937,2.998,2938,5.473,2939,4.285,2940,2.998,2941,2.998,2942,2.998,2943,2.998,2944,2.576,2945,3.885,2946,4.521,2947,2.756,2948,4.521,2954,2.756,2959,2.998,2961,2.576,2969,5.273,2982,2.209,3232,5.875,3233,6.179,3252,2.998,3253,2.998,3254,3.364,3255,3.364,3256,3.364,3257,3.885,3258,5.004,3259,3.364,3260,3.364,3261,3.364,3262,3.364,3263,2.432,3264,3.364,3265,3.364,3266,2.756,3267,2.756,3268,3.364,3269,3.364,3270,2.756,3271,3.364,3272,3.364,3273,3.364,3274,2.998,3275,3.364,3276,2.998,3277,2.998,3278,3.364,3279,3.364,3280,2.432,3281,3.364,3282,5.074,3283,3.364,3284,3.364,3285,4.521,3286,3.364,3287,3.364,3288,3.364,3289,3.364,3290,3.364,3291,3.364,3292,3.364,3293,2.998,3294,3.364,3295,5.572,3296,3.364,3297,3.364,3298,3.364,3299,3.364,3300,2.998,3301,2.998,3302,3.364,3303,3.364,3304,3.364,3305,3.364,3306,3.364,3307,3.364,3308,2.998,3309,2.998,3310,5.074,3311,3.364,3312,3.364,3313,3.364,3314,3.848,3315,3.364,3316,2.998,3317,5.074,3318,5.074,3319,4.521,3320,2.998,3321,2.756,3322,3.364,3323,5.572,3324,6.801,3325,3.364,3326,3.364,3327,3.364,3328,2.998,3329,3.364,3330,3.364,3331,3.364,3332,3.364,3333,3.364,3334,2.756,3335,4.157,3336,3.364,3337,3.364,3338,3.364,3339,3.364,3340,3.364,3341,3.364,3342,3.364,3343,3.364,3344,3.364,3345,2.756,3346,3.364,3347,3.364,3348,2.756,3349,3.364,3350,3.364,3351,3.364,3352,2.576,3353,3.364,3354,3.364,3355,3.364,3356,2.998,3357,3.364,3358,3.364,3359,3.364,3360,3.364,3361,3.364,3362,2.998,3363,3.364,3364,3.364,3365,3.364,3366,3.364,3367,2.998,3368,3.364,3369,3.364,3370,3.364,3371,3.364,3372,3.364,3373,3.364,3374,3.364,3375,3.364]],["title/additional-documentation/documentation-technique.html",[1697,1.953,3251,2.085,3314,2.246,3352,2.729]],["body/additional-documentation/documentation-technique.html",[21,0.006,58,0.006,59,0.006,1711,3.54,3258,6.249,3323,6.249,3376,6.249,3377,6.249,3378,7.627,3379,6.796,3380,6.249,3381,6.796]],["title/additional-documentation/documentation-technique/demon.html",[1697,2.264,3251,2.418,3382,4.134]],["body/additional-documentation/documentation-technique/demon.html",[21,0.006,58,0.006,59,0.006,977,6.725,1708,4.473,2930,6.265,3258,7.195,3383,7.647,3384,7.647]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[79,2.265,251,1.974,1697,1.716,3251,1.833,3385,3.133]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.164,2,0.731,5,0.221,9,2.311,15,1.772,21,0.006,29,0.255,36,0.744,37,0.123,53,2.171,55,0.592,56,1.005,58,0.004,59,0.004,63,4.649,65,0.756,70,3.326,71,6.605,73,5.944,74,1.879,78,1.151,79,5.827,83,5.494,97,4.836,100,3.048,102,3.552,103,3.826,113,5.411,116,3.552,117,3.834,136,1.467,170,0.865,238,1.974,251,4.433,777,1.6,784,2.967,924,4.649,1115,3.294,1169,3.834,1214,3.834,1255,3.525,1262,3.834,1309,2.957,1316,3.525,1431,3.11,1435,4.513,1708,2.517,1711,3.266,1737,3.682,1749,2.357,1752,4.173,1755,4.283,1759,4.062,1760,3.326,1905,3.525,1958,5.029,1959,4.975,2062,4.888,2066,3.11,2067,4.716,2068,4.836,2833,2.711,2860,3.525,2861,5.413,2877,3.11,2883,2.609,2890,5.079,2924,2.957,2936,4.975,2939,4.433,2961,3.294,2969,2.957,2972,4.649,2988,3.11,3243,4.975,3248,2.957,3257,3.294,3280,4.389,3285,3.834,3295,3.525,3379,5.411,3386,3.294,3387,3.525,3388,6.072,3389,3.834,3390,4.975,3391,7.644,3392,8.781,3393,3.834,3394,3.834,3395,4.303,3396,6.072,3397,6.072,3398,4.303,3399,6.27,3400,3.834,3401,4.303,3402,3.834,3403,4.303,3404,4.303,3405,3.525,3406,4.303,3407,4.303,3408,4.303,3409,3.834,3410,4.303,3411,4.303,3412,4.303,3413,4.303,3414,3.834,3415,3.834,3416,3.834,3417,4.649,3418,4.303,3419,4.303,3420,4.303,3421,4.303,3422,3.294,3423,4.303,3424,2.957,3425,3.525,3426,4.303,3427,4.303,3428,4.303,3429,3.834,3430,4.303,3431,4.303,3432,4.303,3433,4.303,3434,4.303,3435,4.303,3436,4.303]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[1697,1.156,1711,1.627,1755,1.122,2924,1.451,3204,1.73,3251,1.235,3437,2.111,3438,2.111]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.007,29,0.182,37,0.104,45,0.731,53,1.748,56,1.55,58,0.002,59,0.002,78,1.834,100,3.202,106,3.423,116,0.921,121,1.238,122,2.315,124,0.665,134,1.377,166,1.62,170,1.514,179,0.813,180,2.37,181,2.057,183,2.86,184,2.117,185,1.983,186,2.296,188,3.273,191,0.921,192,2.636,194,1.923,195,2.527,202,2.117,206,2.888,207,0.921,220,1.29,232,4.385,238,2.074,251,4.899,285,2.005,309,2.771,313,1.403,318,1.217,334,0.955,344,0.891,347,1.795,356,2.296,403,2.771,413,1.268,415,2.327,442,0.891,452,0.958,454,0.542,504,0.813,542,1.545,611,0.731,624,0.79,676,2.965,752,1.29,774,1.598,784,3.609,803,2.86,906,1.268,1013,2.969,1029,2.092,1034,1.206,1149,3.211,1170,0.921,1171,1.403,1172,1.722,1196,1.29,1256,1.082,1318,1.138,1324,1.29,1434,1.29,1435,4.24,1486,1.301,1643,2.117,1644,1.795,1648,1.082,1657,2.239,1658,2.092,1660,1.206,1668,1.795,1675,1.795,1684,1.403,1686,0.921,1704,1.206,1708,3.134,1709,1.29,1711,4.148,1714,3.519,1716,1.795,1734,1.29,1737,4.022,1749,3.633,1755,4.189,1759,4.069,1760,4.373,1763,1.657,1924,1.082,1958,4.9,1972,3.85,1993,2.239,2062,5.438,2067,3.732,2068,2.969,2071,2.487,2088,3.225,2390,5.227,2392,1.403,2393,1.403,2394,1.403,2395,1.403,2397,1.403,2404,3.225,2573,1.657,2833,1.722,2860,1.29,2861,5.154,2862,1.29,2865,4.159,2866,1.403,2867,1.403,2871,1.206,2877,1.138,2883,4.022,2890,2.28,2902,1.29,2906,1.206,2911,1.403,2915,1.29,2921,2.969,2924,1.878,2927,1.29,2939,3.08,2947,2.239,2955,1.206,2956,1.403,2969,1.082,2971,1.403,2978,2.771,2982,1.795,2991,2.28,2992,1.722,2993,1.722,2994,1.722,2995,1.722,2996,1.722,2997,1.722,2998,1.722,2999,1.722,3000,1.722,3001,1.722,3090,3.225,3116,4.356,3118,2.435,3120,4.356,3156,1.29,3182,1.403,3200,1.403,3204,5.922,3233,1.138,3244,1.975,3248,1.878,3249,1.403,3257,1.206,3270,2.965,3280,3.123,3293,1.403,3309,1.403,3314,3.08,3320,1.403,3321,2.239,3323,6.274,3334,1.29,3348,1.29,3356,3.85,3362,1.403,3367,2.435,3376,2.239,3377,2.239,3386,2.092,3387,2.239,3390,4.714,3393,1.403,3399,3.85,3402,2.435,3405,1.29,3409,2.435,3414,1.403,3415,3.225,3416,1.403,3417,4.885,3424,2.487,3425,2.965,3439,6.09,3440,2.435,3441,2.733,3442,5.359,3443,6.508,3444,4.889,3445,4.889,3446,6.38,3447,2.771,3448,3.225,3449,2.733,3450,3.62,3451,7.387,3452,2.435,3453,4.005,3454,2.965,3455,3.85,3456,4.714,3457,4.889,3458,2.733,3459,2.733,3460,2.733,3461,1.575,3462,1.575,3463,2.733,3464,1.575,3465,1.575,3466,3.85,3467,1.575,3468,1.575,3469,2.733,3470,2.733,3471,1.575,3472,2.435,3473,5.753,3474,1.575,3475,3.225,3476,1.575,3477,1.575,3478,1.575,3479,1.575,3480,1.575,3481,1.575,3482,1.403,3483,1.575,3484,1.575,3485,1.575,3486,1.575,3487,1.206,3488,1.575,3489,1.403,3490,1.575,3491,1.29,3492,4.889,3493,1.575,3494,1.403,3495,1.575,3496,4.321,3497,6.633,3498,4.321,3499,1.575,3500,1.575,3501,5.359,3502,1.575,3503,1.575,3504,1.403,3505,1.403,3506,2.733,3507,2.733,3508,2.733,3509,2.733,3510,2.733,3511,2.733,3512,2.733,3513,1.206,3514,1.575,3515,2.733,3516,1.575,3517,1.575,3518,1.29,3519,1.575,3520,2.733,3521,2.733,3522,2.733,3523,1.575,3524,1.575,3525,1.575,3526,1.575,3527,1.575,3528,1.575,3529,1.29,3530,1.575,3531,1.575,3532,1.575,3533,1.575,3534,1.575,3535,1.575,3536,2.733,3537,4.39,3538,1.575,3539,6.856,3540,1.575,3541,1.575,3542,1.575,3543,1.575,3544,1.575,3545,1.575,3546,1.403,3547,1.575,3548,1.575,3549,1.403,3550,1.575,3551,1.575,3552,1.575,3553,1.575,3554,4.321,3555,1.575,3556,1.575,3557,1.575,3558,1.575,3559,1.575,3560,1.575,3561,1.575,3562,1.575,3563,4.321,3564,4.321,3565,1.575,3566,1.575,3567,1.575,3568,1.575,3569,1.575,3570,1.575,3571,1.29,3572,1.575,3573,2.239,3574,1.575,3575,1.575,3576,1.403,3577,1.575,3578,1.575,3579,2.092,3580,1.575,3581,1.575,3582,1.575,3583,1.575,3584,2.771,3585,1.575,3586,1.575,3587,1.403,3588,1.403,3589,1.575,3590,1.575,3591,2.239,3592,1.575,3593,5.427,3594,1.575,3595,1.403,3596,1.575,3597,1.575,3598,1.575,3599,2.733,3600,4.405,3601,1.575,3602,1.575,3603,1.29,3604,1.575,3605,1.403,3606,1.575,3607,2.435,3608,1.403,3609,2.733,3610,1.29,3611,2.733,3612,1.575,3613,1.575,3614,2.733,3615,1.575,3616,1.575,3617,2.733,3618,1.575,3619,3.62,3620,2.733,3621,1.403,3622,1.575,3623,1.575,3624,1.575,3625,2.733,3626,1.206,3627,1.575,3628,1.29,3629,1.575,3630,1.29,3631,1.575,3632,1.575,3633,2.733,3634,1.575,3635,2.733,3636,1.575,3637,1.575,3638,1.575,3639,1.575,3640,1.575,3641,1.575,3642,1.575,3643,1.575,3644,1.575,3645,1.575,3646,1.575,3647,1.575,3648,1.206,3649,1.575,3650,1.575,3651,1.575,3652,2.733,3653,3.62,3654,2.733,3655,2.092,3656,1.575,3657,1.575,3658,1.575,3659,1.575,3660,1.575,3661,1.575,3662,1.575,3663,2.733,3664,1.575,3665,1.575,3666,1.403,3667,1.403,3668,1.575,3669,1.575,3670,1.575,3671,1.575,3672,1.403,3673,1.575,3674,1.575,3675,1.575,3676,1.29,3677,1.575,3678,1.575]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1436,1.573,1697,1.716,1711,1.454,2887,2.399,3251,1.833]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.156,21,0.006,23,0.359,40,0.607,45,2.732,58,0.004,59,0.004,72,1.878,78,1.575,100,2.066,134,2.112,136,0.995,162,1.595,166,1.245,196,2.349,251,4.722,339,4.72,343,2.011,389,1.444,441,2.976,759,4.045,777,1.531,784,2.011,1140,2.704,1309,2.83,1364,2.83,1435,4.452,1436,4.674,1686,4.018,1708,4.384,1711,4.322,1712,2.328,1714,4.922,1716,2.704,1737,3.568,1749,3.224,1751,2.976,1755,4.695,1759,3.649,1760,3.762,1820,5.259,1837,4.72,1844,5.244,1958,5.407,1959,3.373,1997,2.976,2023,3.669,2029,5.244,2035,5.244,2036,5.244,2045,6.495,2060,4.822,2062,5.501,2067,4.384,2068,4.045,2069,5.244,2070,5.244,2071,2.83,2078,2.976,2861,5.357,2865,4.965,2883,2.496,2887,4.506,2890,4.722,2891,7.239,2896,2.976,2903,3.152,2906,3.152,2913,3.865,2924,4.72,2939,4.327,2945,3.152,2955,3.152,2958,3.669,2969,4.045,2977,3.152,2978,3.152,2982,2.704,3244,2.976,3248,2.83,3257,3.152,3263,2.976,3266,3.373,3267,3.373,3270,3.373,3276,5.244,3280,2.976,3301,5.244,3314,3.708,3352,3.152,3389,3.669,3390,3.373,3394,3.669,3417,3.152,3422,3.152,3424,2.83,3448,3.669,3453,3.373,3454,3.373,3466,3.669,3472,3.669,3487,5.738,3513,4.506,3518,4.822,3529,3.373,3537,3.373,3546,3.669,3591,3.373,3603,3.373,3607,6.12,3608,3.669,3628,3.373,3648,4.506,3679,3.669,3680,5.885,3681,5.885,3682,5.885,3683,4.117,3684,5.244,3685,4.117,3686,4.117,3687,3.669,3688,4.117,3689,4.117,3690,4.117,3691,4.117,3692,4.117,3693,4.117,3694,5.885,3695,4.117,3696,4.117,3697,4.117,3698,4.117,3699,4.117,3700,4.117,3701,5.244,3702,4.117,3703,4.117,3704,3.373,3705,4.117,3706,5.885,3707,4.117,3708,5.885,3709,4.117,3710,3.373,3711,3.669,3712,4.117,3713,4.117,3714,3.669,3715,4.117,3716,4.117,3717,4.117,3718,4.117,3719,4.117,3720,4.117,3721,5.885,3722,4.117]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[1697,1.953,3251,2.085,3380,2.92,3381,3.176]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.006,22,1.202,23,0.533,40,0.339,41,0.636,43,2.312,58,0.002,59,0.002,100,1.65,112,0.994,122,1.03,133,2.973,134,0.551,166,0.591,188,2.581,261,1.489,285,3.246,304,2.517,318,2.322,366,1.859,504,1.697,542,2.82,617,0.865,744,2.377,759,4.401,777,2.986,784,2.078,906,2.796,1013,1.344,1030,3.485,1435,4.474,1479,4.62,1481,3.604,1482,1.414,1483,4.301,1484,1.232,1485,1.186,1486,2.373,1496,1.859,1567,3.427,1568,3.822,1569,3.427,1570,3.427,1571,3.427,1572,3.427,1573,3.822,1574,4.076,1575,3.822,1612,4.035,1613,3.485,1708,3.523,1711,3.908,1712,4.762,1714,1.284,1716,1.284,1737,4.076,1749,3.682,1753,4.401,1755,4.265,1756,1.414,1759,3.572,1760,4.397,1761,5.728,1872,1.602,1886,5.189,1958,5.088,2062,5.273,2067,3.253,2068,1.344,2071,1.344,2078,1.414,2708,2.377,2709,2.377,2833,4.406,2834,1.743,2835,4.443,2861,5.371,2863,2.694,2864,2.694,2865,4.02,2871,1.497,2883,5.105,2889,1.743,2890,2.68,2896,1.414,2902,2.694,2903,3.257,2912,4.085,2913,2.794,2921,1.344,2938,1.344,2939,4.552,2954,2.694,2955,1.497,2960,1.743,2961,5.533,2982,3.652,2988,1.414,3238,4.443,3243,2.694,3248,1.344,3263,1.414,3274,1.743,3280,2.377,3300,2.93,3308,1.743,3314,3.795,3316,1.743,3321,1.602,3335,1.602,3348,2.694,3380,3.485,3386,1.497,3400,1.743,3405,1.602,3417,1.497,3424,1.344,3425,1.602,3440,2.93,3443,5.823,3447,4.612,3452,2.93,3453,2.694,3455,3.79,3456,3.485,3482,1.743,3489,1.743,3494,1.743,3505,2.93,3513,1.497,3518,2.694,3529,2.694,3571,4.085,3573,5.247,3576,6.439,3584,4.258,3587,1.743,3591,4.556,3593,1.743,3595,5.367,3600,1.497,3605,1.743,3621,3.79,3626,1.497,3655,1.497,3679,1.743,3711,2.93,3714,1.743,3723,7.428,3724,9.192,3725,2.93,3726,6.404,3727,3.288,3728,4.986,3729,6.023,3730,5.561,3731,3.288,3732,4.254,3733,3.288,3734,6.723,3735,3.288,3736,6.023,3737,3.288,3738,3.288,3739,4.254,3740,5.561,3741,1.956,3742,1.956,3743,1.956,3744,1.743,3745,1.956,3746,3.288,3747,1.743,3748,4.986,3749,4.986,3750,4.085,3751,1.956,3752,1.956,3753,4.986,3754,1.743,3755,1.956,3756,3.288,3757,1.956,3758,1.956,3759,1.956,3760,1.956,3761,3.288,3762,4.986,3763,3.79,3764,3.288,3765,6.023,3766,1.956,3767,1.956,3768,1.956,3769,1.956,3770,4.254,3771,3.288,3772,1.743,3773,1.956,3774,3.288,3775,1.956,3776,1.743,3777,1.956,3778,1.956,3779,1.956,3780,1.956,3781,3.288,3782,3.288,3783,3.288,3784,4.986,3785,4.986,3786,4.254,3787,1.956,3788,1.956,3789,4.254,3790,1.956,3791,1.743,3792,1.956,3793,1.956,3794,1.956,3795,1.743,3796,1.743,3797,1.956,3798,1.743,3799,1.956,3800,4.254,3801,4.254,3802,4.254,3803,4.254,3804,4.254,3805,5.561,3806,3.288,3807,1.956,3808,1.956,3809,1.956,3810,1.956,3811,1.956,3812,1.956,3813,1.956,3814,1.956,3815,3.288,3816,3.288,3817,1.956,3818,4.986,3819,4.254,3820,1.956,3821,3.288,3822,1.956,3823,1.956,3824,1.956,3825,1.956,3826,1.956,3827,3.288,3828,1.956,3829,1.956,3830,1.743,3831,1.956,3832,1.956,3833,3.288,3834,1.743,3835,1.956,3836,4.254,3837,1.956,3838,1.956,3839,1.956,3840,1.956,3841,1.956,3842,1.956,3843,1.956,3844,3.288,3845,1.956,3846,1.956,3847,1.956,3848,1.956,3849,3.288,3850,1.956,3851,1.956,3852,5.561,3853,1.956,3854,1.956,3855,4.986,3856,1.956,3857,1.956,3858,3.288,3859,1.956,3860,1.956,3861,1.956,3862,3.288,3863,1.956,3864,1.956,3865,1.956,3866,1.956,3867,1.956,3868,1.956,3869,1.956,3870,1.956,3871,1.956,3872,1.956,3873,1.956,3874,1.956,3875,1.956,3876,2.93]],["title/additional-documentation/documentation-utilisateur.html",[1697,1.953,2945,2.729,3251,2.085,3314,2.246]],["body/additional-documentation/documentation-utilisateur.html",[21,0.006,58,0.006,59,0.006,1435,3.549,1436,3.838,1711,3.549,2883,4.636,2938,5.255,3314,4.818,3376,6.265,3377,6.265]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1697,1.382,1755,1.34,3251,1.476,3263,1.824,3579,1.932,3710,2.067,3877,2.248]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.006,23,0.276,58,0.003,59,0.003,285,2.922,300,1.542,341,3.448,342,3.74,343,1.418,356,4.016,389,1.018,413,1.347,415,2.997,421,4.266,462,2.562,492,2.65,744,2.098,759,1.995,774,1.698,784,2.722,1170,2.65,1256,1.995,1435,4.506,1436,1.457,1486,1.382,1643,3.259,1644,3.659,1701,2.378,1707,2.586,1708,3.994,1709,3.712,1711,3.629,1712,4.734,1713,4.692,1714,5.396,1715,2.586,1716,2.975,1717,2.586,1736,6.406,1737,3.378,1749,4.283,1750,3.113,1752,1.995,1753,3.113,1754,3.113,1755,3.844,1756,4.028,1759,4.016,1760,4.778,1761,1.995,1774,5.062,1837,3.113,1886,1.906,1958,4.975,2062,5.227,2066,2.098,2067,4.232,2071,1.995,2078,2.098,2485,4.037,2573,3.817,2833,3.966,2861,5.075,2877,2.098,2883,3.378,2886,2.586,2890,3.51,2896,3.275,2905,5.986,2909,6.406,2913,2.975,2921,4.972,2938,5.194,2939,4.558,2969,3.113,2977,4.266,2978,4.82,2982,4.484,2988,5.463,2991,3.966,2992,1.829,2993,1.829,2994,1.829,2995,1.829,2996,1.829,2997,1.829,2998,3.966,2999,1.829,3000,1.829,3001,1.829,3063,4.037,3145,3.712,3147,3.712,3149,3.712,3232,3.469,3233,4.028,3240,2.378,3244,2.098,3245,2.378,3248,1.995,3263,3.275,3266,2.378,3267,2.378,3277,2.586,3295,2.378,3314,1.829,3319,2.586,3328,2.586,3335,2.378,3345,2.378,3352,2.222,3422,2.222,3424,1.995,3443,5.986,3447,3.469,3454,2.378,3456,2.378,3487,4.266,3491,3.712,3513,2.222,3537,2.378,3571,3.712,3579,6.512,3584,2.222,3588,2.586,3600,3.469,3603,2.378,3610,3.712,3626,3.469,3630,2.378,3648,4.266,3655,2.222,3666,2.586,3667,2.586,3676,6.192,3701,2.586,3704,2.378,3710,4.565,3725,4.037,3744,2.586,3747,4.037,3750,2.378,3763,2.586,3772,4.037,3791,2.586,3796,4.037,3834,2.586,3877,5.609,3878,4.53,3879,7.557,3880,7.819,3881,4.037,3882,4.037,3883,4.53,3884,5.572,3885,4.53,3886,4.53,3887,4.53,3888,2.903,3889,2.903,3890,2.903,3891,2.903,3892,2.903,3893,2.903,3894,2.903,3895,4.53,3896,2.903,3897,2.903,3898,2.903,3899,2.903,3900,2.903,3901,2.903,3902,4.53,3903,2.903,3904,5.572,3905,2.903,3906,2.903,3907,4.965,3908,2.903,3909,4.037,3910,2.903,3911,4.53,3912,5.572,3913,5.572,3914,5.572,3915,4.037,3916,4.037,3917,4.53,3918,2.903,3919,2.903,3920,4.53,3921,4.53,3922,2.586,3923,2.903,3924,2.903,3925,4.965,3926,2.903,3927,2.903,3928,2.903,3929,2.903,3930,2.903,3931,2.586,3932,2.903,3933,4.53,3934,2.586,3935,4.53,3936,4.53,3937,4.53,3938,4.53,3939,4.53,3940,4.037,3941,4.53,3942,4.53,3943,2.903,3944,2.903,3945,2.903,3946,2.903,3947,2.903,3948,2.903,3949,2.903,3950,2.903,3951,2.903,3952,2.903,3953,2.586,3954,4.53,3955,2.586,3956,2.903,3957,2.903,3958,2.903,3959,2.903]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[1435,1.067,1436,1.154,1697,1.259,1711,1.067,1736,1.883,1903,1.883,3251,1.345,3960,2.299]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.745,21,0.006,22,0.466,23,0.584,40,0.879,41,2.589,58,0.003,59,0.003,133,1.841,192,1.895,261,3.13,285,2.754,297,3.452,304,3.188,318,2.428,341,2.281,342,2.281,345,2.398,347,4.539,351,2.163,356,3.445,366,2.939,413,1.211,415,1.982,504,1.346,557,2.09,744,3.757,759,3.572,774,1.526,777,2.571,784,3.68,907,4.631,1196,2.137,1435,4.442,1436,3.64,1438,3.411,1486,1.982,1643,2.436,1708,1.526,1711,3.604,1712,4.392,1713,1.793,1714,3.413,1737,2.525,1748,2.862,1749,3.786,1750,4.985,1751,1.886,1753,4.077,1754,4.077,1755,3.854,1759,3.152,1760,4.454,1774,4.085,1837,5.177,1886,1.713,1958,5.319,2060,2.137,2062,5.096,2066,3.01,2067,3.793,2068,1.793,2071,1.793,2073,2.324,2078,5.445,2573,1.582,2833,1.643,2861,4.93,2883,3.597,2890,3.274,2903,1.997,2905,3.979,2909,2.137,2912,2.137,2913,3.413,2915,3.411,2917,3.411,2921,5.337,2938,1.793,2939,4.354,2944,1.997,2977,1.997,2982,2.735,2988,4.289,2991,1.643,2992,1.643,2993,1.643,2994,1.643,2995,1.643,2996,1.643,2997,1.643,2998,1.643,2999,1.643,3000,1.643,3001,1.643,3145,3.411,3147,3.411,3148,2.324,3149,2.137,3156,2.137,3207,3.71,3208,3.71,3209,3.71,3210,2.324,3211,2.324,3212,3.71,3232,5.768,3233,5.445,3234,6.712,3235,5.777,3237,3.71,3239,2.324,3240,4.258,3241,2.324,3244,1.886,3245,2.137,3334,4.258,3345,2.137,3386,1.997,3387,2.137,3422,1.997,3424,1.793,3429,2.324,3443,4.964,3447,1.997,3475,2.324,3487,3.188,3491,2.137,3504,3.71,3549,2.324,3573,2.137,3579,1.997,3584,1.997,3600,1.997,3610,2.137,3626,3.188,3628,5.312,3630,2.137,3648,3.188,3655,1.997,3672,4.631,3676,4.861,3684,3.71,3687,4.631,3704,4.258,3750,2.137,3754,2.324,3776,2.324,3795,2.324,3798,2.324,3830,2.324,3876,8.057,3881,3.71,3882,2.324,3907,4.631,3909,5.286,3915,2.324,3916,2.324,3922,6.712,3925,4.631,3931,3.71,3934,2.324,3940,2.324,3953,3.71,3955,3.71,3961,2.609,3962,2.609,3963,2.609,3964,2.609,3965,2.609,3966,2.609,3967,2.609,3968,2.609,3969,2.609,3970,2.609,3971,2.609,3972,2.609,3973,2.609,3974,2.609,3975,6.484,3976,2.609,3977,2.609,3978,4.164,3979,2.609,3980,4.164,3981,2.609,3982,4.164,3983,6.484,3984,5.197,3985,4.164,3986,4.164,3987,6.484,3988,5.197,3989,2.609,3990,4.164,3991,5.197,3992,2.609,3993,5.933,3994,4.164,3995,5.197,3996,2.609,3997,2.609,3998,4.164,3999,2.609,4000,4.164,4001,2.609,4002,4.164,4003,4.164,4004,2.609,4005,4.164,4006,2.609,4007,2.609,4008,4.164,4009,2.609,4010,4.164,4011,4.164,4012,2.609,4013,4.164,4014,5.933,4015,2.609,4016,4.164,4017,2.609,4018,4.164,4019,2.609,4020,2.609,4021,2.609,4022,4.164,4023,4.164,4024,5.197,4025,4.164,4026,4.164,4027,2.609,4028,2.609,4029,2.609,4030,2.609,4031,2.609,4032,2.609,4033,2.609,4034,2.609,4035,2.609,4036,4.164,4037,2.609,4038,4.164,4039,2.609,4040,2.609,4041,2.609,4042,2.609,4043,2.609,4044,2.609,4045,2.609,4046,2.609,4047,2.609,4048,2.609,4049,2.609,4050,2.609]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":542,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/DtoValidationPipe.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.0.0/0",{"_index":2242,"title":{},"body":{"classes/Keyrings.html":{}}}],["0.0.13",{"_index":3067,"title":{},"body":{"properties.html":{}}}],["0.0.16",{"_index":2764,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2770,"title":{},"body":{"dependencies.html":{}}}],["0.40.1",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2769,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["000000000000000000000000",{"_index":1373,"title":{},"body":{"classes/ConsoleSession.html":{},"miscellaneous/variables.html":{}}}],["01",{"_index":3993,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["07/schema",{"_index":3209,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":285,"title":{"controllers/TasksController-1.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1.0.0",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["1.0.13",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":2772,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3156,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.1",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2760,"title":{},"body":{"dependencies.html":{}}}],["10.1.3",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["10.3.1",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":4007,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10y",{"_index":2264,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["11.0.0",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":3942,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["123",{"_index":3205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345",{"_index":3146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123456",{"_index":3937,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["15",{"_index":3063,"title":{},"body":{"overview.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["16",{"_index":3062,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3066,"title":{},"body":{"overview.html":{}}}],["1980",{"_index":3941,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1y",{"_index":957,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":304,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.3",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4002,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["200",{"_index":2474,"title":{},"body":{"controllers/PasswdController.html":{}}}],["201",{"_index":1701,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":3956,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":3996,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":3992,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["23",{"_index":3064,"title":{},"body":{"overview.html":{}}}],["24",{"_index":916,"title":{},"body":{"injectables/AuthService.html":{}}}],["256",{"_index":2570,"title":{},"body":{"injectables/PasswdService.html":{}}}],["3",{"_index":1872,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["3.11.0",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["3.12.5",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":3436,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["30_000",{"_index":1188,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/variables.html":{}}}],["3600",{"_index":915,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswdService.html":{}}}],["4",{"_index":3786,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2768,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2722,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":2476,"title":{},"body":{"controllers/PasswdController.html":{}}}],["5",{"_index":907,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":2408,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.1.1",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":671,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/PasswdController.html":{}}}],["5000",{"_index":2130,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":1322,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["5f7b1b3b7f7b1b3b7f7b1b3b",{"_index":2338,"title":{},"body":{"classes/Logger.html":{}}}],["60",{"_index":908,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":917,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.1.0",{"_index":2773,"title":{},"body":{"dependencies.html":{}}}],["7.1.16",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":3065,"title":{},"body":{"overview.html":{}}}],["8",{"_index":768,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["8.0.2",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["99",{"_index":2843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["9a",{"_index":469,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":2216,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{}}}],["_common/abstracts/abstract.controller",{"_index":494,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":1169,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":762,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/PasswdService.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":642,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_common/abstracts/dto/custom",{"_index":589,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":1552,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":433,"title":{},"body":{"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"injectables/IdentitiesService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Tasks.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":135,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/constants/event",{"_index":227,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["_common/data/api",{"_index":2248,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["_common/data/console",{"_index":935,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":496,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":812,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":696,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["_common/errors/validationexception",{"_index":1840,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":1690,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["_common/filters/mongoose",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/guards/auth.guard",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/pick",{"_index":508,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/pipes/dto",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/object",{"_index":503,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/agent.type",{"_index":814,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":354,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":516,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":2719,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":2048,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/agents.dto",{"_index":643,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/config.dto",{"_index":2042,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/execute",{"_index":1089,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/form.dto",{"_index":1519,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":1684,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_dto/keyrings.dto",{"_index":2313,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["_dto/sync",{"_index":1092,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_enum/action",{"_index":1181,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{}}}],["_enum/types",{"_index":1498,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1361,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":1651,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_enums/state.enum",{"_index":2192,"title":{},"body":{"classes/Jobs.html":{}}}],["_enums/states.enum",{"_index":1653,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_exception",{"_index":1461,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_id",{"_index":122,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"injectables/TasksService.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_interfaces/execute",{"_index":1183,"title":{},"body":{"injectables/BackendsService.html":{}}}],["_metadata",{"_index":2450,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_model",{"_index":178,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_options",{"_index":2118,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parts",{"_index":3490,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":1771,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":1654,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":3480,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/data.part.schema",{"_index":2335,"title":{},"body":{"classes/Logger.html":{}}}],["_parts/inetorgperson.dto",{"_index":1770,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":3481,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":1652,"title":{},"body":{"classes/Identities.html":{}}}],["_queue",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{}}}],["_req",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":2002,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/form.schema",{"_index":1608,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":1688,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["_schemas/jobs.schema",{"_index":2201,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["_schemas/logger.schema",{"_index":2353,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["_schemas/tasks.schema",{"_index":2700,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["_service",{"_index":523,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}}}],["_validation",{"_index":1694,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{}}}],["abortearly",{"_index":2094,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstract.service",{"_index":98,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractqueueprocessor:11",{"_index":1166,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:12",{"_index":1163,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:13",{"_index":1165,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:29",{"_index":1158,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:9",{"_index":1164,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractschema",{"_index":119,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"injectables/IdentitiesService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{}}}],["abstractservice",{"_index":66,"title":{"injectables/AbstractService.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:17",{"_index":91,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:18",{"_index":92,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:19",{"_index":88,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservice:20",{"_index":90,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["abstractservicecontext",{"_index":80,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["abstractserviceschema",{"_index":176,"title":{"injectables/AbstractServiceSchema.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:116",{"_index":1933,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:117",{"_index":639,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:15",{"_index":632,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:151",{"_index":1639,"title":{},"body":{"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:193",{"_index":1640,"title":{},"body":{"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:20",{"_index":1932,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:23",{"_index":633,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:254",{"_index":640,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:29",{"_index":1941,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:314",{"_index":635,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:34",{"_index":636,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:44",{"_index":634,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:50",{"_index":637,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:68",{"_index":1938,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:84",{"_index":638,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstraite",{"_index":3388,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acc",{"_index":1883,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["acc[err.path",{"_index":2096,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["acc[groupindex",{"_index":1875,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex].elements.push",{"_index":1879,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["accent",{"_index":3582,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accepted",{"_index":3957,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access_token",{"_index":910,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["access_token_expires_in",{"_index":878,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":879,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":3347,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{}}}],["accompagnement",{"_index":3360,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":3326,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accéder",{"_index":3396,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["action",{"_index":1228,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"classes/Jobs.html":{}}}],["actions",{"_index":3834,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["actiontype",{"_index":1154,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"injectables/PasswdService.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.identity_password_reset",{"_index":2608,"title":{},"body":{"injectables/PasswdService.html":{}}}],["actiontype.identity_update",{"_index":1229,"title":{},"body":{"injectables/BackendsService.html":{}}}],["active",{"_index":1211,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["add",{"_index":234,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{}}}],["added",{"_index":1127,"title":{},"body":{"controllers/BackendsController.html":{}}}],["additional",{"_index":1697,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["additionalfields",{"_index":1643,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":339,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":1744,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["additionalfieldspartdtostub",{"_index":3090,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":357,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["additionalfilters",{"_index":3813,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionalproperties",{"_index":3242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["additionnel",{"_index":3905,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":1713,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["administrateurs",{"_index":3318,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adresse",{"_index":3897,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["affichage",{"_index":3289,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":3825,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affirmer",{"_index":3531,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterall(async",{"_index":3511,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":3509,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterevent",{"_index":269,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.count",{"_index":273,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.created",{"_index":303,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.data",{"_index":271,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.deleted",{"_index":337,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.result",{"_index":331,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.updated",{"_index":323,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.count",{"_index":272,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.created",{"_index":302,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.data",{"_index":270,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.deleted",{"_index":336,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.result",{"_index":330,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.updated",{"_index":322,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevents",{"_index":267,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindandcount'].join(eventemitterseparator",{"_index":268,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindbyid'].join(eventemitterseparator",{"_index":277,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindone'].join(eventemitterseparator",{"_index":281,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterupsert'].join(eventemitterseparator",{"_index":329,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["agent",{"_index":387,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentcreatequestions",{"_index":359,"title":{"classes/AgentCreateQuestions.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/CliModule.html":{}}}],["agents",{"_index":406,"title":{"classes/Agents.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["agents.command",{"_index":1297,"title":{},"body":{"modules/CliModule.html":{}}}],["agents.controller",{"_index":622,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":626,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.service",{"_index":493,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":1390,"title":{},"body":{"modules/CoreModule.html":{}}}],["agentscommand",{"_index":408,"title":{"classes/AgentsCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscommand.registerwithsubcommands",{"_index":628,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscontroller",{"_index":453,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agentscontroller.projection",{"_index":531,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatecommand",{"_index":390,"title":{"classes/AgentsCreateCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentscreatedto",{"_index":383,"title":{"classes/AgentsCreateDto.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentscreatedto:26",{"_index":604,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:31",{"_index":596,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:36",{"_index":597,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:41",{"_index":599,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:46",{"_index":603,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:52",{"_index":602,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:57",{"_index":595,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:62",{"_index":600,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:67",{"_index":601,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:72",{"_index":598,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":464,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentsmodule",{"_index":605,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":439,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{},"miscellaneous/variables.html":{}}}],["agentsservice",{"_index":385,"title":{"injectables/AgentsService.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["agentstate",{"_index":2671,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":2674,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstate[k",{"_index":3153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agentstatelist",{"_index":2665,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["agentsupdatedto",{"_index":485,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agenttype",{"_index":792,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aident",{"_index":3530,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ainsi",{"_index":3666,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":3312,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":3712,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":3971,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":3797,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":3697,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":1820,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":2046,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":2049,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":1776,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["aliases",{"_index":3069,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerrors",{"_index":1833,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":656,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["allof",{"_index":3190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allons",{"_index":3464,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allowednetworks",{"_index":2235,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["already",{"_index":949,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/IdentitiesService.html":{}}}],["ameliorer",{"_index":1957,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["améliorant",{"_index":3689,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":3717,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":3680,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":3590,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":3692,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annotations",{"_index":3696,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":2869,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["anonymous",{"_index":295,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["any)?.id",{"_index":2165,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":2320,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["aperçu",{"_index":3576,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":960,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["apibadrequestresponse",{"_index":3173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":3162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodydecorator",{"_index":3094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodydecorator(bodymodel",{"_index":3169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodyoptions",{"_index":3159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedecorator",{"_index":511,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":524,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":1525,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":1695,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":2280,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apicreatedresponse",{"_index":3172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator",{"_index":3098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator(responsemodel",{"_index":3170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator",{"_index":500,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":545,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":1531,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":1742,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":2284,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(errorschemadto",{"_index":3171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(model",{"_index":3161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(notfounddto",{"_index":3176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedfilterdto",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apinotfoundresponse",{"_index":3178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":3177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apioperation",{"_index":2501,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apipaginateddecorator",{"_index":513,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":530,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":1526,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":1721,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":2281,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apipaginatedresponsedecorator",{"_index":3101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipaginatedresponsedecorator(model",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiparam",{"_index":498,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["apiproperty",{"_index":575,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty({enum",{"_index":1464,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({example",{"_index":779,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["apiproperty({type",{"_index":2746,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apireadresponsedecorator",{"_index":506,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":539,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":1528,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":1723,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":2283,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":1522,"title":{},"body":{"controllers/FormController.html":{},"controllers/PasswdController.html":{}}}],["apiresponseoptions",{"_index":3168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apisession",{"_index":677,"title":{"classes/ApiSession.html":{}},"body":{"classes/ApiSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["apitags",{"_index":499,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{}}}],["apitags('core",{"_index":518,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":1523,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":1692,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/ManagementController.html":{}}}],["apitags('passwd",{"_index":2509,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apiupdatedecorator",{"_index":495,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"miscellaneous/variables.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":543,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":1530,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":1730,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiupdatedresponsedecorator",{"_index":3104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiupdatedresponsedecorator(responsemodel",{"_index":3192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":3800,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app",{"_index":3224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.controller",{"_index":716,"title":{},"body":{"modules/AppModule.html":{}}}],["app.registerrequestbycontextid",{"_index":3228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.service",{"_index":695,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["app_guard",{"_index":719,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":720,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":689,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appel",{"_index":3664,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":3782,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":3790,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":3635,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["application",{"_index":1309,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":3902,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["applications",{"_index":2871,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["applydecorators",{"_index":3160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(setmetadata(meta_unprotected",{"_index":3217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":700,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":3681,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriés",{"_index":3305,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["appservice",{"_index":694,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["après",{"_index":3793,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":3592,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":2882,"title":{},"body":{"index.html":{}}}],["argon2",{"_index":645,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":926,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":965,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":3618,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["argumentmetadata",{"_index":1419,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["arguments",{"_index":284,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["arguments[1",{"_index":286,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[2",{"_index":305,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["argumentshost",{"_index":662,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["array",{"_index":347,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/SyncIdentitiesDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arraynotempty",{"_index":1359,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["arrays",{"_index":2105,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["arrondi",{"_index":4012,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":3503,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":3677,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":3500,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ascii",{"_index":2598,"title":{},"body":{"injectables/PasswdService.html":{}}}],["ask",{"_index":2483,"title":{},"body":{"controllers/PasswdController.html":{}}}],["asktoken",{"_index":2488,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["asktoken(asktoken",{"_index":2553,"title":{},"body":{"injectables/PasswdService.html":{}}}],["asktoken.id",{"_index":2527,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["asktoken.mail",{"_index":2574,"title":{},"body":{"injectables/PasswdService.html":{}}}],["asktokendto",{"_index":771,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["assertions",{"_index":3451,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assigned",{"_index":3810,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":3811,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assure",{"_index":3549,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assurez",{"_index":3916,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":3604,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asyncquery",{"_index":1072,"title":{},"body":{"controllers/BackendsController.html":{}}}],["attendez",{"_index":3920,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":3887,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":3918,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":3926,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":1589,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":2060,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":2036,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributes",{"_index":341,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes[key",{"_index":2087,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":2054,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributs",{"_index":1753,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":1567,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":1568,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":1569,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":1570,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":1571,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":3248,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":3718,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":787,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":862,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":863,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1391,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":785,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":2228,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":788,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":818,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":791,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":892,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":2931,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":721,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/PasswdController.html":{}}}],["authguardinternal",{"_index":845,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardinternal(['jwt",{"_index":836,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":853,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":808,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":1043,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":3765,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementidskipsymbol",{"_index":3105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoincrementpluginoptions",{"_index":1010,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["autoincrementplugintrackerspec",{"_index":1044,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["automatique",{"_index":3885,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":3796,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":3324,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autorisées",{"_index":3246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autres",{"_index":3573,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":1752,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["avancées",{"_index":2962,"title":{},"body":{"index.html":{}}}],["avec",{"_index":1708,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoir",{"_index":3239,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":3484,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["await",{"_index":238,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ayant",{"_index":3890,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["backend",{"_index":1050,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/PasswdController.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backendcodesenum",{"_index":2805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backenddata",{"_index":2604,"title":{},"body":{"injectables/PasswdService.html":{}}}],["backendname",{"_index":2741,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backendresultinfointerface",{"_index":1046,"title":{"interfaces/BackendResultInfoInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["backendresultinterface",{"_index":1049,"title":{"interfaces/BackendResultInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backends",{"_index":1063,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/IdentitiesService.html":{},"injectables/PasswdService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends.command",{"_index":1302,"title":{},"body":{"modules/CliModule.html":{}}}],["backends.controller",{"_index":1144,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":1091,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1392,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscommand",{"_index":1052,"title":{"classes/BackendsCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{}}}],["backendscommand.registerwithsubcommands",{"_index":1306,"title":{},"body":{"modules/CliModule.html":{}}}],["backendscontroller",{"_index":1064,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backendsmodule",{"_index":1135,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":1056,"title":{"injectables/BackendsService.html":{}},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/PasswdService.html":{},"overview.html":{}}}],["backendssyncallcommand",{"_index":1059,"title":{"classes/BackendsSyncallCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["background",{"_index":1273,"title":{},"body":{"injectables/BackendsService.html":{}}}],["badrequestexception",{"_index":1167,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(\"la",{"_index":1735,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('identity",{"_index":1732,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('no",{"_index":1240,"title":{},"body":{"injectables/BackendsService.html":{}}}],["badrequestexception(`invalid",{"_index":2454,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["badrequestoptions",{"_index":3193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barre",{"_index":3823,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":3849,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":2833,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["base64",{"_index":2577,"title":{},"body":{"injectables/PasswdService.html":{}}}],["based",{"_index":1874,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["baser",{"_index":3968,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":2868,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":411,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":2943,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["basée",{"_index":3861,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":3860,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":3605,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["beforeall(async",{"_index":3506,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforecreate'].join(eventemitterseparator",{"_index":290,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforedelete'].join(eventemitterseparator",{"_index":333,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeeach(async",{"_index":3521,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeevent",{"_index":255,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.data",{"_index":292,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.filter",{"_index":258,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.options",{"_index":264,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.projection",{"_index":262,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.update",{"_index":308,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.data",{"_index":291,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.filter",{"_index":257,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.options",{"_index":263,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.projection",{"_index":259,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.stop",{"_index":256,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.update",{"_index":326,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevents",{"_index":247,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindandcount'].join(eventemitterseparator",{"_index":252,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindbyid'].join(eventemitterseparator",{"_index":275,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindone'].join(eventemitterseparator",{"_index":279,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupdate'].join(eventemitterseparator",{"_index":307,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupsert'].join(eventemitterseparator",{"_index":325,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["besoin",{"_index":3951,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":3580,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["bien",{"_index":3341,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":2407,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":3212,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":2613,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["body",{"_index":462,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"interfaces/RawBodyBufferOptions.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body('schema",{"_index":1805,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["body.action",{"_index":1117,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.decorator.ts",{"_index":3096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.payload",{"_index":1119,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.state",{"_index":1741,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["bodymodel",{"_index":3164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyoptions",{"_index":3166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyparser",{"_index":1317,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":2620,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":2617,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bon",{"_index":3550,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":557,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthGuard.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["booléen",{"_index":3241,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":610,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["bouton",{"_index":3788,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":3831,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["browse",{"_index":3060,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3057,"title":{},"body":{"modules.html":{}}}],["buffer.middleware.ts",{"_index":2612,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["builder.vue",{"_index":3732,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["buildyup",{"_index":2044,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["buildyup(schema",{"_index":2091,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["bullmodule",{"_index":707,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmodule.forrootasync",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmq",{"_index":97,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"interfaces/ExecuteJobOptions.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cahier",{"_index":3252,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calculer",{"_index":3639,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":3853,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["camelcase",{"_index":4013,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":4015,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["canactivate",{"_index":837,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":841,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["capacités",{"_index":3427,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":3659,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caractères",{"_index":3235,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":4024,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cart",{"_index":3371,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":3454,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["catch",{"_index":402,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(error.validationerror",{"_index":2426,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":660,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":2010,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["ce",{"_index":2071,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ceci",{"_index":3418,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":3661,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":3588,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":3585,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["certaine",{"_index":3891,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":3755,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":2978,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cet",{"_index":3647,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":3424,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":3757,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":3923,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champ",{"_index":1761,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":1712,"title":{},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":165,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["change(@body",{"_index":2516,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(cpwd",{"_index":2471,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwd",{"_index":2555,"title":{},"body":{"injectables/PasswdService.html":{}}}],["changed",{"_index":2513,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changed.'})@apiresponse({status",{"_index":2475,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changepassworddto",{"_index":1281,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["changepwdatnextlogin",{"_index":2627,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["channel",{"_index":1095,"title":{},"body":{"controllers/BackendsController.html":{}}}],["chaque",{"_index":2913,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["charactères",{"_index":3924,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":3818,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":3253,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":3682,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":3234,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chaînes",{"_index":3247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":2057,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":3779,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checking",{"_index":3700,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chemin",{"_index":3767,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":3304,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["children",{"_index":1396,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["ci",{"_index":3571,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cibles",{"_index":2957,"title":{},"body":{"index.html":{}}}],["cipher",{"_index":2568,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cipher.final('base64",{"_index":2578,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cipher.getauthtag",{"_index":2579,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cipher.update(json.stringify(datastruct",{"_index":2576,"title":{},"body":{"injectables/PasswdService.html":{}}}],["ciphertext",{"_index":2575,"title":{},"body":{"injectables/PasswdService.html":{}}}],["clarifier",{"_index":3483,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["class1",{"_index":3206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classe",{"_index":2068,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cleardatabase",{"_index":2394,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearsession",{"_index":884,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":894,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli/agents.command",{"_index":623,"title":{},"body":{"modules/AgentsModule.html":{}}}],["client",{"_index":3397,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["climodule",{"_index":1293,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["close",{"_index":1124,"title":{},"body":{"controllers/BackendsController.html":{}}}],["cluster_agentsmodule",{"_index":613,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":614,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":615,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":701,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":702,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":854,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":855,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":857,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":856,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":1136,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_exports",{"_index":1138,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_imports",{"_index":1137,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":1139,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":1294,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_imports",{"_index":1295,"title":{},"body":{"modules/CliModule.html":{}}}],["cluster_coremodule",{"_index":1381,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1383,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1382,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":1605,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":1606,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule",{"_index":1814,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_exports",{"_index":1816,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_providers",{"_index":1815,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":1919,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_exports",{"_index":1920,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_providers",{"_index":1921,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":2014,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":2015,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":2016,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_jobsmodule",{"_index":2196,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":2197,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":2198,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule",{"_index":2304,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_exports",{"_index":2305,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":2306,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":2350,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":2351,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":2365,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":2367,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":2366,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":2544,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_imports",{"_index":2545,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_providers",{"_index":2546,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":2696,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":2697,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":2698,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":1758,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["clés",{"_index":3628,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":2991,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":3344,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1702,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["codes.enum.ts",{"_index":2807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":1572,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collection",{"_index":1036,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Form.html":{},"classes/Logger.html":{}}}],["collections",{"_index":2415,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":2417,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["combine",{"_index":2104,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["command",{"_index":375,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commander",{"_index":382,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["commandrunner",{"_index":376,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["comme",{"_index":3270,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":1256,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":3695,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["commonlogdb",{"_index":2157,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":2172,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":3912,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":2930,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":3294,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["communiquer",{"_index":2904,"title":{},"body":{"index.html":{}}}],["compact",{"_index":3980,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compile",{"_index":3527,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":3716,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":3452,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["completed",{"_index":1130,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{}}}],["completedjob",{"_index":1221,"title":{},"body":{"injectables/BackendsService.html":{}}}],["completion",{"_index":3287,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexes",{"_index":2967,"title":{},"body":{"index.html":{}}}],["complémentaires",{"_index":3960,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["complétée",{"_index":1739,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["component",{"_index":1573,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":3633,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":3593,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":1746,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["composant",{"_index":3723,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":3730,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":2878,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":3842,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":3320,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":2867,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":3699,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comptes",{"_index":2932,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["concerned",{"_index":2330,"title":{},"body":{"classes/Logger.html":{}}}],["concernedto",{"_index":1155,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["concernées",{"_index":3919,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":3808,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conclusion",{"_index":2950,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":3532,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('ioredis.options",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.uri",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('jwt.options.secret",{"_index":2221,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mongoose.options",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.plugins",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.uri",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configinstance",{"_index":1307,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["configmodule",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["configmodule.forroot",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configobjectattributedto",{"_index":1350,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectobjectclassdto",{"_index":1363,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectschemadto",{"_index":1364,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1356,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configs/identities/jsonforms",{"_index":1807,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/jsonforms/${schema",{"_index":1848,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/validations",{"_index":1897,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["configs/identities/validations/${key}.yml",{"_index":2051,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["configservice",{"_index":83,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('ioredis.port",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('jwt.options",{"_index":876,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":874,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":4050,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":2890,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":3574,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":3722,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configurer",{"_index":2911,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":3917,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":3892,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":3773,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":2114,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":2123,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":2411,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":3410,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":116,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connection_error",{"_index":2827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connexion",{"_index":3416,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["console",{"_index":1374,"title":{},"body":{"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('error",{"_index":404,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('agent",{"_index":400,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["console.log('dynamic",{"_index":1906,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('generating",{"_index":1902,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('hard",{"_index":1904,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('keyring",{"_index":2258,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log(`file",{"_index":1855,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`generating",{"_index":1851,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`writing",{"_index":1893,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(e",{"_index":966,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":3435,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(identity",{"_index":1062,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["console.log(user",{"_index":964,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":2113,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":934,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{}}}],["const",{"_index":170,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":4017,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":4016,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":3444,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constructeur",{"_index":3405,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":1427,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":646,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(jobs.name",{"_index":2207,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":2315,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(@injectmodel(logger.name",{"_index":2358,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(@injectmodel(tasks.name",{"_index":2705,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(_model",{"_index":630,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["constructor(_options",{"_index":2170,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":2210,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(backends",{"_index":2551,"title":{},"body":{"injectables/PasswdService.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["constructor(data",{"_index":681,"title":{},"body":{"classes/ApiSession.html":{}}}],["constructor(moduleref",{"_index":448,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["constructor(payload",{"_index":2713,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":522,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AuthGuard.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}}}],["constructor(protected",{"_index":409,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesValidationController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["constructor(reflector",{"_index":838,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(request",{"_index":1416,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construire",{"_index":3743,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":3741,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":3775,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenant",{"_index":1756,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":3821,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":4020,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":2485,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contentsecuritypolicy",{"_index":1323,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":3868,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["context.getclass",{"_index":850,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context.gethandler",{"_index":851,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":160,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":2072,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contextid",{"_index":3226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contextidfactory.create",{"_index":3227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contient",{"_index":3830,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":1272,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["control",{"_index":1863,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["controller",{"_index":452,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":519,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":815,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":1103,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1380,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('form",{"_index":1524,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":1693,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["controller('keyrings",{"_index":2279,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('logger",{"_index":2349,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":2364,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('management/identities/jsonforms",{"_index":1801,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["controller('management/identities/validation",{"_index":2004,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('passwd",{"_index":2508,"title":{},"body":{"controllers/PasswdController.html":{}}}],["controller('tasks",{"_index":2693,"title":{},"body":{"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convertis",{"_index":3683,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":4014,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["conçu",{"_index":3308,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":2860,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":2771,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1377,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1393,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1379,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":384,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{}}}],["core/agents/_enum/agent",{"_index":2672,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/_parts/security.part.schema",{"_index":435,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/_parts/state.part.schema",{"_index":434,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":621,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["core/agents/agents.module",{"_index":866,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{}}}],["core/agents/agents.service",{"_index":386,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":870,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":871,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.module",{"_index":1304,"title":{},"body":{"modules/CliModule.html":{}}}],["core/auth/auth.service",{"_index":809,"title":{},"body":{"controllers/AuthController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["core/backends/_enum/action",{"_index":2561,"title":{},"body":{"injectables/PasswdService.html":{}}}],["core/backends/backends.module",{"_index":1303,"title":{},"body":{"modules/CliModule.html":{}}}],["core/backends/backends.service",{"_index":1057,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/PasswdService.html":{}}}],["core/core.module",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":3801,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/jobs/_schemas/jobs.schema",{"_index":2562,"title":{},"body":{"injectables/PasswdService.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":2250,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":2251,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.module",{"_index":1301,"title":{},"body":{"modules/CliModule.html":{}}}],["core/keyrings/keyrings.service",{"_index":2252,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["corecontroller",{"_index":1375,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["coremodule",{"_index":704,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1378,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"overview.html":{}}}],["corps",{"_index":3879,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["correctement",{"_index":4049,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspond",{"_index":3961,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":1751,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["corresponding",{"_index":1881,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["correspondra",{"_index":3660,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["corrupted",{"_index":953,"title":{},"body":{"injectables/AuthService.html":{}}}],["count",{"_index":179,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":190,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["count(res",{"_index":1663,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["counter",{"_index":1039,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["couvre",{"_index":3670,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cpwd",{"_index":2480,"title":{},"body":{"controllers/PasswdController.html":{}}}],["cpwd.id",{"_index":2519,"title":{},"body":{"controllers/PasswdController.html":{}}}],["create",{"_index":180,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":525,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":197,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["create(res",{"_index":460,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":512,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator.ts",{"_index":3097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createassertions",{"_index":3556,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":3559,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["created",{"_index":300,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["createdat",{"_index":296,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":293,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions(service",{"_index":3560,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":3450,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":3522,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":3514,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":3457,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":3642,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createparamdecorator((_data",{"_index":3220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtokens",{"_index":885,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":896,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":405,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["creation",{"_index":3728,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["credentials",{"_index":2976,"title":{},"body":{"index.html":{}}}],["crucial",{"_index":3656,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":3455,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crudmode",{"_index":3738,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crypto",{"_index":923,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["crypto.createcipheriv('aes",{"_index":2569,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.createdecipheriv('aes",{"_index":2592,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.randombytes(12).tostring('base64",{"_index":2566,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.randombytes(16).tostring('hex",{"_index":2567,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cryptographiques",{"_index":3298,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":3412,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":3579,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":3505,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":3447,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":1707,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":3474,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":667,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":2427,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":669,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curl",{"_index":3884,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":1045,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["customfields",{"_index":412,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":550,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto:8",{"_index":574,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":3381,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cycle",{"_index":3266,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cypherdata",{"_index":2589,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cypherdata.iv",{"_index":2594,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cypherdata.k",{"_index":2593,"title":{},"body":{"injectables/PasswdService.html":{}}}],["d",{"_index":3946,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":3470,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":3832,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":3594,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":3638,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'attente",{"_index":3392,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":3687,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":2981,"title":{},"body":{"index.html":{}}}],["d'autres",{"_index":3649,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":3387,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":3265,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'environnements",{"_index":2973,"title":{},"body":{"index.html":{}}}],["d'erreur",{"_index":3694,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":2905,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identités",{"_index":2856,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":3673,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'installation",{"_index":3354,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":4046,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":2069,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":2073,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":3872,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":3824,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":3453,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":3263,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'upsert",{"_index":1960,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["d'utilisation",{"_index":3356,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":3705,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":3985,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["daemon",{"_index":3258,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["dans",{"_index":1759,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":200,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/variables.html":{}}}],["data.access_token",{"_index":947,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.additionalfields.attributes",{"_index":1968,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.additionalfields.objectclasses",{"_index":1966,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.additionalfields.validations",{"_index":1949,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.attributes",{"_index":2053,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.data.status",{"_index":2521,"title":{},"body":{"controllers/PasswdController.html":{}}}],["data.data.uid",{"_index":2518,"title":{},"body":{"controllers/PasswdController.html":{}}}],["data.inetorgperson.cn",{"_index":1948,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.inetorgperson.uid",{"_index":1963,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.newpassword",{"_index":2606,"title":{},"body":{"injectables/PasswdService.html":{}}}],["data.objectclasses",{"_index":2052,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.password",{"_index":647,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.state",{"_index":1955,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data[key",{"_index":688,"title":{},"body":{"classes/ApiSession.html":{}}}],["database",{"_index":2122,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["datapart",{"_index":1404,"title":{"classes/DataPart.html":{}},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datapartschema",{"_index":1409,"title":{},"body":{"classes/DataPart.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["datastruct",{"_index":2572,"title":{},"body":{"injectables/PasswdService.html":{}}}],["date",{"_index":297,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/BackendsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["date.now",{"_index":2263,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["db",{"_index":2116,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["de",{"_index":1435,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["deamon",{"_index":2898,"title":{},"body":{"index.html":{}}}],["debug",{"_index":1433,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":2149,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_errors",{"_index":1443,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":2428,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["decipher",{"_index":2591,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":2595,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decipher.update(token",{"_index":2597,"title":{},"body":{"injectables/PasswdService.html":{}}}],["declarations",{"_index":609,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypttoken",{"_index":2550,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decrypttoken(token",{"_index":2557,"title":{},"body":{"injectables/PasswdService.html":{}}}],["deepobject",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":348,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["default_context",{"_index":2336,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["default_data_type",{"_index":1407,"title":{},"body":{"classes/DataPart.html":{},"miscellaneous/variables.html":{}}}],["default_increment",{"_index":3108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_message",{"_index":2723,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["default_status_code",{"_index":2721,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["default_sync_timeout",{"_index":1187,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/variables.html":{}}}],["default_third_party_auth",{"_index":430,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["default_validations",{"_index":2724,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1032,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaultsrc",{"_index":1325,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1340,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":1481,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defaut",{"_index":2983,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["delete",{"_index":181,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":475,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":201,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["deleteassertions",{"_index":3567,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":3569,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":334,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteerrorassertions(service",{"_index":3570,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["demon",{"_index":3382,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["dense",{"_index":3785,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dependencies",{"_index":607,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":1711,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1352,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["describe('create",{"_index":3558,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":3568,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":3538,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":3543,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":3552,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":3495,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":3562,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":777,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Logger.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessous",{"_index":3750,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":3572,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["destinées",{"_index":3889,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["determine",{"_index":1873,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["deux",{"_index":1747,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":912,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":880,"title":{},"body":{"injectables/AuthService.html":{}}}],["devez",{"_index":3921,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devtokenpath",{"_index":942,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":2043,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":2058,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["différentes",{"_index":2864,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":2912,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["directconnection",{"_index":1339,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["directives",{"_index":1324,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directory",{"_index":2100,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":2823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["discut",{"_index":3374,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["displayname",{"_index":413,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponible",{"_index":4048,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":3774,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":3855,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":3819,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["divers",{"_index":3613,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":2956,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["doc",{"_index":3384,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":121,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/DataPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":1033,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["document.save(options",{"_index":301,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["documentation",{"_index":3314,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documents",{"_index":3546,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doe",{"_index":3150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":1878,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["doit",{"_index":3232,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":3295,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["done",{"_index":2213,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(new",{"_index":2230,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":2232,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":2865,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dossier",{"_index":3475,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dto/ask",{"_index":2504,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["dto/change",{"_index":2502,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["dto/reset",{"_index":2507,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["dto/verify",{"_index":2506,"title":{},"body":{"controllers/PasswdController.html":{}}}],["dtovalidationpipe",{"_index":726,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["du",{"_index":2883,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["duplicatedcode",{"_index":254,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["dupont",{"_index":3939,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":3911,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dynamicconfig",{"_index":2103,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles",{"_index":1900,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles].filter((file",{"_index":1907,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["dynamicconfigpath",{"_index":1847,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicmodule",{"_index":1388,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["dynamique",{"_index":3595,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":3591,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":3602,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["début",{"_index":4041,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenche",{"_index":2899,"title":{},"body":{"index.html":{}}}],["déclenchement",{"_index":3268,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":3363,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":3679,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":3754,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":3935,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":3345,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":4021,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":2915,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":3603,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":3771,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":3930,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":3876,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":3274,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["déj",{"_index":1738,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["délais",{"_index":3368,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":3502,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":2881,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":3650,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":3395,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":3485,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":3420,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":3972,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":3577,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":3674,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":3704,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":3854,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":3325,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":3256,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":3317,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":951,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["each",{"_index":591,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["ecriture",{"_index":3437,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effectuer",{"_index":2901,"title":{},"body":{"index.html":{}}}],["effectuées",{"_index":3949,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":3322,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["element",{"_index":1880,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elements",{"_index":1861,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elle",{"_index":3393,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":366,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":4034,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emitter",{"_index":154,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"dependencies.html":{}}}],["emitter.constant",{"_index":228,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["emitter.constant.ts",{"_index":3112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emplacements",{"_index":3833,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":3210,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["empty",{"_index":3545,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":2939,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":338,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["enabled",{"_index":941,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":1429,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["endpoint",{"_index":3878,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enregistrement",{"_index":2914,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":3978,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entier.example",{"_index":3997,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entite",{"_index":1778,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["entity",{"_index":997,"title":{},"body":{"injectables/AuthService.html":{}}}],["entityid",{"_index":438,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["entre",{"_index":2863,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entrypoints",{"_index":2895,"title":{},"body":{"index.html":{}}}],["entrée",{"_index":3795,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":1467,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2800,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":3761,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":3812,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":3809,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":3783,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":3762,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["environnements",{"_index":2966,"title":{},"body":{"index.html":{}}}],["envoyées",{"_index":3927,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["err",{"_index":1101,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["err.errors",{"_index":2435,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":2441,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":2436,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":2440,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":2438,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":2097,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["erreur",{"_index":1434,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":3607,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["error",{"_index":403,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error'})@useguards(undefined",{"_index":2478,"title":{},"body":{"controllers/PasswdController.html":{}}}],["error('erreur",{"_index":3644,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('invalid",{"_index":2603,"title":{},"body":{"injectables/PasswdService.html":{}}}],["error('moduleref",{"_index":107,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["error('request",{"_index":169,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error('token",{"_index":2587,"title":{},"body":{"injectables/PasswdService.html":{}}}],["error(message",{"_index":2131,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":2422,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":1452,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":1450,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":1446,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":1726,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["error.getvalidations",{"_index":1981,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["error.inner.reduce((acc",{"_index":2095,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["error.message",{"_index":1728,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error.property",{"_index":1448,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":1454,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.validationerror",{"_index":2421,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":1724,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":1445,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":1451,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":1456,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":1453,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorhttpstatuscode",{"_index":1111,"title":{},"body":{"controllers/BackendsController.html":{}}}],["errormessage",{"_index":3231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":1431,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.map((error",{"_index":1444,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":1458,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{}}}],["espaces",{"_index":4040,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["est",{"_index":1737,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1755,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":2922,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":2944,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["event",{"_index":235,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["eventemitter2",{"_index":89,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}}}],["eventemitterseparator",{"_index":226,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/variables.html":{}}}],["ex",{"_index":996,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":784,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/Logger.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":3433,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["examplequeueservice",{"_index":3431,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["exception",{"_index":664,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":2434,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":658,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:5",{"_index":663,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":2011,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":2013,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":2012,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":673,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":674,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1430,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":659,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":3617,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":2323,"title":{},"body":{"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["exclusivemaximum",{"_index":4001,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":3999,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exec",{"_index":321,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["executedjob",{"_index":1234,"title":{},"body":{"injectables/BackendsService.html":{}}}],["executejob",{"_index":1066,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["executejob(actiontype",{"_index":1153,"title":{},"body":{"injectables/BackendsService.html":{}}}],["executejob(res",{"_index":1070,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejobdto",{"_index":1071,"title":{"classes/ExecuteJobDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["executejoboptions",{"_index":1156,"title":{"interfaces/ExecuteJobOptions.html":{}},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["executioncontext",{"_index":842,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exemple",{"_index":3443,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":3461,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exhaustive",{"_index":3315,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":3290,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":950,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["existe",{"_index":2980,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1964,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["existssync",{"_index":932,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":945,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(dynamicconfigpath",{"_index":1849,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(filepath",{"_index":1856,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(hardconfigpath",{"_index":1850,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":2077,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":2431,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expiresin",{"_index":956,"title":{},"body":{"injectables/AuthService.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explode",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":612,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["expose",{"_index":2894,"title":{},"body":{"index.html":{}}}],["exposition",{"_index":3264,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":152,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["express.user",{"_index":158,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expression",{"_index":4029,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["extended",{"_index":2619,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["extends",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":3307,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extraction",{"_index":3686,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":2218,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2223,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f]{24",{"_index":538,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":471,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})/state",{"_index":1731,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["f]{24})/state')@apiparam({name",{"_index":1679,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["fa",{"_index":470,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":2862,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facsimiletelephonenumber",{"_index":2992,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["facultatifs",{"_index":3882,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":1133,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["failedjob",{"_index":1215,"title":{},"body":{"injectables/BackendsService.html":{}}}],["fails",{"_index":2038,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["false})@isoptional",{"_index":3022,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["famille",{"_index":3913,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fatal",{"_index":2155,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":2154,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal,error,warn,info,debug",{"_index":2986,"title":{},"body":{"index.html":{}}}],["fiabilit",{"_index":3330,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":2078,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":3487,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":1013,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":1624,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":1635,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["fieldname",{"_index":1627,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":1612,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":590,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1401,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["fields.dto.ts:8",{"_index":1402,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":2884,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["file.schema.endswith('.yml",{"_index":1908,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj",{"_index":1912,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.file.replace('.ui.yml",{"_index":1914,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj.file.replace('.yml",{"_index":2106,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fileobj.path}/${fileobj.file",{"_index":1913,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.source",{"_index":2107,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filepath",{"_index":1853,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files",{"_index":1905,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["files.length",{"_index":1910,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["filled",{"_index":3784,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":195,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter((k",{"_index":3152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter.dto.ts",{"_index":2459,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filter.dto.ts:1",{"_index":2460,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":482,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["filterquery",{"_index":191,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterschema",{"_index":480,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["fin",{"_index":3798,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{}}}],["finaux",{"_index":3357,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":182,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["find(filter",{"_index":205,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findall",{"_index":1822,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findandcount",{"_index":183,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":209,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findandcountassertions",{"_index":3535,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":3540,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions(service",{"_index":3541,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":184,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":211,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["findbyid(id",{"_index":2656,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidandupdate",{"_index":310,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findbyidassertions",{"_index":3542,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":3544,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions(service",{"_index":3547,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":185,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":213,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findone(schema",{"_index":1826,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findoneandupdate",{"_index":328,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findoneassertions",{"_index":3548,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":3553,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions(service",{"_index":3555,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fine",{"_index":2970,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1269,"title":{},"body":{"injectables/BackendsService.html":{}}}],["finishedat",{"_index":1198,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["firemessage(observer",{"_index":1094,"title":{},"body":{"controllers/BackendsController.html":{}}}],["fix",{"_index":2133,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixes",{"_index":3601,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flatten",{"_index":1885,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["flexibilit",{"_index":2892,"title":{},"body":{"index.html":{}}}],["flexible",{"_index":2954,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fois",{"_index":3599,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonction",{"_index":3456,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":3367,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":2961,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":3468,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":3551,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":3445,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["font",{"_index":2963,"title":{},"body":{"index.html":{}}}],["fontsrc",{"_index":1330,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbiddenexception",{"_index":920,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["form",{"_index":1479,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":1609,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":1610,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":1521,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":3240,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formcontroller",{"_index":1505,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["formcontroller.projection",{"_index":1527,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":1533,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formcreatedto:12",{"_index":1563,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":1558,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":1564,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":1557,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":1560,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":1562,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":1561,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":1559,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":1507,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formdto)@apiresponse({type",{"_index":1509,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":1565,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{}}}],["formfieldpart",{"_index":1590,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{}}}],["formfieldpartschema",{"_index":1602,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["formmodule",{"_index":1604,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":1501,"title":{},"body":{"classes/Form.html":{}}}],["formschema",{"_index":1503,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{},"miscellaneous/variables.html":{}}}],["formsectiondto",{"_index":1553,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{}}}],["formsectionpart",{"_index":1499,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formsectionpartschema",{"_index":1491,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["formservice",{"_index":1520,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["formtypelist",{"_index":1547,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["formtypes",{"_index":1496,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":1502,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formtypes[k",{"_index":3197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formulaire",{"_index":3724,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":3380,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":1516,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["found",{"_index":1733,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"miscellaneous/variables.html":{}}}],["found.dto.ts",{"_index":2445,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:6",{"_index":2447,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":2446,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["fourni",{"_index":4042,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":3316,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":3529,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":3389,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":3359,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":3460,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["framesrc",{"_index":1328,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":3739,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":3278,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontend",{"_index":2946,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fréquente",{"_index":2925,"title":{},"body":{"index.html":{}}}],["fs",{"_index":761,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["function",{"_index":442,"title":{},"body":{"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["garantir",{"_index":3328,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gcm",{"_index":2571,"title":{},"body":{"injectables/PasswdService.html":{}}}],["generate",{"_index":1041,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/typealiases.html":{}}}],["generate(@res",{"_index":1804,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(res",{"_index":1789,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(undefined",{"_index":1828,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["generateall",{"_index":1787,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["generateall(@res",{"_index":1802,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generateall(res",{"_index":1792,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generic_error",{"_index":2825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic_stopped",{"_index":2826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gestion",{"_index":2969,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get(':_id([0",{"_index":468,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["get(':schema",{"_index":1795,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get('count",{"_index":1664,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["get('session",{"_index":824,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined",{"_index":804,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":483,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getinfo",{"_index":691,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@res",{"_index":697,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo(res",{"_index":692,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":220,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":2400,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":3525,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpayload",{"_index":2711,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getqueue",{"_index":95,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getredisconnectiontoken",{"_index":99,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrequest",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath(errorschemadto",{"_index":3174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":3163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(notfounddto",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedresponsedto",{"_index":3191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getservicename",{"_index":150,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":886,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":898,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":2851,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":2469,"title":{},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{}}}],["gettoken'})@isstring",{"_index":2738,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken(@body",{"_index":2525,"title":{},"body":{"controllers/PasswdController.html":{}}}],["gettoken(asktoken",{"_index":2481,"title":{},"body":{"controllers/PasswdController.html":{}}}],["getvalidationerrors",{"_index":2420,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":2424,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":2712,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["github",{"_index":3351,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["givenname",{"_index":2993,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["grand",{"_index":3333,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["grille",{"_index":3770,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["group",{"_index":1867,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["groupindex",{"_index":1870,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["guides",{"_index":3355,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":2886,"title":{},"body":{"index.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":3873,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":4044,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":3608,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":3974,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":3859,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":3744,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":3257,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":3945,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["handled",{"_index":1988,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["handlevalidationerror",{"_index":1930,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["handlevalidationerror(error",{"_index":1934,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["hardconfig",{"_index":2102,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["hardconfigfiles",{"_index":1898,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfigpath",{"_index":1845,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hash",{"_index":644,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(data.password",{"_index":648,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.$set.password",{"_index":654,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.password",{"_index":651,"title":{},"body":{"injectables/AgentsService.html":{}}}],["header",{"_index":3901,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":807,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":832,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1310,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":1313,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["here",{"_index":1945,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["hidden",{"_index":521,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["hooks",{"_index":3720,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["horizontallayout",{"_index":1877,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["host",{"_index":661,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"index.html":{}}}],["host.switchtohttp",{"_index":668,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["http",{"_index":3895,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities",{"_index":3944,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1346,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":3207,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["httpexception",{"_index":1935,"title":{},"body":{"injectables/IdentitiesService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception.createbody",{"_index":2432,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["https://randomkeygen.com",{"_index":1342,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["httpstatus",{"_index":489,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":1705,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["httpstatus.bad_request",{"_index":1244,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":529,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.not_acceptable",{"_index":1112,"title":{},"body":{"controllers/BackendsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":2448,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":537,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.request_timeout",{"_index":1271,"title":{},"body":{"injectables/BackendsService.html":{}}}],["hzcdvqhscvdsdfdhodcjmufekfjvkas8",{"_index":822,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["héritent",{"_index":3469,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["iauthmoduleoptions",{"_index":864,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":3482,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icon",{"_index":1613,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":3760,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":504,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["identifiant",{"_index":3914,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identit",{"_index":3710,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identities",{"_index":1172,"title":{"classes/Identities.html":{}},"body":{"injectables/BackendsService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities).state",{"_index":1703,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identities.controller",{"_index":1923,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.dto",{"_index":1093,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identities.dto.ts",{"_index":2684,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["identities.dto.ts:7",{"_index":2686,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["identities.jsonforms.controller",{"_index":1818,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["identities.jsonforms.service",{"_index":1800,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identities.map((identity",{"_index":1232,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identities.name",{"_index":1928,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.push",{"_index":1246,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identities.service",{"_index":1685,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":2018,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":2003,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/identities.module",{"_index":2371,"title":{},"body":{"modules/ManagementModule.html":{}}}],["identitiescontroller",{"_index":1660,"title":{"controllers/IdentitiesController.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescontroller.projection",{"_index":1722,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identitiescreatedto",{"_index":1666,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["identitiescreatedto:14",{"_index":1783,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:20",{"_index":1782,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:25",{"_index":1781,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:44",{"_index":1780,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiesdocument",{"_index":1655,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdto",{"_index":1668,"title":{"classes/IdentitiesDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":3116,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesjsonformscontroller",{"_index":1784,"title":{"controllers/IdentitiesJsonFormsController.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identitiesjsonformsmodule",{"_index":1813,"title":{"modules/IdentitiesJsonformsModule.html":{}},"body":{"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesjsonformsservice",{"_index":1799,"title":{"injectables/IdentitiesJsonformsService.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesmodel",{"_index":3496,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1140,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesschema",{"_index":1658,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":1149,"title":{"injectables/IdentitiesService.html":{}},"body":{"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":1675,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":3118,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidation",{"_index":3378,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":1994,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identitiesvalidationfilter",{"_index":1689,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["identitiesvalidationmodule",{"_index":1924,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":1686,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":803,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity._id",{"_index":985,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":981,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.action",{"_index":1236,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.additionalfields.attributes",{"_index":1969,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["identity.additionalfields.validations",{"_index":1970,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["identity.decorator",{"_index":813,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.decorator.ts",{"_index":3135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identity.entityid",{"_index":998,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.identity._id",{"_index":1233,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.state",{"_index":1243,"title":{},"body":{"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{}}}],["identity.toobject",{"_index":973,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity_create",{"_index":2817,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_delete",{"_index":2819,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_change",{"_index":2821,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_reset",{"_index":2820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_update",{"_index":2818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identitycounter",{"_index":1040,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":1035,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":991,"title":{},"body":{"injectables/AuthService.html":{}}}],["identitylifecycle",{"_index":1648,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.inactive",{"_index":1657,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate",{"_index":1170,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":2327,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.on_error",{"_index":1219,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.processing",{"_index":1261,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.synced",{"_index":1201,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/IdentitiesService.html":{}}}],["identitystate.to_complete",{"_index":1704,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":1993,"title":{},"body":{"injectables/IdentitiesService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_sync",{"_index":1226,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.to_validate",{"_index":1734,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.unknown",{"_index":1656,"title":{},"body":{"classes/Identities.html":{}}}],["identitée",{"_index":1706,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identités",{"_index":2887,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["idschema",{"_index":3119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["idéal",{"_index":2965,"title":{},"body":{"index.html":{}}}],["ignoreexpiration",{"_index":2224,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":3655,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["imgsrc",{"_index":1331,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":3624,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implements",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["implémentation",{"_index":3708,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":3597,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":3421,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":3428,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(plugin.package).then((plugin",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["importance",{"_index":3652,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":3727,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["imported",{"_index":2837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["importer",{"_index":2949,"title":{},"body":{"index.html":{}}}],["imports",{"_index":624,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["in_progress",{"_index":2850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive",{"_index":2840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incluant",{"_index":3615,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["includeresultmetadata",{"_index":320,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["inclure",{"_index":3904,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["increment",{"_index":1019,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface.ts",{"_index":1012,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.logger.ts",{"_index":3129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["increment.plugin.ts",{"_index":3106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incrementby",{"_index":1014,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{}}}],["indiquant",{"_index":3958,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":3903,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":3936,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individuel",{"_index":3706,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["indépendant",{"_index":3283,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inestapplicationcontext",{"_index":3225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inetorgperson",{"_index":356,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":3200,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.uid",{"_index":1962,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["inetorgpersoncreatedto",{"_index":3018,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:11",{"_index":3050,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:15",{"_index":3053,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:20",{"_index":3042,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:25",{"_index":3043,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:30",{"_index":3044,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:35",{"_index":3045,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:40",{"_index":3046,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:46",{"_index":3047,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:51",{"_index":3048,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:56",{"_index":3049,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:61",{"_index":3051,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:66",{"_index":3052,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:7",{"_index":3041,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:71",{"_index":3054,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:76",{"_index":3055,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":1763,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":3120,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":1646,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersonupdatedto",{"_index":3039,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["informations",{"_index":2909,"title":{},"body":{"index.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["initialise",{"_index":3411,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialize",{"_index":1876,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["inject",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["injectmodel",{"_index":641,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["injectmodel(form.name",{"_index":1641,"title":{},"body":{"injectables/FormService.html":{}}}],["injectmodel(identities.name",{"_index":1943,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["injectredis",{"_index":924,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/PasswdService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["input",{"_index":3778,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["inputs",{"_index":451,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["inquirer",{"_index":391,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inquirerservice",{"_index":377,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["instance",{"_index":3399,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instanceof",{"_index":1725,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":3414,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instructions",{"_index":3747,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["integer",{"_index":3237,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["interactions",{"_index":3845,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interagir",{"_index":3398,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"index.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["interfaces/service.schema.interface",{"_index":230,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["internal",{"_index":675,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":2117,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloggeroptions",{"_index":2115,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloglevel",{"_index":2112,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":2109,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["introduction",{"_index":3440,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":2080,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":3394,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":3276,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":3715,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":3719,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":1699,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"miscellaneous/variables.html":{}}}],["invalid_credentials",{"_index":2829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_json_response",{"_index":2830,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_login",{"_index":2828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalide",{"_index":2084,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["invalides",{"_index":1717,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["invalidobjectclassadditionalfieldsstub",{"_index":3123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidrequiredadditionalfieldsstub",{"_index":3125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidschemastub",{"_index":3126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidtypeadditionalfieldsstub",{"_index":3127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ioredis",{"_index":102,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["isarray",{"_index":582,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SyncIdentitiesDto.html":{}}}],["isarray()@apiproperty({type",{"_index":2685,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["isarray()@isstring({each",{"_index":562,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean",{"_index":581,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":558,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":2389,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":2384,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":2292,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isemail",{"_index":580,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({required",{"_index":3027,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":555,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1360,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isenum(actiontype",{"_index":1475,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isenum(configobjecttype",{"_index":1362,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(formtypelist",{"_index":1555,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":1546,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":1625,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":1622,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(identitylifecycle",{"_index":1773,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isenum(identitystate",{"_index":1772,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isglobal",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["isip",{"_index":2295,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":2296,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid",{"_index":583,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@apiproperty({example",{"_index":775,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":593,"title":{},"body":{"classes/AgentsDto.html":{},"classes/KeyringsDto.html":{}}}],["isnotempty",{"_index":578,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ExecuteJobDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePartDTO.html":{}}}],["isnotempty()@isenum(actiontype)@apiproperty({type",{"_index":1470,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnumber",{"_index":1588,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":1582,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":1768,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":2677,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isnumber()@isoptional()@isenum(identitylifecycle)@apiproperty({enum",{"_index":1766,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject",{"_index":1403,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":1536,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":573,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":1550,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":1764,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":1615,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isoptional",{"_index":584,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isobject()@apiproperty({type",{"_index":1473,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":3029,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":1745,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":577,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPartDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":1542,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":1287,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isstring()@apiproperty({required",{"_index":3021,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1357,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":560,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":552,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":1538,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring({each",{"_index":2288,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["issyncedjob",{"_index":1192,"title":{},"body":{"injectables/BackendsService.html":{}}}],["isunprotected",{"_index":848,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["it's",{"_index":1986,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["it('should",{"_index":3539,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["item",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1748,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["iv",{"_index":2565,"title":{},"body":{"injectables/PasswdService.html":{}}}],["iverifyoptions",{"_index":2321,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":3365,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":3439,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":3575,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["job",{"_index":1115,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.discard",{"_index":1268,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.dto",{"_index":1090,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job.dto.ts",{"_index":1469,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:13",{"_index":1472,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:18",{"_index":1474,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:9",{"_index":1471,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.id",{"_index":1195,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.id}::completed",{"_index":1204,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.returnvalue",{"_index":1199,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":1262,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job:added",{"_index":1128,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:completed",{"_index":1131,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:failed",{"_index":1134,"title":{},"body":{"controllers/BackendsController.html":{}}}],["jobfailed",{"_index":1266,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobid",{"_index":1194,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobs",{"_index":1177,"title":{"classes/Jobs.html":{}},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/PasswdService.html":{},"classes/Tasks.html":{}}}],["jobs.controller",{"_index":2203,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":2204,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":2202,"title":{},"body":{"modules/JobsModule.html":{},"controllers/TasksController.html":{}}}],["jobs/_enums/state.enum",{"_index":1176,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobs/_schemas/jobs.schema",{"_index":1178,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobs/jobs.module",{"_index":1146,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["jobs/jobs.service",{"_index":1179,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobscompleted",{"_index":1190,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobsdocument",{"_index":2193,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["jobsmodule",{"_index":1141,"title":{"modules/JobsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsoptions",{"_index":1478,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["jobsschema",{"_index":2194,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{},"miscellaneous/variables.html":{}}}],["jobsservice",{"_index":1150,"title":{"injectables/JobsService.html":{}},"body":{"injectables/BackendsService.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/TasksController.html":{},"overview.html":{}}}],["jobstate",{"_index":1175,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"miscellaneous/enumerations.html":{}}}],["jobstate.completed",{"_index":1197,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstate.created",{"_index":1259,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["jobstate.failed",{"_index":1216,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstate.in_progress",{"_index":1212,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstore",{"_index":1253,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstore.toobject",{"_index":1278,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstoreupdated",{"_index":1264,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jour",{"_index":3518,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["json",{"_index":759,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":1000,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":976,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(plaintext",{"_index":2599,"title":{},"body":{"injectables/PasswdService.html":{}}}],["json.parse(readfilesync('package.json",{"_index":766,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":946,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(result",{"_index":2590,"title":{},"body":{"injectables/PasswdService.html":{}}}],["json.stringify",{"_index":961,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PasswdService.html":{}}}],["json.stringify(data",{"_index":1947,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["json.stringify(error.getvalidations",{"_index":1977,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["json.stringify(loginfos)].join",{"_index":289,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":237,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(validations",{"_index":1440,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonform",{"_index":1859,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonformpath",{"_index":1890,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms",{"_index":1852,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms')}/${schema",{"_index":1892,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms/identities.jsonforms.module",{"_index":1927,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonforms/identities.jsonforms.service",{"_index":1926,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonschema",{"_index":1857,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required",{"_index":1865,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required.includes(key",{"_index":1866,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonwebtoken",{"_index":929,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":1441,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":2226,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{}}}],["justifi",{"_index":3373,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1345,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":796,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":2222,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":980,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":995,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":867,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":875,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":868,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":928,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":890,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":859,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["k",{"_index":2581,"title":{},"body":{"injectables/PasswdService.html":{}}}],["keep",{"_index":1037,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"classes/ApiSession.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{}}}],["key._id.tostring",{"_index":2266,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.name",{"_index":2267,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat",{"_index":2260,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat.gettime",{"_index":2262,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.tojson",{"_index":2259,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.token",{"_index":2268,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyring",{"_index":2255,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyrings",{"_index":2233,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["keyrings.command",{"_index":1300,"title":{},"body":{"modules/CliModule.html":{}}}],["keyrings.controller",{"_index":2309,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":2310,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":2308,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":872,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["keyrings/keyrings.service",{"_index":936,"title":{},"body":{"injectables/AuthService.html":{}}}],["keyringscommand",{"_index":1298,"title":{"classes/KeyringsCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscommand.registerwithsubcommands",{"_index":1305,"title":{},"body":{"modules/CliModule.html":{}}}],["keyringscontroller",{"_index":2269,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{}}}],["keyringscontroller.projection",{"_index":2282,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatecommand",{"_index":2254,"title":{"classes/KeyringsCreateCommand.html":{}},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscreatedto",{"_index":2249,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{}}}],["keyringscreatedto:14",{"_index":2303,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:18",{"_index":2300,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:21",{"_index":2302,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":2301,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatequestions",{"_index":1299,"title":{"classes/KeyringsCreateQuestions.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringsdocument",{"_index":2241,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":2272,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["keyringsmodule",{"_index":858,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":2243,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"miscellaneous/variables.html":{}}}],["keyringsservice",{"_index":889,"title":{"injectables/KeyringsService.html":{}},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"overview.html":{}}}],["key}.yml",{"_index":2079,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ko",{"_index":2532,"title":{},"body":{"controllers/PasswdController.html":{}}}],["ko'})@useguards(undefined",{"_index":2493,"title":{},"body":{"controllers/PasswdController.html":{}}}],["kradihsoy/lt",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["l'aide",{"_index":3871,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":3311,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":3300,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":3285,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":3975,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":3898,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":3340,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entrée",{"_index":4043,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":3671,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":3657,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":3794,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":1736,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'initiation",{"_index":3586,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":3415,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":3589,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":3907,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":3909,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'orchestrateur",{"_index":2880,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":3653,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":3799,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'échec",{"_index":3616,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":3375,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":3947,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["la",{"_index":1958,"title":{},"body":{"injectables/IdentitiesService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":1574,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":2994,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":3645,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["langage",{"_index":3284,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":2928,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["lastchangedat",{"_index":2661,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastparam",{"_index":2135,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["lastupdatedat",{"_index":299,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":298,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["ldap",{"_index":2907,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":2870,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":1760,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["legend",{"_index":608,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["les",{"_index":2062,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lessthan",{"_index":4000,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["leurs",{"_index":3962,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":2140,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"index.html":{}}}],["levées",{"_index":3338,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liaison",{"_index":3768,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lib",{"_index":2641,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":3056,"title":{"license.html":{}},"body":{"properties.html":{}}}],["lifecycle",{"_index":1644,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifestep",{"_index":3756,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":3875,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["limit",{"_index":1318,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"miscellaneous/variables.html":{}}}],["lire",{"_index":3815,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":3690,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list_backends",{"_index":2815,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liste",{"_index":3665,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listerez",{"_index":3973,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":418,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["livrables",{"_index":3339,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":3369,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":3404,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["local",{"_index":436,"title":{},"body":{"classes/Agents.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["localstrategy",{"_index":860,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":2147,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"index.html":{}}}],["log(message",{"_index":2146,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["log.levels",{"_index":3213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log.setlevel",{"_index":3214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log_level=info",{"_index":2987,"title":{},"body":{"index.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{}}}],["logger(backendscontroller.name",{"_index":1104,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(passwdcontroller.name",{"_index":2510,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":161,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":2354,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":1439,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`atempt",{"_index":2227,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.debug(`observer",{"_index":1099,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.debug(`try",{"_index":2324,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger.debug(exception['message",{"_index":666,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error(`observer",{"_index":1102,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.log(`upserting",{"_index":1946,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["logger.name",{"_index":2355,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":2348,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":1394,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggercontroller",{"_index":2345,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggerdocument",{"_index":2337,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1384,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggername",{"_index":1096,"title":{},"body":{"controllers/BackendsController.html":{}}}],["loggerschema",{"_index":2339,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":2347,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["logic",{"_index":1944,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["loginfos",{"_index":282,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["logique",{"_index":1959,"title":{},"body":{"injectables/IdentitiesService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":1315,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["loglevels",{"_index":3128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":789,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":831,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":795,"title":{},"body":{"controllers/AuthController.html":{}}}],["logprefix",{"_index":1936,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["logs",{"_index":2121,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["longueur",{"_index":4023,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":3791,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lowercase",{"_index":4036,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["léments",{"_index":3429,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":3938,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["mail",{"_index":774,"title":{},"body":{"classes/AskTokenDto.html":{},"injectables/PasswdService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mail'})@isstring",{"_index":782,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["maintenabilit",{"_index":3691,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":3262,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":3336,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintient",{"_index":2888,"title":{},"body":{"index.html":{}}}],["mais",{"_index":1710,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["majuscule.example",{"_index":4039,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["management",{"_index":2361,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":2370,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":2363,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":3896,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":3493,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/identities.dto",{"_index":3478,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":3479,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":1171,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_schemas/identities.schema",{"_index":1173,"title":{},"body":{"injectables/BackendsService.html":{}}}],["management/identities/identities.module",{"_index":1145,"title":{},"body":{"modules/BackendsModule.html":{}}}],["management/identities/identities.service",{"_index":1174,"title":{},"body":{"injectables/BackendsService.html":{}}}],["management/identities/jsonforms",{"_index":1786,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["management/identities/validation",{"_index":1996,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["management/management.module",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["managementcontroller",{"_index":2359,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["managementmodule",{"_index":705,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":2362,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"overview.html":{}}}],["manipulation",{"_index":2948,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":3309,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manquant",{"_index":2061,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":1715,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manuels",{"_index":3353,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["map",{"_index":1490,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["map((group",{"_index":1884,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["map((k",{"_index":3154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":4027,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["math.floor(index",{"_index":1871,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["math.random().tostring(36).slice",{"_index":2640,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["matière",{"_index":3893,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":3377,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":3983,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":3990,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum",{"_index":3984,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":3991,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":3982,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":4025,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxretriesperrequest",{"_index":1336,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":3764,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["meilleure",{"_index":3698,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memory",{"_index":2404,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["message",{"_index":389,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["messageevent",{"_index":1098,"title":{},"body":{"controllers/BackendsController.html":{}}}],["messages",{"_index":3693,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":3846,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["meta_unprotected",{"_index":847,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataDto.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":313,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata.createdby",{"_index":312,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedat",{"_index":317,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedby",{"_index":316,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata['context",{"_index":2161,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":2163,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":1535,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["metadatadto:12",{"_index":1551,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["metadatapart",{"_index":126,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["metadatapartdto",{"_index":1549,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{}}}],["metadatapartschema",{"_index":129,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["methode",{"_index":3467,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["methodstubs",{"_index":3625,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":3581,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":3816,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["min",{"_index":3987,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mindate",{"_index":3994,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimales",{"_index":3932,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimum",{"_index":3988,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":3995,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":3986,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":4022,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":4037,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["miscellaneous",{"_index":2799,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":3301,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":3517,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["missing",{"_index":1698,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["missingattributeadditionalfieldsstub",{"_index":3132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mixedvalue",{"_index":353,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mobile",{"_index":2995,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mock",{"_index":3446,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":3619,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":940,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":188,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":3803,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":3516,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":1024,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":1031,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":3839,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modification",{"_index":3877,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":3685,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modifyresult",{"_index":223,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":2959,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":166,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":3528,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":172,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":173,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":606,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":101,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"injectables/PasswdService.html":{},"dependencies.html":{}}}],["modèle",{"_index":3466,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":3448,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["monemail@mondomaine.com",{"_index":780,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongo",{"_index":3678,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":2392,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":2393,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":232,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb.countoptions",{"_index":242,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1338,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":2390,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":3510,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":3508,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":3507,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":3512,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":2397,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":2406,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":134,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":2126,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosebasequeryoptions",{"_index":224,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["mongoosemodule",{"_index":620,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":625,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosemoduleoptions",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":712,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongoosevalidationfilter",{"_index":723,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongooseValidationFilter.html":{}}}],["morethan",{"_index":3998,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mots",{"_index":2934,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":3148,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":3211,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["much",{"_index":1021,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":2857,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":1030,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mynewpassword",{"_index":1288,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":1290,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mécanismes",{"_index":3303,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":3537,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":3417,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["n",{"_index":2979,"title":{},"body":{"index.html":{}}}],["n'avez",{"_index":3950,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":2065,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":3419,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["name_queue=backend",{"_index":2989,"title":{},"body":{"index.html":{}}}],["namequeue",{"_index":1316,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["navigation",{"_index":3858,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":3856,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":1196,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["negative",{"_index":4005,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":381,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["nestjs",{"_index":100,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"injectables/PasswdService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/bullmq",{"_index":708,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":103,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/IdentitiesModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/ManagementModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":153,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":869,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":132,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":810,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/StatePart.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newidentitydata",{"_index":3497,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newpassword",{"_index":1284,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{}}}],["next",{"_index":393,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ErrorSchemaDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["niveau",{"_index":3249,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":3269,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":3471,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["node:crypto",{"_index":2314,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["nodejs",{"_index":2929,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["noinspection",{"_index":253,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesService.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":2988,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":3334,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":3963,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":3928,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":3630,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":3245,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["normes",{"_index":3343,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosortedges",{"_index":2092,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["notamment",{"_index":3277,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notez",{"_index":3908,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":3554,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":2443,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{}}}],["notfoundexception",{"_index":222,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["notfoundoptions",{"_index":3175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nounknown",{"_index":4018,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":3463,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nouveau",{"_index":3711,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":3313,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":3763,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":3413,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["now",{"_index":1207,"title":{},"body":{"injectables/BackendsService.html":{}}}],["null",{"_index":162,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/Jobs.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["numérations",{"_index":3737,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":3752,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":3279,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":3906,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitant",{"_index":2968,"title":{},"body":{"index.html":{}}}],["nécessitent",{"_index":3426,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":4006,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":3627,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["object",{"_index":261,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.keys(agentstate",{"_index":3151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(attributes",{"_index":2055,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(data).length",{"_index":2585,"title":{},"body":{"injectables/PasswdService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":2437,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(formtypes",{"_index":3196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(jsonschema.properties",{"_index":1868,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(jsonschema.properties).map((key",{"_index":1862,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(tokendata).length",{"_index":2602,"title":{},"body":{"injectables/PasswdService.html":{}}}],["object.keys(validations).join",{"_index":1437,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values",{"_index":283,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["object.values(error.constraints)[0",{"_index":1449,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":1455,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(result",{"_index":1061,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["objectclass",{"_index":3925,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":342,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":2063,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":2075,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":2455,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":502,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["objectif",{"_index":3254,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objectsrc",{"_index":1327,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":3626,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":3714,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligatoires",{"_index":3881,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":844,"title":{},"body":{"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{}}}],["observable((observer",{"_index":1125,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observer.next",{"_index":1097,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observers",{"_index":3807,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ochestrator",{"_index":2854,"title":{},"body":{"index.html":{}}}],["official",{"_index":2838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["offline",{"_index":959,"title":{},"body":{"injectables/AuthService.html":{}}}],["offre",{"_index":2951,"title":{},"body":{"index.html":{}}}],["ok",{"_index":2531,"title":{},"body":{"controllers/PasswdController.html":{},"miscellaneous/enumerations.html":{}}}],["ok'})@apiresponse({status",{"_index":2492,"title":{},"body":{"controllers/PasswdController.html":{}}}],["old",{"_index":1291,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/PasswdController.html":{}}}],["oldpassword",{"_index":1285,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldpasswords",{"_index":2628,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":927,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["omit(options",{"_index":986,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(user.toobject",{"_index":2328,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":2847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one",{"_index":1987,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["onglet",{"_index":3869,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":3852,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{}}}],["open",{"_index":2859,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":2875,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operator",{"_index":3814,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":3332,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":2132,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":2136,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionals",{"_index":1249,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionals['processedat",{"_index":1251,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionals['state",{"_index":1252,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionlabel",{"_index":3802,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":2919,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":192,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options).exec",{"_index":241,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["options.createdby",{"_index":2159,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.interface",{"_index":1184,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options.interface.ts",{"_index":1477,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["options.limit",{"_index":2618,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":2162,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":2164,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.synctimeout",{"_index":1263,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options.target",{"_index":2137,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":2141,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":2138,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options?.async",{"_index":1250,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.comment",{"_index":1257,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.job",{"_index":1248,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.scopes",{"_index":978,"title":{},"body":{"injectables/AuthService.html":{}}}],["options?.task",{"_index":1258,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.timeoutdiscard",{"_index":1267,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options['expiresin",{"_index":2261,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["opérations",{"_index":2902,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["orchestrateur",{"_index":2885,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["organiser",{"_index":3862,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["original",{"_index":1985,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["otherwise",{"_index":2039,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["otpkey",{"_index":2629,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1716,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":618,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["outil",{"_index":2964,"title":{},"body":{"index.html":{}}}],["output",{"_index":1051,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["overview",{"_index":3061,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1023,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":1015,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":1022,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":1027,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["package",{"_index":755,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packagejson",{"_index":758,"title":{},"body":{"injectables/AppService.html":{}}}],["page",{"_index":3251,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated",{"_index":3102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginated.decorator",{"_index":514,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["paginated.decorator.ts",{"_index":3100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginatedfilterdto",{"_index":2457,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"classes/PaginatedFilterDto.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{}}}],["pair",{"_index":1757,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["panneaux",{"_index":3866,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["par",{"_index":2982,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["param",{"_index":490,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/KeyringsController.html":{}}}],["param('_id",{"_index":540,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["param('schema",{"_index":1811,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["params",{"_index":1255,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["paramètre",{"_index":3620,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":3409,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parentid",{"_index":533,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":1835,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(filepath",{"_index":1858,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(path",{"_index":2081,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseemail",{"_index":361,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseemail(val",{"_index":364,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parseint(agentstate[k",{"_index":3155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(formtypes[k",{"_index":3198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseintpipe",{"_index":1087,"title":{},"body":{"controllers/BackendsController.html":{}}}],["parsename",{"_index":2297,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["parsename(val",{"_index":2253,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["parsepassword",{"_index":362,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parsepassword(val",{"_index":369,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parser",{"_index":2615,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["parseusername",{"_index":363,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseusername(val",{"_index":372,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["partial",{"_index":682,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AppService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/typealiases.html":{}}}],["partialprojectiontype",{"_index":515,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":576,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":592,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(formdto",{"_index":1556,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":1779,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":3040,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["particulier",{"_index":3583,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":3486,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partir",{"_index":2955,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts/metadata.part.dto",{"_index":2376,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":1554,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":1500,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":588,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":587,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["pas",{"_index":2066,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["passe",{"_index":2935,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passer",{"_index":3870,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":1311,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":865,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":873,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2217,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2209,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2225,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":2468,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["passwd.controller",{"_index":2548,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":2500,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwdcontroller",{"_index":2466,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwdmodule",{"_index":2543,"title":{"modules/PasswdModule.html":{}},"body":{"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":2499,"title":{"injectables/PasswdService.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"overview.html":{}}}],["password",{"_index":370,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"miscellaneous/variables.html":{}}}],["password'})@apiresponse({status",{"_index":2473,"title":{},"body":{"controllers/PasswdController.html":{}}}],["password'})@isstring",{"_index":2622,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto",{"_index":2503,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["password.dto.ts",{"_index":1283,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":2625,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1292,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:13",{"_index":2623,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":1289,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1286,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["patch",{"_index":491,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["patch(':_id([0",{"_index":486,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["path",{"_index":931,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"interfaces/MongoosePlugin.html":{}}}],["path.replace('validations",{"_index":1891,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["path}/${schema",{"_index":1854,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["pattern",{"_index":4026,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["patternproperties",{"_index":3236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paul.bismuth",{"_index":776,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{}}}],["payload",{"_index":905,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/SyncIdentitiesDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":2160,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.failedreason",{"_index":1217,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.identity",{"_index":968,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity._id",{"_index":971,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity.token",{"_index":972,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jobid",{"_index":1209,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.jti].join",{"_index":975,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.length",{"_index":1239,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.level",{"_index":2167,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":2158,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.returnvalue",{"_index":1222,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.scopes.includes('api",{"_index":969,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.scopes.includes('offline",{"_index":967,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":2720,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":3082,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":2229,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":2824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":3331,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":3337,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["perl",{"_index":2942,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["permet",{"_index":2889,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":2947,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":3310,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["persistauthorization",{"_index":1349,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personnalis",{"_index":3827,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":3840,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":3835,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personne",{"_index":4045,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peut",{"_index":3955,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":3631,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["pick",{"_index":763,"title":{},"body":{"injectables/AppService.html":{}}}],["pick(this.package",{"_index":769,"title":{},"body":{"injectables/AppService.html":{}}}],["pickprojectionhelper",{"_index":507,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["ping_target",{"_index":2816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":2452,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["plac",{"_index":3965,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":3302,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":3874,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["plaintext",{"_index":2596,"title":{},"body":{"injectables/PasswdService.html":{}}}],["planning",{"_index":3361,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":3349,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plugin",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.default",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.options",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugins",{"_index":1319,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":3672,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":3838,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["port",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"index.html":{}}}],["positionnement",{"_index":3769,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":4003,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":4004,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["possibilit",{"_index":2910,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["possible",{"_index":3272,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":492,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post('change",{"_index":2511,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":2472,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('execute",{"_index":1075,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('generate",{"_index":1790,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall",{"_index":1793,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('gettoken",{"_index":2524,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('gettoken')@apioperation({summary",{"_index":2482,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('local",{"_index":816,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined",{"_index":793,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":797,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":800,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":2537,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":2491,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('sync",{"_index":1085,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall",{"_index":1081,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('upsert",{"_index":1719,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('upsert')@apicreatedecorator(identitiescreatedto",{"_index":1682,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('verifytoken",{"_index":2530,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('verifytoken')@apioperation({summary",{"_index":2497,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":463,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":1508,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":1667,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":2271,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["postaladdress",{"_index":2996,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":2861,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":3967,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["powershell",{"_index":2941,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":3275,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pre",{"_index":3721,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preferredlanguage",{"_index":2997,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":3663,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":3621,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":3465,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["principal",{"_index":3822,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":3286,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":3261,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":2879,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prise",{"_index":3837,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":3688,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["process.env.node_env",{"_index":937,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['sesame_jwt_secret",{"_index":1344,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_log_level",{"_index":1320,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mongo_uri",{"_index":1337,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_name_queue",{"_index":1321,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_redis_uri",{"_index":1333,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processedat",{"_index":1213,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["processing",{"_index":2844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processor",{"_index":3385,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":2971,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["production",{"_index":938,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["profile.commonname",{"_index":3805,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["projection",{"_index":206,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":509,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type",{"_index":517,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":3079,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":207,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projet",{"_index":2876,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":3259,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":3702,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":3606,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise",{"_index":196,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise.reject(new",{"_index":3643,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":2088,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":131,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":2664,"title":{},"body":{"classes/StatePart.html":{},"classes/inetOrgPerson.html":{}}}],["prop({type",{"_index":128,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["properties/${key",{"_index":1864,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["property",{"_index":1025,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{}}}],["propertynames",{"_index":4019,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propres",{"_index":3758,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriét",{"_index":3238,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":3243,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protocoles",{"_index":3297,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["provide",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["providers",{"_index":611,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provisional",{"_index":2839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["précis",{"_index":3366,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":3669,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":3441,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":2918,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["public()@sse('sse",{"_index":1078,"title":{},"body":{"controllers/BackendsController.html":{}}}],["puissante",{"_index":2953,"title":{},"body":{"index.html":{}}}],["python",{"_index":2940,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":3820,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":3829,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":3857,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":3865,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":3863,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":3964,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":3929,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["quasar",{"_index":3740,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":2921,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":225,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"controllers/BackendsController.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["query('async",{"_index":1105,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('key",{"_index":1122,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('timeoutdiscard",{"_index":1110,"title":{},"body":{"controllers/BackendsController.html":{}}}],["queryoptions",{"_index":202,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["question",{"_index":378,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["question({message",{"_index":365,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questions",{"_index":388,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questionset",{"_index":379,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["queue",{"_index":79,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('application.namequeue",{"_index":115,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queue(this.config.get('namequeue",{"_index":3407,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('application.namequeue",{"_index":118,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":3408,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":3379,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":3425,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["racine",{"_index":3250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radash",{"_index":764,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["radio",{"_index":3780,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["randombytes",{"_index":922,"title":{},"body":{"injectables/AuthService.html":{},"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex",{"_index":2316,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":987,"title":{},"body":{"injectables/AuthService.html":{}}}],["rationalisant",{"_index":3612,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rawbodybuffer(options",{"_index":2616,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":2610,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawresult",{"_index":1972,"title":{},"body":{"injectables/IdentitiesService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["reached",{"_index":1277,"title":{},"body":{"injectables/BackendsService.html":{}}}],["read",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["read(@param('_id",{"_index":1529,"title":{},"body":{"controllers/FormController.html":{}}}],["read(_id",{"_index":467,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["readdirsync",{"_index":1838,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(dynamicconfigpath).map((file",{"_index":1901,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(hardconfigpath).map((file",{"_index":1899,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfilesync",{"_index":760,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["real",{"_index":823,"title":{},"body":{"controllers/AuthController.html":{}}}],["received",{"_index":2737,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["record",{"_index":344,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["redirection",{"_index":3792,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":1482,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redis",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1334,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redis_host=redis",{"_index":2974,"title":{},"body":{"index.html":{}}}],["redis_password=xx",{"_index":2985,"title":{},"body":{"index.html":{}}}],["redis_port=6379",{"_index":2975,"title":{},"body":{"index.html":{}}}],["redis_user=monuser",{"_index":2984,"title":{},"body":{"index.html":{}}}],["redismodule",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redismodule.forrootasync",{"_index":742,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redisoptions",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["reduce((acc",{"_index":1869,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ref",{"_index":167,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1397,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reflector",{"_index":839,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["refresh",{"_index":790,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":828,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":799,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":829,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":990,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":881,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":882,"title":{},"body":{"injectables/AuthService.html":{}}}],["regenerating",{"_index":954,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":4028,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["register",{"_index":1386,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reject",{"_index":2056,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejects",{"_index":2034,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":3703,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["remarques",{"_index":4047,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["remove",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remove(@param('_id",{"_index":1532,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(_id",{"_index":474,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":3749,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":2923,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":3828,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":3867,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendre",{"_index":3848,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":3836,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":887,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":901,"title":{},"body":{"injectables/AuthService.html":{}}}],["renvoie",{"_index":3701,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["représent",{"_index":3751,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":3400,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":3709,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":3629,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":3713,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":156,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"miscellaneous/variables.html":{}}}],["req?.user",{"_index":3229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqidentity",{"_index":811,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["request.query['debug",{"_index":1442,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["request.user",{"_index":3222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestcontext",{"_index":155,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":163,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":717,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttimeoutexception",{"_index":1168,"title":{},"body":{"injectables/BackendsService.html":{}}}],["requete",{"_index":3883,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["required",{"_index":345,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/Jobs.html":{},"classes/Logger.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requis",{"_index":1754,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":3933,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":3880,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requêtes",{"_index":3894,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":466,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["res.json",{"_index":698,"title":{},"body":{"controllers/AppController.html":{}}}],["res.socket.on('close",{"_index":1123,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(200).json",{"_index":2529,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(200).json(data",{"_index":2522,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(200).json(resetdata",{"_index":2542,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(403).json(data",{"_index":2523,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":1108,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":1727,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["res.status(httpstatus.created).json",{"_index":527,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":536,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":834,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":1718,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["reset",{"_index":617,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["reset(@body",{"_index":2538,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(data",{"_index":2489,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["resetdata",{"_index":2539,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetdata.status",{"_index":2541,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reseting",{"_index":2484,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetpassworddto",{"_index":2490,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{}}}],["resetvalidation",{"_index":3843,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":930,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(process.cwd",{"_index":943,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolveconfigpath",{"_index":2022,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolveconfigpath(key",{"_index":2027,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolvejsonformpath",{"_index":1823,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath(schema",{"_index":1831,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolves",{"_index":2032,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["respecter",{"_index":3342,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":4031,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":3370,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":461,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{}}}],["response.decorator",{"_index":501,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["response.decorator.ts",{"_index":3099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":2461,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:12",{"_index":2463,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":2464,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":2465,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":2429,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":672,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["responsemodel",{"_index":3165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responseoptions",{"_index":3167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsible",{"_index":2020,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ressource",{"_index":3900,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":2897,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["result",{"_index":327,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/PasswdService.html":{}}}],["result.interface",{"_index":2743,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts",{"_index":1048,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts:9",{"_index":2742,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{}}}],["result.push",{"_index":1915,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["result[identity.identity._id",{"_index":1238,"title":{},"body":{"injectables/BackendsService.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["rethrow",{"_index":1984,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["retour",{"_index":3640,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":3519,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":3654,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":3458,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retrieve",{"_index":2099,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["roles",{"_index":551,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["round",{"_index":4011,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1389,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["routermodule.register",{"_index":1395,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["row",{"_index":1575,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["run",{"_index":447,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["run(inputs",{"_index":396,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["runvalidators",{"_index":319,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["rxjs",{"_index":846,"title":{},"body":{"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"dependencies.html":{}}}],["règles",{"_index":2917,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupér",{"_index":3742,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["référence",{"_index":3622,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":3459,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":3675,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":4030,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réponse",{"_index":3886,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":3358,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":3651,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":3707,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":2624,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["save",{"_index":441,"title":{},"body":{"classes/Agents.html":{},"classes/Logger.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":198,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["schema",{"_index":351,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":1460,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:12",{"_index":1466,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":1462,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":1465,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":1463,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.endswith('.ui.yml",{"_index":1887,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.endswith('.yml",{"_index":1843,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.org/draft",{"_index":3208,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.replace('.yml",{"_index":1888,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schemafactory",{"_index":352,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/DataPart.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":358,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(agents).pre",{"_index":440,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(datapart",{"_index":1410,"title":{},"body":{"classes/DataPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(form",{"_index":1504,"title":{},"body":{"classes/Form.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":1603,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":1636,"title":{},"body":{"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(identities",{"_index":1659,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(inetorgperson",{"_index":3017,"title":{},"body":{"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(jobs",{"_index":2195,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":2244,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(logger).pre",{"_index":2340,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":2382,"title":{},"body":{"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(securitypart).pre",{"_index":2638,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(statepart",{"_index":2675,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tasks",{"_index":2691,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":1903,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":231,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["schematics",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["schema}.ui.yml",{"_index":1918,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schéma",{"_index":2906,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2891,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":1424,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/ValidationRecursive.html":{}}}],["scope.request",{"_index":1425,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":958,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["scopes.push(...options.scopes",{"_index":979,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":3733,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":2900,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1332,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":3614,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":2877,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":459,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["search(@res",{"_index":1810,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["search(res",{"_index":478,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["searchall",{"_index":1788,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(@res",{"_index":1808,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(res",{"_index":1797,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchfield",{"_index":3804,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":481,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["searchfilterschema",{"_index":479,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["secondary",{"_index":781,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secret",{"_index":1343,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":2630,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":2220,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":3726,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":1626,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":1483,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["security",{"_index":414,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["securitypart",{"_index":424,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["securitypartdto",{"_index":565,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["securitypartschema",{"_index":425,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1341,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["seedrequestcontextid",{"_index":3137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sein",{"_index":3476,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":3777,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1326,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["selon",{"_index":3610,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["send",{"_index":1100,"title":{},"body":{"controllers/BackendsController.html":{}}}],["senders",{"_index":3781,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sensibles",{"_index":3306,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sera",{"_index":3362,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["server",{"_index":676,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["serveur",{"_index":2936,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":2874,"title":{},"body":{"index.html":{}}}],["service",{"_index":251,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["servicename",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":3390,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":229,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["ses",{"_index":2960,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":977,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["session",{"_index":287,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["session(@res",{"_index":826,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":802,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ts",{"_index":679,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:2",{"_index":684,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:3",{"_index":686,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:4",{"_index":685,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":683,"title":{},"body":{"classes/ApiSession.html":{}}}],["set",{"_index":314,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"injectables/IdentitiesService.html":{}}}],["set([...identity.additionalfields.objectclasses",{"_index":1967,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["setloglevel",{"_index":3139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setoninsert",{"_index":311,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["settimeout",{"_index":2128,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["showfriendlyerrorstack",{"_index":1335,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["showunfocuseddescription",{"_index":1882,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["si",{"_index":2977,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["significatif",{"_index":3372,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":3658,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":3662,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":3587,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["simplifie",{"_index":3596,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":3520,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":3668,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":3646,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":3473,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulées",{"_index":3609,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":3449,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":1029,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["skip",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["slots",{"_index":3841,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sn",{"_index":2998,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["soft",{"_index":1991,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["solution",{"_index":2952,"title":{},"body":{"index.html":{}}}],["sommaire",{"_index":3725,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":2958,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":1714,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":3499,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sorties",{"_index":3281,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["soumission",{"_index":3789,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sources",{"_index":2858,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":3759,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sprints",{"_index":3364,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":3641,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":3952,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":3422,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":3648,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":3989,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":3611,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../action",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../additionalfields.part.schema.ts",{"_index":3092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../addtionalfields.dto.stub.ts",{"_index":3091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../agent",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../agent.type.ts",{"_index":3070,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../agents.schema.ts",{"_index":3093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":3095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auto",{"_index":3077,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../backend",{"_index":2806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../backends.service.ts",{"_index":3110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.object.ts",{"_index":2808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contextid.ts",{"_index":3138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data.part.schema.ts",{"_index":3107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event",{"_index":3111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../field.part.schema.ts",{"_index":3113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form.schema.ts",{"_index":3114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.dto.stub.ts",{"_index":3117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.schema.ts",{"_index":3071,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../identities.validation.stub.ts",{"_index":3124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.dto.stub.ts",{"_index":3121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.part.ts",{"_index":3122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../internal.logger.ts",{"_index":2812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jobs.schema.ts",{"_index":3072,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../keyrings.schema.ts",{"_index":3073,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":2810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.schema.ts",{"_index":3074,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":3133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../metadata.part.schema.ts",{"_index":3131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed",{"_index":3075,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":3078,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":3130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../req",{"_index":3134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../section.part.schema.ts",{"_index":3115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../security.part.schema.ts",{"_index":3136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../state.enum.ts",{"_index":2813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.part.schema.ts",{"_index":3140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../states.enum.ts",{"_index":2811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.schema.ts",{"_index":3080,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":2809,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../validation",{"_index":3081,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validationexception.ts",{"_index":3109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validschema.ts",{"_index":3142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../wrapper.type.ts",{"_index":3084,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:11",{"_index":86,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:12",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:13",{"_index":85,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:15",{"_index":96,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:17",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:24",{"_index":93,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:9",{"_index":84,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts",{"_index":177,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:117",{"_index":214,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:151",{"_index":199,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:193",{"_index":217,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:23",{"_index":189,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:254",{"_index":219,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:29",{"_index":221,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:314",{"_index":204,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:34",{"_index":208,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:44",{"_index":193,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:50",{"_index":210,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:84",{"_index":212,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":138,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":149,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:43",{"_index":151,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":175,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1400,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":2374,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":2375,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":2383,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":2385,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":2388,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":2387,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":2386,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":2650,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:16",{"_index":2654,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:22",{"_index":2651,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":2655,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:30",{"_index":2657,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:36",{"_index":2658,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:42",{"_index":2652,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":2659,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:50",{"_index":2653,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":120,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":125,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":130,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":2377,"title":{},"body":{"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":2378,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":2381,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":2380,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":2379,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/constants/event",{"_index":3195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/data/api",{"_index":678,"title":{},"body":{"classes/ApiSession.html":{}}}],["src/_common/data/console",{"_index":1372,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["src/_common/decorators/api",{"_index":3157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/decorators/params/req",{"_index":3219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/decorators/public.decorator.ts",{"_index":3215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/_common/dto/error",{"_index":1459,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["src/_common/dto/not",{"_index":2444,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["src/_common/dto/paginated",{"_index":2458,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":2710,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":2733,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":2732,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":2735,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":2715,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":2731,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":657,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/_common/filters/identities",{"_index":2006,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["src/_common/filters/mongoose",{"_index":2419,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["src/_common/guards/auth.guard.ts",{"_index":835,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/guards/auth.guard.ts:13",{"_index":843,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/guards/auth.guard.ts:8",{"_index":840,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/middlewares/raw",{"_index":2611,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["src/_common/pipes/dto",{"_index":1411,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["src/_common/pipes/object",{"_index":2449,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":1011,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":2391,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":2403,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":2399,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":2401,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":2398,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":2396,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":2402,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/agent.type.ts",{"_index":3085,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/types/mixed",{"_index":3086,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":3087,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":3088,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":3089,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":690,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:15",{"_index":693,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":706,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":754,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:10",{"_index":756,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":757,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cli/agents.command.ts",{"_index":360,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:12",{"_index":374,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:20",{"_index":367,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:29",{"_index":371,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:35",{"_index":547,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:45",{"_index":548,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:57",{"_index":449,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/agents.command.ts:63",{"_index":450,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/backends.command.ts",{"_index":1053,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:15",{"_index":1280,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:26",{"_index":1054,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:32",{"_index":1055,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:6",{"_index":1279,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/cli.module.ts",{"_index":1296,"title":{},"body":{"modules/CliModule.html":{}}}],["src/cli/keyrings.command.ts",{"_index":2245,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:15",{"_index":2298,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:21",{"_index":2285,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:32",{"_index":2286,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:63",{"_index":2246,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/cli/keyrings.command.ts:69",{"_index":2247,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/config.ts",{"_index":1308,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["src/contextid.ts",{"_index":3223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":549,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:26",{"_index":572,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:31",{"_index":554,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:36",{"_index":556,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:41",{"_index":561,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:46",{"_index":571,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:52",{"_index":570,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:57",{"_index":553,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:62",{"_index":564,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:67",{"_index":567,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:72",{"_index":559,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:78",{"_index":594,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":2642,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":2647,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":2649,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":2644,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":2645,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":2648,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":2646,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":2676,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":2679,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":2680,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":2682,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":2681,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":2678,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":2822,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts",{"_index":2626,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:10",{"_index":2634,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:15",{"_index":2635,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:20",{"_index":2637,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:25",{"_index":2632,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:31",{"_index":2633,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:36",{"_index":2636,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts",{"_index":2660,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:13",{"_index":2666,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:19",{"_index":2667,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:22",{"_index":2668,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:25",{"_index":2670,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:28",{"_index":2669,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":410,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":432,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":420,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":422,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":423,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":431,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":429,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":417,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":426,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":419,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:36",{"_index":465,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:46",{"_index":484,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:67",{"_index":473,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:83",{"_index":488,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:98",{"_index":477,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":619,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":629,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/agents/agents.service.ts:10",{"_index":631,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":2208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:11",{"_index":2211,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:25",{"_index":2215,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":2318,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":2319,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":2322,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":786,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:25",{"_index":794,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:36",{"_index":805,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:47",{"_index":801,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:56",{"_index":798,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":861,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":877,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:109",{"_index":897,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:159",{"_index":899,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:174",{"_index":902,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:186",{"_index":895,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:21",{"_index":914,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:22",{"_index":919,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:24",{"_index":911,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:25",{"_index":918,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:27",{"_index":909,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:28",{"_index":891,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:40",{"_index":900,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:70",{"_index":893,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:84",{"_index":904,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/_dto/execute",{"_index":1468,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["src/core/backends/_dto/sync",{"_index":2683,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["src/core/backends/_enum/action",{"_index":2814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/backend",{"_index":1047,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/execute",{"_index":1476,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["src/core/backends/_interfaces/worker",{"_index":2740,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":1065,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:100",{"_index":1079,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:46",{"_index":1086,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:60",{"_index":1082,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:69",{"_index":1076,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":1143,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/backends/backends.service.ts",{"_index":1148,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/variables.html":{}}}],["src/core/backends/backends.service.ts:111",{"_index":1160,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:142",{"_index":1162,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:185",{"_index":1157,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:19",{"_index":1152,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/core.controller.ts",{"_index":1376,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":1385,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:19",{"_index":1387,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1398,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:4",{"_index":1399,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":1534,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":1545,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":1539,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":1548,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":1537,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":1541,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":1544,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":1543,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":1540,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":1566,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":1585,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":1586,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":1587,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":1583,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":1578,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":1577,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":1580,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":1581,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":1579,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":1584,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":1611,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":1619,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":1623,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":1618,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":1614,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":1621,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":1617,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":2832,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":2707,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":1480,"title":{},"body":{"classes/Form.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":1495,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":1488,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":1487,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":1497,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":1492,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":1494,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":1493,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":1489,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":1591,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":1600,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":1601,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":1597,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":1593,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":1592,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":1595,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":1596,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":1594,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":1598,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":1599,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":1628,"title":{},"body":{"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":1632,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":1634,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":1631,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":1629,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":1633,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":1630,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":1506,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":1510,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":1515,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":1512,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":1518,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":1514,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":1607,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":1637,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/form/form.service.ts:9",{"_index":1638,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/jobs/_enums/state.enum.ts",{"_index":2848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts",{"_index":2181,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:14",{"_index":2186,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:20",{"_index":2182,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:26",{"_index":2184,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:29",{"_index":2191,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:32",{"_index":2183,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:35",{"_index":2187,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:38",{"_index":2189,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:41",{"_index":2188,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:44",{"_index":2185,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:47",{"_index":2190,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/jobs.controller.ts",{"_index":2692,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/core/jobs/jobs.module.ts",{"_index":2199,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/core/jobs/jobs.service.ts",{"_index":2205,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/jobs/jobs.service.ts:8",{"_index":2206,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":2287,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:14",{"_index":2294,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:18",{"_index":2290,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:21",{"_index":2293,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:27",{"_index":2299,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":2291,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":2234,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":2238,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:19",{"_index":2240,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:25",{"_index":2237,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:28",{"_index":2239,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":2270,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:32",{"_index":2273,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:42",{"_index":2278,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:63",{"_index":2275,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:79",{"_index":2277,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":2307,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":2311,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/keyrings/keyrings.service.ts:10",{"_index":2312,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts",{"_index":1405,"title":{},"body":{"classes/DataPart.html":{},"miscellaneous/variables.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:12",{"_index":1408,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:18",{"_index":1406,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/logger.schema.ts",{"_index":2329,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:15",{"_index":2334,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:22",{"_index":2333,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:29",{"_index":2332,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:36",{"_index":2331,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":2110,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:107",{"_index":2179,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:123",{"_index":2176,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:139",{"_index":2173,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":2171,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":2177,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":2175,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:62",{"_index":2180,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:78",{"_index":2178,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:91",{"_index":2174,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":2346,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/core/logger/logger.module.ts",{"_index":2352,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":2356,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/logger.service.ts:8",{"_index":2357,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts",{"_index":2687,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts:10",{"_index":2688,"title":{},"body":{"classes/Tasks.html":{}}}],["src/core/tasks/tasks.controller.ts",{"_index":2694,"title":{},"body":{"controllers/TasksController-1.html":{}}}],["src/core/tasks/tasks.module.ts",{"_index":2699,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/core/tasks/tasks.service.ts",{"_index":2703,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/tasks/tasks.service.ts:8",{"_index":2704,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/main.ts",{"_index":3218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":2745,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:10",{"_index":2748,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:16",{"_index":2747,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:22",{"_index":2749,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":3019,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:11",{"_index":3033,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:15",{"_index":3036,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:20",{"_index":3023,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:25",{"_index":3024,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:30",{"_index":3025,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:35",{"_index":3026,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:40",{"_index":3028,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:46",{"_index":3030,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:51",{"_index":3031,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:56",{"_index":3032,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:61",{"_index":3034,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:66",{"_index":3035,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:7",{"_index":3020,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:71",{"_index":3037,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:76",{"_index":3038,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":1743,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:14",{"_index":1769,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:20",{"_index":1767,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:25",{"_index":1765,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:44",{"_index":1762,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":2836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":2841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":340,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:10",{"_index":346,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:13",{"_index":350,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:7",{"_index":349,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":2990,"title":{},"body":{"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:12",{"_index":3004,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:15",{"_index":3005,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:18",{"_index":3006,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:21",{"_index":3007,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:24",{"_index":3008,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:27",{"_index":3009,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:30",{"_index":3010,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:33",{"_index":3011,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:36",{"_index":3012,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:39",{"_index":3013,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:42",{"_index":3014,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:45",{"_index":3015,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:48",{"_index":3016,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:6",{"_index":3002,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:9",{"_index":3003,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":1642,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:14",{"_index":1650,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:17",{"_index":1649,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":1647,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":1645,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_stubs/_parts/addtionalfields.dto.stub.ts",{"_index":3144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/_parts/inetorgperson.dto.stub.ts",{"_index":3201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/identities.dto.stub.ts",{"_index":3199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/identities.controller.ts",{"_index":1661,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:120",{"_index":1674,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:151",{"_index":1671,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:173",{"_index":1665,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:188",{"_index":1677,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:203",{"_index":1680,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:225",{"_index":1673,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:52",{"_index":1669,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:86",{"_index":1683,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":1922,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/identities.service.ts",{"_index":1929,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/identities.service.ts:107",{"_index":1939,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/identities.service.ts:12",{"_index":1931,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/identities.service.ts:127",{"_index":1937,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/jsonforms/_config",{"_index":1911,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/_config/${schema",{"_index":1846,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts",{"_index":1785,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:13",{"_index":1794,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:22",{"_index":1791,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:31",{"_index":1798,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:40",{"_index":1796,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.module.ts",{"_index":1817,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts",{"_index":1819,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:10",{"_index":1834,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:11",{"_index":1824,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:115",{"_index":1825,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:132",{"_index":1827,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:18",{"_index":1832,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:31",{"_index":1829,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:96",{"_index":1830,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/validations/_config",{"_index":1896,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/${key}.yml",{"_index":2050,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/validschema.ts",{"_index":3230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1351,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1353,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1358,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1355,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:22",{"_index":1367,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:25",{"_index":1366,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:28",{"_index":1365,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:34",{"_index":1371,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1370,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1354,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":2831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/_stubs/identities.validation.stub.ts",{"_index":3202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":1995,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:17",{"_index":2001,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:48",{"_index":1999,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:57",{"_index":1998,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":2017,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":2019,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:113",{"_index":2037,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:129",{"_index":2025,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:158",{"_index":2026,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:18",{"_index":2040,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:19",{"_index":2041,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:20",{"_index":2024,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:28",{"_index":2028,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:45",{"_index":2030,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":2360,"title":{},"body":{"controllers/ManagementController.html":{}}}],["src/management/management.module.ts",{"_index":2368,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:13",{"_index":2369,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":2372,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/management.service.ts:4",{"_index":2373,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/dto/ask",{"_index":772,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["src/management/passwd/dto/change",{"_index":1282,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/management/passwd/dto/reset",{"_index":2621,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["src/management/passwd/dto/verify",{"_index":2736,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":2467,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:24",{"_index":2479,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:45",{"_index":2487,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:56",{"_index":2498,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:69",{"_index":2494,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":2547,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":2549,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:15",{"_index":2552,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:23",{"_index":2556,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:29",{"_index":2554,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:43",{"_index":2560,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:48",{"_index":2558,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:62",{"_index":2559,"title":{},"body":{"injectables/PasswdService.html":{}}}],["sse",{"_index":1067,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse('sse",{"_index":1120,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(@res",{"_index":1121,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(res",{"_index":1077,"title":{},"body":{"controllers/BackendsController.html":{}}}],["ssetoken",{"_index":821,"title":{},"body":{"controllers/AuthController.html":{}}}],["stabilit",{"_index":3329,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["standards",{"_index":3282,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["start",{"_index":1034,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":1016,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["started",{"_index":2852,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1951,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["state",{"_index":415,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/BackendsService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/Jobs.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":2673,"title":{},"body":{"classes/StatePart.html":{}}}],["state.enum.ts",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statepart",{"_index":427,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["statepartdto",{"_index":568,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["statepartschema",{"_index":428,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":520,"title":{},"body":{"controllers/AgentsController.html":{},"modules/CoreModule.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{}}}],["status",{"_index":670,"title":{},"body":{"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["statuscode",{"_index":528,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["statut",{"_index":3954,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":3736,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":2834,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":3489,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":3271,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":2908,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":2933,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":2395,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["strategy",{"_index":2219,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["streamkits/nestjs_module_scrud",{"_index":510,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"dependencies.html":{}}}],["strict",{"_index":111,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/IdentitiesValidationService.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["stringify",{"_index":1836,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["stringify(jsonform",{"_index":1895,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":476,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":1513,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(identitiesdto",{"_index":1672,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":2276,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":472,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":1511,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":1670,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":2274,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":487,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":1517,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":1676,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["structure",{"_index":1886,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":3850,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":3492,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":3442,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["style",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stylesrc",{"_index":1329,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subcommand",{"_index":380,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subcommands",{"_index":407,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subject",{"_index":984,"title":{},"body":{"injectables/AuthService.html":{}}}],["submit",{"_index":3844,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":1484,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":1485,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["subscriber",{"_index":1088,"title":{},"body":{"controllers/BackendsController.html":{}}}],["succeeded",{"_index":2089,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":2033,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["successful",{"_index":1953,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["successfully",{"_index":401,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"controllers/PasswdController.html":{}}}],["succès",{"_index":1709,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suite",{"_index":3667,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":3327,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":3494,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":3776,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":3888,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["summary",{"_index":2512,"title":{},"body":{"controllers/PasswdController.html":{}}}],["supann",{"_index":1774,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":3931,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":1775,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["supannbirthdate",{"_index":3940,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":3149,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":3976,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":3147,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":3145,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":1777,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["super",{"_index":392,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":3432,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":105,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{}}}],["super(message",{"_index":2725,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":2730,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.canactivate(context",{"_index":852,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super.create",{"_index":2317,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["super.create(data",{"_index":649,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/IdentitiesService.html":{}}}],["super.debug(...[message",{"_index":2150,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.delete(_id",{"_index":1992,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.error('failed",{"_index":2127,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":2142,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal('failed",{"_index":2168,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":2156,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":2120,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":2148,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.onmoduleinit",{"_index":1189,"title":{},"body":{"injectables/BackendsService.html":{}}}],["super.transform(value",{"_index":1426,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["super.update",{"_index":655,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.update(_id",{"_index":1990,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.upsert",{"_index":1971,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.verbose(...[message",{"_index":2153,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":2145,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super[payload.level](payload.message",{"_index":2169,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplémentaires",{"_index":3244,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":3058,"title":{},"body":{"modules.html":{}}}],["supportant",{"_index":3598,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supprime",{"_index":3504,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":3817,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sur",{"_index":3584,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suspendedat",{"_index":2236,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":2662,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":2663,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["svg",{"_index":3059,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1312,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["swagger/json",{"_index":1347,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":1314,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1348,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["symbol('autoincrementidskip",{"_index":3194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":1241,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncall",{"_index":1058,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["syncallidentities",{"_index":1068,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["syncallidentities(@res",{"_index":1109,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(options",{"_index":1159,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncallidentities(res",{"_index":1080,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities.map((identity",{"_index":1227,"title":{},"body":{"injectables/BackendsService.html":{}}}],["synced",{"_index":2842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronisation",{"_index":2855,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchroniser",{"_index":3288,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["syncidentities",{"_index":1069,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["syncidentities(payload",{"_index":1161,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncidentities(res",{"_index":1083,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentitiesdto",{"_index":1084,"title":{"classes/SyncIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/SyncIdentitiesDto.html":{}}}],["syncing",{"_index":1203,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncronisation",{"_index":3948,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["synctimeout",{"_index":1074,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["system",{"_index":2134,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["système",{"_index":2938,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":3299,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":3296,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":3292,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":3488,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":3637,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":2853,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":194,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["t>>(filter",{"_index":240,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["table",{"_index":3376,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":1750,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":3636,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tabs",{"_index":2835,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tag",{"_index":2101,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{}}}],["tant",{"_index":3977,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":3753,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["target",{"_index":2111,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["task",{"_index":1230,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{}}}],["task._id",{"_index":1237,"title":{},"body":{"injectables/BackendsService.html":{}}}],["tasks",{"_index":1185,"title":{"classes/Tasks.html":{}},"body":{"injectables/BackendsService.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":2701,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.name",{"_index":2702,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":2695,"title":{},"body":{"controllers/TasksController-1.html":{},"modules/TasksModule.html":{}}}],["tasks/_schemas/tasks.schema",{"_index":1186,"title":{},"body":{"injectables/BackendsService.html":{}}}],["tasks/tasks.module",{"_index":1147,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["tasks/tasks.service",{"_index":1180,"title":{},"body":{"injectables/BackendsService.html":{}}}],["taskscontroller",{"_index":2200,"title":{"controllers/TasksController.html":{},"controllers/TasksController-1.html":{}},"body":{"modules/JobsModule.html":{},"controllers/TasksController.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{}}}],["tasksdocument",{"_index":2689,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["tasksmodule",{"_index":1142,"title":{"modules/TasksModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksschema",{"_index":2690,"title":{},"body":{"classes/Tasks.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["tasksservice",{"_index":1151,"title":{"injectables/TasksService.html":{}},"body":{"injectables/BackendsService.html":{},"controllers/TasksController-1.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["tat",{"_index":3934,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":3772,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":3966,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":2462,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["technique",{"_index":3352,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":3291,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technologies",{"_index":2926,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tel",{"_index":3260,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephonenumber",{"_index":2999,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":3851,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tels",{"_index":2920,"title":{},"body":{"index.html":{}}}],["template",{"_index":3969,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["temporaire",{"_index":3501,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tendez",{"_index":3423,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":3430,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["test",{"_index":3204,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test.createtestingmodule",{"_index":3524,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testclass",{"_index":3203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teste",{"_index":3557,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":3462,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":3523,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":3323,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["texte",{"_index":3787,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["themes",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["thirdpartyauth",{"_index":416,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._model",{"_index":233,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter",{"_index":244,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter).exec",{"_index":265,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find",{"_index":239,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find>(filter",{"_index":266,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyid>(_id",{"_index":276,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyidanddelete",{"_index":335,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findone",{"_index":1961,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this._model.findone>(filter",{"_index":280,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._options.mongoose.options",{"_index":2124,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._queue",{"_index":104,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this._queue.getcompleted",{"_index":1191,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this._req",{"_index":159,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.count(searchfilterschema",{"_index":1729,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.create(body",{"_index":526,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":546,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findall",{"_index":1809,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findandcount",{"_index":535,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":541,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findone(schema",{"_index":1812,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.generate",{"_index":1806,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.generateall",{"_index":1803,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.update(_id",{"_index":544,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["this._service.updatestate(_id",{"_index":1740,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.upsert(body",{"_index":1720,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.validate(body",{"_index":2005,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this._validation.validate(data.additionalfields",{"_index":1952,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this._validation.validate(update.additionalfields",{"_index":1975,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.access_token_expires_in",{"_index":983,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":994,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.create(agent",{"_index":399,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.agentsservice.findone",{"_index":963,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.compile(validschema",{"_index":1842,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":2085,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":699,"title":{},"body":{"controllers/AppController.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":2325,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":2231,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.createtokens",{"_index":2265,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.backends.executejob",{"_index":2607,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.backends.executejob(actiontype.identity_password_change",{"_index":2563,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.backendsservice.executejob",{"_index":1116,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('added",{"_index":1126,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('completed",{"_index":1129,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('failed",{"_index":1132,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.syncallidentities",{"_index":1060,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{}}}],["this.backendsservice.syncidentities(body.payload",{"_index":1107,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.commonlogdb",{"_index":2139,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.concerned",{"_index":2343,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.concerned.tolocalelowercase",{"_index":2344,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.config",{"_index":109,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.connection",{"_index":2125,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":2166,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.constructor.name",{"_index":108,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":174,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.context",{"_index":2341,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.context.tolocalelowercase",{"_index":2342,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["this.createtokens(new",{"_index":955,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":1001,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decrypttoken(data.token",{"_index":2601,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.decrypttoken(token",{"_index":2584,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.dev_token_path",{"_index":944,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.displayname",{"_index":445,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["this.eventemitter",{"_index":246,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.eventemitter?.emitasync",{"_index":248,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.executejob",{"_index":1235,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.generate(file",{"_index":1909,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.getstatus",{"_index":2729,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":2433,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.handlevalidationerror(error",{"_index":1956,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.identitiesservice.find",{"_index":1225,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.findbyid(key",{"_index":1242,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(completedjob.concernedto",{"_index":1223,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(concernedto",{"_index":1260,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(failedjob.concernedto",{"_index":1218,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(issyncedjob.concernedto",{"_index":1200,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.initialize",{"_index":2129,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.inquirer.ask('agent",{"_index":397,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.inquirer.ask('keyrings",{"_index":2256,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.isnew",{"_index":444,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["this.jobsservice.create",{"_index":1254,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jobsservice.model.findoneandupdate",{"_index":1193,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jobsservice.update(jobstore._id",{"_index":1265,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jwtservice.decode(jwt",{"_index":1002,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":982,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keyringsservice.create(keyring",{"_index":2257,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.keyringsservice.findone",{"_index":970,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['count",{"_index":243,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['create",{"_index":288,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['delete",{"_index":332,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['find",{"_index":236,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findall",{"_index":2098,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findandcount",{"_index":245,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findbyid",{"_index":274,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findone",{"_index":278,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['update",{"_index":306,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['upsert",{"_index":324,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(`job",{"_index":1206,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.error(`${logprefix",{"_index":1976,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.logger.error(`token",{"_index":952,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log('gettoken",{"_index":2526,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('verify",{"_index":2534,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`${logprefix",{"_index":1950,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.logger.log(`call",{"_index":2520,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`job",{"_index":1224,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.log(`new",{"_index":962,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":948,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`validations",{"_index":1954,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.logger.warn('dev",{"_index":939,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`${logprefix",{"_index":1979,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.logger.warn(`job",{"_index":1202,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.message",{"_index":2728,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.modulename.tolowercase",{"_index":249,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.moduleref.get(configservice",{"_index":110,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.moduleref.get(getredisconnectiontoken",{"_index":114,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.mongoconnection",{"_index":2410,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":2413,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":2416,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":2412,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":2418,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":2405,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":2409,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":2414,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":2726,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":765,"title":{},"body":{"injectables/AppService.html":{}}}],["this.passwdservice.asktoken(asktoken",{"_index":2528,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.change(cpwd",{"_index":2517,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(data",{"_index":2540,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.verifytoken(token.token",{"_index":2536,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.queue",{"_index":3406,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add",{"_index":1247,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queue.add('exemple",{"_index":3434,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents",{"_index":117,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('active",{"_index":1210,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents.on('completed",{"_index":1220,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents.on('failed",{"_index":1214,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('waiting",{"_index":1205,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.redis",{"_index":113,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.exists(token",{"_index":2586,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.expire",{"_index":992,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire(ciphertext",{"_index":2583,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":974,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":999,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get(token",{"_index":2588,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.set",{"_index":988,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.set(ciphertext",{"_index":2582,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.reflector.getallandoverride(meta_unprotected",{"_index":849,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.refresh_token_expires_in",{"_index":993,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":989,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":168,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":171,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request?.user?.username",{"_index":294,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.resolveconfigpath(key",{"_index":2076,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolveconfigpath(schema",{"_index":2108,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolvejsonformpath(schema",{"_index":1916,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.secretkey",{"_index":2639,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":833,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":820,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":827,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":830,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.servicename.tolowercase",{"_index":250,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":2119,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.tasksservice.create",{"_index":1231,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.username",{"_index":446,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["this.validateattribute(key",{"_index":2086,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":1841,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":2083,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":1432,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":1457,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":2727,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this[key",{"_index":687,"title":{},"body":{"classes/ApiSession.html":{}}}],["throw",{"_index":106,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ticket",{"_index":3729,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":2706,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["ticketformfield",{"_index":2708,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":2709,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":3745,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":2872,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":2937,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["time",{"_index":1270,"title":{},"body":{"injectables/BackendsService.html":{}}}],["timeout",{"_index":1274,"title":{},"body":{"injectables/BackendsService.html":{}}}],["timeoutdiscard",{"_index":1113,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["timeoutdiscardquery",{"_index":1073,"title":{},"body":{"controllers/BackendsController.html":{}}}],["tiquette",{"_index":3766,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":1486,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":3746,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":3734,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":3826,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tmodel",{"_index":3158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_complete",{"_index":1696,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":2846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":1245,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":1700,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":164,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":680,"title":{},"body":{"classes/ApiSession.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto",{"_index":2505,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["token.dto.ts",{"_index":773,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:10",{"_index":783,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:7",{"_index":778,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.json",{"_index":913,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.token",{"_index":2535,"title":{},"body":{"controllers/PasswdController.html":{}}}],["token_path_separator",{"_index":883,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendata",{"_index":2600,"title":{},"body":{"injectables/PasswdService.html":{}}}],["tokendata.uid",{"_index":2605,"title":{},"body":{"injectables/PasswdService.html":{}}}],["tokens",{"_index":819,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tokenstruct",{"_index":2580,"title":{},"body":{"injectables/PasswdService.html":{}}}],["total",{"_index":534,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{}}}],["totale",{"_index":2893,"title":{},"body":{"index.html":{}}}],["toujours",{"_index":3979,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tout",{"_index":3335,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":3293,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["track",{"_index":1038,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":1026,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":1017,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":1018,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["traitement",{"_index":3391,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":3401,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transform",{"_index":1414,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(value",{"_index":1418,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformer",{"_index":586,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["transformkeys",{"_index":3806,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformoptions",{"_index":1428,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transport",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["travers",{"_index":3348,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":3233,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tree",{"_index":532,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/KeyringsController.html":{}}}],["trim",{"_index":1438,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":4009,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":3477,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["true",{"_index":318,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"modules/AppModule.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true|on|yes|1/i.test(asyncquery",{"_index":1106,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(timeoutdiscardquery",{"_index":1114,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true})@apiproperty({type",{"_index":563,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":2289,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":2643,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":1620,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1369,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":1616,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":4008,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":398,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["ts",{"_index":2430,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["typage",{"_index":2916,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.enum",{"_index":1182,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"injectables/PasswdService.html":{}}}],["type.enum.ts",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.vue",{"_index":3735,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":3068,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":260,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":133,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/Jobs.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":124,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid(`${tokendata.id",{"_index":2609,"title":{},"body":{"injectables/PasswdService.html":{}}}],["types.objectid(body.id",{"_index":1118,"title":{},"body":{"controllers/BackendsController.html":{}}}],["types.objectid(passwd.id",{"_index":2564,"title":{},"body":{"injectables/PasswdService.html":{}}}],["types.objectid(value",{"_index":2456,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":2453,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["têtes",{"_index":3864,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":2631,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ui",{"_index":1917,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ui.yml",{"_index":1889,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["uid",{"_index":2573,"title":{},"body":{"injectables/PasswdService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["un",{"_index":1749,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unauthorizedexception",{"_index":921,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@apiresponse({status",{"_index":2486,"title":{},"body":{"controllers/PasswdController.html":{}}}],["une",{"_index":2067,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unhandled",{"_index":1983,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["uniforme",{"_index":3634,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":421,"title":{},"body":{"classes/Agents.html":{},"classes/Keyrings.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":3534,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniques",{"_index":3632,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unknown",{"_index":665,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unnecessarylocalvariablejs",{"_index":1973,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["unprotected",{"_index":3216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["until",{"_index":1276,"title":{},"body":{"injectables/BackendsService.html":{}}}],["unused",{"_index":394,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"controllers/PasswdController.html":{}}}],["update",{"_index":186,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(_id",{"_index":215,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["update.$set.password",{"_index":653,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.$set?.password",{"_index":652,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.additionalfields.validations",{"_index":1980,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["update.decorator",{"_index":497,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["update.decorator.ts",{"_index":3103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update.inetorgperson.cn",{"_index":1974,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["update.password",{"_index":650,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.state",{"_index":1989,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["update?.$set",{"_index":315,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{}}}],["updateassertions",{"_index":3561,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":3565,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updated",{"_index":309,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":3563,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":3498,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":3515,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions(service",{"_index":3566,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":3564,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":216,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["updatestate",{"_index":1662,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{}}}],["updatestate(_id",{"_index":1678,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{}}}],["updating",{"_index":1965,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["uppercase",{"_index":4038,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":187,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["upsert(data",{"_index":1940,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["upsert(filter",{"_index":218,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["upsert(res",{"_index":1681,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["uri",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":4035,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["use",{"_index":1020,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["used",{"_index":1042,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":627,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/TasksModule.html":{}}}],["usefilters(new",{"_index":1691,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["useguards",{"_index":806,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PasswdController.html":{}}}],["useguards(authguard('api",{"_index":2515,"title":{},"body":{"controllers/PasswdController.html":{}}}],["useguards(authguard('jwt",{"_index":825,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":817,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":157,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"miscellaneous/variables.html":{}}}],["user.state.current",{"_index":2326,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usercertificate",{"_index":3000,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["username",{"_index":373,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["userpassword",{"_index":3001,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usevalue",{"_index":3526,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utf",{"_index":767,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["utf8",{"_index":2082,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{}}}],["utilis",{"_index":3513,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":3533,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":3280,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":2945,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":3319,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":2924,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":2903,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":3321,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":3402,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":2927,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":3472,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":3578,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":3438,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["va",{"_index":3623,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["val",{"_index":368,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["valeur",{"_index":3922,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":4010,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":3600,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":3910,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validadditionalfieldsstub",{"_index":3141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1997,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":2212,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":2029,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":2000,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validateattribute",{"_index":2023,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":2035,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validatenested",{"_index":579,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":1576,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":566,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":569,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested({each",{"_index":1368,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validates",{"_index":2031,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validateschema",{"_index":1821,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":2021,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation",{"_index":1436,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["validation.filter.ts",{"_index":2007,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:34",{"_index":2425,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":2009,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":2423,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":505,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["validation.pipe.ts",{"_index":1412,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:15",{"_index":2734,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:21",{"_index":1420,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:23",{"_index":1417,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:56",{"_index":1423,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":2451,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validationconfigexception",{"_index":1839,"title":{"classes/ValidationConfigException.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationconfigexception(error.getpayload",{"_index":1978,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["validationerror",{"_index":1422,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":2008,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:18",{"_index":2718,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":2717,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":2716,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":2714,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationpipe",{"_index":1413,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":1415,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive(error",{"_index":1421,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":343,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":1925,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":1687,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["validations[`${key}.${property",{"_index":2439,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":1447,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":2059,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":2442,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":2064,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":1942,"title":{"classes/ValidationSchemaException.html":{}},"body":{"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationschemaexception(error.getpayload",{"_index":1982,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["validator",{"_index":585,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["valide",{"_index":2070,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":3684,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":2074,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":2047,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["validschemastub",{"_index":3143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validés",{"_index":3915,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":906,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":355,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":3076,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variabilit",{"_index":3273,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variables",{"_index":2972,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vars",{"_index":395,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"controllers/PasswdController.html":{}}}],["venir",{"_index":3959,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbe",{"_index":3899,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":2152,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":2151,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verifiedcallback",{"_index":2214,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verify",{"_index":925,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":888,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":903,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken",{"_index":2470,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["verifytoken(@body",{"_index":2533,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verifytoken(token",{"_index":2495,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["verifytokendto",{"_index":2496,"title":{"classes/VerifyTokenDto.html":{}},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{}}}],["vers",{"_index":2873,"title":{},"body":{"index.html":{}}}],["version",{"_index":770,"title":{},"body":{"injectables/AppService.html":{},"classes/MongoDbTestInstance.html":{},"properties.html":{}}}],["versionkey",{"_index":437,"title":{},"body":{"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Tasks.html":{},"miscellaneous/variables.html":{}}}],["versionn",{"_index":3346,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":3350,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["verticallayout",{"_index":1860,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["veuillez",{"_index":3748,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":2896,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vides",{"_index":3981,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":3267,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vise",{"_index":3255,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["voici",{"_index":3491,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":443,"title":{},"body":{"classes/Agents.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["voir",{"_index":3383,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["votre",{"_index":3953,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":3676,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":3970,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":3386,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":3731,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":3847,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":3403,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":3536,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["wait",{"_index":1275,"title":{},"body":{"injectables/BackendsService.html":{}}}],["waiting",{"_index":1208,"title":{},"body":{"injectables/BackendsService.html":{}}}],["wanting",{"_index":1028,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":2144,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":2143,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["whitelistedheaders",{"_index":2614,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["winston",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["workerresultinfointerface",{"_index":2739,"title":{"interfaces/WorkerResultInfoInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["workerresultinterface",{"_index":2744,"title":{"interfaces/WorkerResultInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["wrappertype",{"_index":3083,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefilesync",{"_index":933,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${jsonformpath",{"_index":1894,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["wrong",{"_index":2514,"title":{},"body":{"controllers/PasswdController.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["wrong'})@apiresponse({status",{"_index":2477,"title":{},"body":{"controllers/PasswdController.html":{}}}],["x",{"_index":3943,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["y",{"_index":2866,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":1837,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["yml",{"_index":1844,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yup",{"_index":2045,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yupschema",{"_index":2090,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema.validate(attribute",{"_index":2093,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["z",{"_index":4033,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["za",{"_index":4032,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zoom",{"_index":616,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    queue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.queue.processor.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queue\n                    \n                \n\n                \n                    \n                        getqueue()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.queue.processor.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Queue, QueueEvents } from 'bullmq';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { getRedisConnectionToken } from '@nestjs-modules/ioredis';\nimport { Redis } from 'ioredis';\nimport { OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport abstract class AbstractQueueProcessor extends AbstractService implements OnModuleInit {\n  protected config: ConfigService;\n\n  private redis: Redis;\n  protected _queue: Queue;\n  public queueEvents: QueueEvents;\n\n  public get queue(): Queue {\n    return this._queue;\n  }\n\n  public constructor(context?: AbstractServiceContext) {\n    super(context);\n    if (!this.moduleRef) throw new Error('ModuleRef is not defined in ' + this.constructor.name);\n  }\n\n  public async onModuleInit() {\n    this.config = this.moduleRef.get(ConfigService, { strict: false });\n    this.redis = this.moduleRef.get(getRedisConnectionToken(), { strict: false });\n\n    this._queue = new Queue(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id?: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata?: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractServiceSchema.html":{"url":"injectables/AbstractServiceSchema.html","title":"injectable - AbstractServiceSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractServiceSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:151\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:314\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:117\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:193\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:254\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.schema.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport {\n  Document,\n  FilterQuery,\n  Model,\n  ModifyResult,\n  MongooseBaseQueryOptions,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { EventEmitterSeparator } from '~/_common/constants/event-emitter.constant';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { ServiceSchemaInterface } from './interfaces/service.schema.interface';\nimport { AbstractSchema } from './schemas/abstract.schema';\nimport mongodb from 'mongodb';\n\n@Injectable()\nexport abstract class AbstractServiceSchema extends AbstractService implements ServiceSchemaInterface {\n  protected abstract _model: Model;\n\n  protected constructor(context?: AbstractServiceContext) {\n    super(context);\n  }\n\n  public get model(): Model {\n    return this._model;\n  }\n\n  /* eslint-disable */\n  public async find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]> {\n    //TODO: add event emitter\n    this.logger.debug(['find', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.find, T, any, T>>(filter, projection, options).exec()\n  }\n\n  public async count(filter?: FilterQuery, options?: (mongodb.CountOptions & MongooseBaseQueryOptions) | null): Promise {\n    //TODO: add event emitter\n    this.logger.debug(['count', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.countDocuments(filter, options).exec()\n  }\n\n  public async findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]> {\n    this.logger.debug(['findAndCount', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindAndCount'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      // noinspection DuplicatedCode\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let count = await this._model.countDocuments(filter).exec()\n    let data = await this._model.find>(filter, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { data, count },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n        if (afterEvent?.count) count += afterEvent.count\n      }\n    }\n    return [data, count]\n  }\n\n  public async findById(\n    _id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindById'].join(EventEmitterSeparator),\n        { _id, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findById>(_id, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindById'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    return data\n  }\n\n  public async findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindOne'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findOne>(filter, projection, options).exec()\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindOne'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    return data\n  }\n\n  public async create(data?: any, options?: SaveOptions): Promise> {\n    const logInfos = Object.values({\n      ...arguments,\n      1: {\n        ...arguments[1],\n        session: typeof arguments[1] === 'object' && 'session' in arguments[1] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['create', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeCreate'].join(EventEmitterSeparator),\n        { data, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) data = { ...data, ...beforeEvent.data }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    const document: Document = new this._model({\n      metadata: {\n        createdBy: this.request?.user?.username || 'anonymous',\n        createdAt: new Date(),\n        lastUpdatedBy: this.request?.user?.username || 'anonymous',\n        lastUpdatedAt: new Date(),\n      },\n      ...data,\n    })\n    let created = document.save(options)\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { created },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.created) created = { ...created, ...afterEvent.created }\n      }\n    }\n    return created\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions,\n  ): Promise>> {\n    const logInfos = Object.values({\n      ...arguments,\n      2: {\n        ...arguments[2],\n        session: typeof arguments[2] === 'object' && 'session' in arguments[2] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['update', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpdate'].join(EventEmitterSeparator),\n        { _id, update, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) update = { ...update, ...beforeEvent.update }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let updated = await this._model\n      .findByIdAndUpdate>(\n        { _id },\n        {\n          ...update,\n          $setOnInsert: {\n            'metadata.createdBy': this.request?.user?.username || 'anonymous',\n            'metadata.createdAt': new Date(),\n          },\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec()\n    if (!updated) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { updated },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.updated) updated = { ...updated, ...afterEvent.updated }\n      }\n    }\n    return updated\n  }\n\n  public async upsert(\n  filter: FilterQuery,\n  update: UpdateQuery,\n  options?: QueryOptions\n  ): Promise>> {\n    this.logger.debug(['upsert', JSON.stringify(Object.values(arguments))].join(' '));\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpsert'].join(EventEmitterSeparator),\n        { filter, update, options },\n      );\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop;\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter };\n        if (beforeEvent?.update) update = { ...update, ...beforeEvent.update };\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options };\n      }\n    }\n    let result = await this._model\n      .findOneAndUpdate>(\n        filter,\n        {\n          ...update,\n          $setOnInsert: {\n            'metadata.createdBy': this.request?.user?.username || 'anonymous',\n            'metadata.createdAt': new Date(),\n          },\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          upsert: true,\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec();\n\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterUpsert'].join(EventEmitterSeparator),\n        { result },\n      );\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.result) result = { ...result, ...afterEvent.result };\n      }\n    }\n\n    if (!result) {\n      throw new NotFoundException();\n    }\n\n    return result;\n  }\n\n\n  public async delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise> {\n    this.logger.debug(['delete', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeDelete'].join(EventEmitterSeparator),\n        { _id, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let deleted = await this._model.findByIdAndDelete>({ _id }, options).exec()\n    if (!deleted) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { deleted },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.deleted) deleted = { ...deleted, ...afterEvent.deleted }\n      }\n    }\n    return deleted\n  }\n\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart {\n  @Prop({ type: Array, of: String, required: true, default: ['inetOrgPerson'] })\n  objectClasses: string[];\n\n  @Prop({ type: Object, required: true })\n  attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateQuestions.html":{"url":"classes/AgentCreateQuestions.html","title":"class - AgentCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseEmail\n                            \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseEmail(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Email ?', name: 'email'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Password ?', name: 'password', type: 'password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseUsername(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Username ?', name: 'username'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/_parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/_parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents).pre(\n  'save',\n  function (this: Agents, next: () => void): void {\n    if (this.isNew) {\n      this.displayName = this.displayName || this.username;\n    }\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCommand.html":{"url":"classes/AgentsCommand.html","title":"class - AgentsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { AgentsService } from './agents.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\n\n@ApiTags('core')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    email: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateCommand.html":{"url":"classes/AgentsCreateCommand.html","title":"class - AgentsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, agentsService: AgentsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n// import { AgentsCommand } from '~/cli/agents.command';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService /* ...AgentsCommand.registerWithSubCommands() */],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: AgentsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:15\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:314\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:254\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AgentsCreateDto } from './_dto/agents.dto';\nimport { hash } from 'argon2';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: AgentsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    data.password = await hash(data.password);\n    return await super.create(data, options);\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery & any,\n    options?: QueryOptions,\n  ): Promise>> {\n    if (update.password) {\n      update.password = await hash(update.password);\n    }\n    if (update.$set?.password) {\n      update.$set.password = await hash(update.$set.password);\n    }\n    return await super.update(\n      _id,\n      {\n        ...update,\n        $set: {\n          ...(update?.$set || {}),\n        },\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSession.html":{"url":"classes/ApiSession.html","title":"class - ApiSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/api-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/api-session.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiSession {\n  public readonly _id: string;\n  public readonly username: string;\n  public readonly displayName: string;\n  public readonly token: string;\n\n  public constructor(data: Partial) {\n    for (const key in data) {\n      this[key] = data[key];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\n\n@Public()\n@Controller()\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AuthGuard } from './_common/guards/auth.guard';\nimport { MongooseValidationFilter } from './_common/filters/mongoose-validation.filter';\nimport { DtoValidationPipe } from './_common/pipes/dto-validation.pipe';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        config: {\n          ...config.get('ioredis.options'),\n          url: config.get('ioredis.uri'),\n        },\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    RequestContextModule,\n    CoreModule.register(),\n    ManagementModule.register(),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionFilter,\n    // },\n    {\n      provide: APP_FILTER,\n      useClass: MongooseValidationFilter,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: DtoValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Partial\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\n\n@Injectable()\nexport class AppService extends AbstractService {\n  protected package: Partial;\n\n  public constructor(protected moduleRef: ModuleRef) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/ask-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/ask-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsString } from 'class-validator';\n\nexport class AskTokenDto {\n  @IsMongoId()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  id: string;\n  @ApiProperty({ example: 'monemail@mondomaine.com', description: 'secondary mail' })\n  @IsString()\n  mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\n\n@Public()\n@ApiTags('core')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n      sseToken: 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8', //TODO: change to real token\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    const user = await this.service.getSessionData(identity);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...user,\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const tokens = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      sseToken: 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8', //TODO: change to real token\n    });\n  }\n\n  @Post('logout')\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardInternal(['jwt'])\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/_common/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/guards/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard as AuthGuardInternal } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport { META_UNPROTECTED } from '~/_common/decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardInternal(['jwt']) {\n  public constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  public canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const isUnprotected = this.reflector.getAllAndOverride(META_UNPROTECTED, [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n    return isUnprotected || super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\nimport { KeyringsModule } from '../keyrings/keyrings.module';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, keyringsService: KeyringsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity: AgentType, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\nimport { KeyringsService } from '../keyrings/keyrings.service';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    protected readonly keyringsService: KeyringsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n        scopes: ['offline', 'api'],\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      console.log(user);\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType & {token: string} }): Promise {\n    if (payload.scopes.includes('offline')) {\n      return payload.identity;\n    }\n    if (payload.scopes.includes('api')) {\n      try {\n        const identity = await this.keyringsService.findOne({\n          _id: payload.identity._id,\n          token: payload.identity.token,\n        });\n        if (identity) {\n          return identity.toObject();\n        }\n      } catch (e) {}\n      return null;\n    }\n    try {\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        return JSON.parse(identity);\n      }\n    } catch (e) {}\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['sesame'];\n    if (options?.scopes) scopes.push(...options.scopes);\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity, scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...omit(options, ['scopes']),\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity,\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  //TODO: change any\n  public async getSessionData(identity: AgentType): Promise {\n    // const entity = await this.agentsService.findOne(\n    //   { _id: identity.entityId },\n    //   {\n    //     projection: {\n    //       metadata: 0,\n    //     },\n    //   },\n    // )\n    return {\n      ...identity,\n      // entity,\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return this.createTokens(omit(identity.toObject(), ['password']), refresh_token);\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInfoInterface.html":{"url":"interfaces/BackendResultInfoInterface.html","title":"interface - BackendResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInterface.html":{"url":"interfaces/BackendResultInterface.html","title":"interface - BackendResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsCommand.html":{"url":"classes/BackendsCommand.html","title":"class - BackendsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                sse\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(res: Response, body: ExecuteJobDto, asyncQuery: string, timeoutDiscardQuery: string, syncTimeout?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ExecuteJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timeoutDiscardQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                syncTimeout\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        sse\n                        \n                    \n                \n            \n            \n                \n                        \n                    sse(res: Response, key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('sse')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(res: Response, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('syncall')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(res: Response, body: SyncIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sync')\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SyncIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  Body,\n  Controller,\n  HttpStatus,\n  Logger,\n  ParseIntPipe,\n  Post,\n  Query,\n  Res,\n  Sse,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport Redis from 'ioredis';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ExecuteJobDto } from './_dto/execute-job.dto';\nimport { BackendsService } from './backends.service';\nimport { SyncIdentitiesDto } from './_dto/sync-identities.dto';\nimport { Types } from 'mongoose';\n\nfunction fireMessage(observer: Subscriber, channel: string, message: any, loggername: string) {\n  try {\n    observer.next({\n      data: { channel, payload: message },\n    } as MessageEvent);\n    Logger.debug(`Observer send to  with data `, loggername);\n  } catch (err) {\n    Logger.error(`Observer error from  with data . Error: ${err}`, loggername);\n  }\n}\n\n@Controller('backends')\n@ApiTags('core')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(\n    private backendsService: BackendsService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) {}\n\n  @Post('sync')\n  public async syncIdentities(\n    @Res() res: Response,\n    @Body() body: SyncIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('syncall')\n  public async syncAllIdentities(@Res() res: Response, @Query('async') asyncQuery: string) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncAllIdentities({\n      async,\n    });\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('execute')\n  public async executeJob(\n    @Res() res: Response,\n    @Body() body: ExecuteJobDto,\n    @Query('async') asyncQuery: string,\n    @Query('timeoutDiscard') timeoutDiscardQuery: string,\n    @Query(\n      'syncTimeout',\n      new ParseIntPipe({\n        optional: true,\n        errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE,\n      }),\n    )\n    syncTimeout?: number,\n  ): Promise {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const timeoutDiscard = /true|on|yes|1/i.test(timeoutDiscardQuery);\n    const [job, response] = await this.backendsService.executeJob(\n      body.action,\n      new Types.ObjectId(body.id),\n      body.payload,\n      {\n        async,\n        syncTimeout,\n        timeoutDiscard,\n      },\n    );\n    return res.status(HttpStatus.ACCEPTED).json({ async, job, response });\n  }\n\n  @Public()\n  @Sse('sse')\n  public async sse(@Res() res: Response, @Query('key') key: string): Promise> {\n    if (key !== 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8') throw new UnauthorizedException();\n\n    res.socket.on('close', () => {\n      Logger.debug(`Observer close connection`, this.constructor.name);\n    });\n\n    return new Observable((observer) => {\n      this.backendsService.queueEvents.on('added', (added) =>\n        fireMessage(observer, 'job:added', added, this.constructor.name),\n      );\n\n      this.backendsService.queueEvents.on('completed', (completed) =>\n        fireMessage(observer, 'job:completed', completed, this.constructor.name),\n      );\n\n      this.backendsService.queueEvents.on('failed', (failed) =>\n        fireMessage(observer, 'job:failed', failed, this.constructor.name),\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\nimport { JobsModule } from '../jobs/jobs.module';\nimport { TasksModule } from '../tasks/tasks.module';\n@Module({\n  imports: [ConfigModule, IdentitiesModule, JobsModule, TasksModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n  exports: [BackendsService],\n})\nexport class BackendsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendsService.html":{"url":"injectables/BackendsService.html","title":"injectable - BackendsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueProcessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, identitiesService: IdentitiesService, jobsService: JobsService, tasksService: TasksService)\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/backends.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identitiesService\n                                                  \n                                                        \n                                                                        IdentitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsService\n                                                  \n                                                        \n                                                                        JobsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(actionType: ActionType, concernedTo: Types.ObjectId, payload?: Record, options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionType\n                                            \n                                                            ActionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                concernedTo\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueProcessor\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueProcessor:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(payload: string[], options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, HttpStatus, Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Types } from 'mongoose';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\nimport { IdentitiesService } from '~/management/identities/identities.service';\nimport { JobState } from '../jobs/_enums/state.enum';\nimport { Jobs } from '../jobs/_schemas/jobs.schema';\nimport { JobsService } from '../jobs/jobs.service';\nimport { TasksService } from '../tasks/tasks.service';\nimport { ActionType } from './_enum/action-type.enum';\nimport { ExecuteJobOptions } from './_interfaces/execute-job-options.interface';\nimport { Tasks } from '../tasks/_schemas/tasks.schema';\n\nconst DEFAULT_SYNC_TIMEOUT = 30_000;\n\n@Injectable()\nexport class BackendsService extends AbstractQueueProcessor {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected identitiesService: IdentitiesService,\n    protected jobsService: JobsService,\n    protected tasksService: TasksService,\n  ) {\n    super({ moduleRef });\n  }\n\n  public async onModuleInit() {\n    await super.onModuleInit();\n\n    const jobsCompleted = await this._queue.getCompleted();\n    for (const job of jobsCompleted) {\n      const isSyncedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: job.id, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.COMPLETED,\n            finishedAt: new Date(),\n            result: job.returnvalue,\n          },\n        },\n        { new: true },\n      );\n      if (isSyncedJob) {\n        await this.identitiesService.model.findByIdAndUpdate(isSyncedJob.concernedTo, {\n          $set: {\n            state: IdentityState.SYNCED,\n          },\n        });\n        this.logger.warn(`Job already completed, syncing... [${job.id}::COMPLETED]`);\n      }\n    }\n\n    this.queueEvents.on('waiting', (payload) => this.logger.debug(`Job is now waiting... [${payload.jobId}]`));\n    this.queueEvents.on('active', async (payload) => {\n      this.logger.debug(`Job is now active... [${payload.jobId}]`);\n      await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.IN_PROGRESS,\n            processedAt: new Date(),\n          },\n        },\n        { new: true },\n      );\n    });\n\n    this.queueEvents.on('failed', async (payload) => {\n      this.logger.debug(`Job failed ! [${payload.jobId}]`);\n      const failedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.FAILED,\n            finishedAt: new Date(),\n            result: payload.failedReason,\n          },\n        },\n        { new: true },\n      );\n      await this.identitiesService.model.findByIdAndUpdate(failedJob.concernedTo, {\n        $set: {\n          state: IdentityState.ON_ERROR,\n        },\n      });\n    });\n\n    this.queueEvents.on('completed', async (payload) => {\n      const completedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.COMPLETED,\n            finishedAt: new Date(),\n            result: payload.returnvalue,\n          },\n        },\n        { upsert: true, new: true },\n      );\n      await this.identitiesService.model.findByIdAndUpdate(completedJob.concernedTo, {\n        $set: {\n          state: IdentityState.SYNCED,\n        },\n      });\n      this.logger.log(`Job completed... Syncing [${payload.jobId}]`);\n    });\n  }\n\n  public async syncAllIdentities(options?: ExecuteJobOptions): Promise {\n    const syncAllIdentities = (await this.identitiesService.find({\n      state: IdentityState.TO_SYNC,\n    })) as unknown as Identities[];\n    const identities = syncAllIdentities.map((identity: Identities) => {\n      return {\n        action: ActionType.IDENTITY_UPDATE,\n        identity,\n      };\n    });\n\n    const task: Tasks = await this.tasksService.create({\n      jobs: identities.map((identity) => identity.identity._id),\n    });\n\n    const result = {};\n    for (const identity of identities) {\n      const [executedJob] = await this.executeJob(\n        identity.action,\n        identity.identity._id,\n        { identity },\n        {\n          ...options,\n          task: task._id,\n        },\n      );\n      result[identity.identity._id] = executedJob;\n    }\n    return result;\n  }\n\n  public async syncIdentities(payload: string[], options?: ExecuteJobOptions): Promise {\n    const identities: {\n      action: ActionType;\n      identity: Identities;\n    }[] = [];\n\n    if (!payload.length) throw new BadRequestException('No identities to sync');\n\n    for (const key of payload) {\n      const identity = await this.identitiesService.findById(key);\n      if (identity.state !== IdentityState.TO_SYNC) {\n        throw new BadRequestException({\n          status: HttpStatus.BAD_REQUEST,\n          message: `Identity ${key} is not in state TO_SYNC`,\n          identity,\n        });\n      }\n      identities.push({\n        action: ActionType.IDENTITY_UPDATE,\n        identity,\n      });\n    }\n\n    const task: Tasks = await this.tasksService.create({\n      jobs: identities.map((identity) => identity.identity._id),\n    });\n\n    const result = {};\n    for (const identity of identities) {\n      const [executedJob] = await this.executeJob(\n        identity.action,\n        identity.identity._id,\n        { identity },\n        {\n          ...options,\n          task: task._id,\n        },\n      );\n      result[identity.identity._id] = executedJob;\n    }\n    return result;\n  }\n\n  public async executeJob(\n    actionType: ActionType,\n    concernedTo: Types.ObjectId,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    payload?: Record,\n    options?: ExecuteJobOptions,\n  ): Promise {\n    const job = await this.queue.add(\n      actionType,\n      {\n        concernedTo,\n        payload,\n      },\n      options?.job,\n    );\n    const optionals = {};\n    if (!options?.async) {\n      optionals['processedAt'] = new Date();\n      optionals['state'] = JobState.IN_PROGRESS;\n    }\n    const jobStore = await this.jobsService.create({\n      jobId: job.id,\n      action: actionType,\n      params: payload,\n      concernedTo: concernedTo,\n      comment: options?.comment,\n      task: options?.task,\n      state: JobState.CREATED,\n      ...optionals,\n    });\n    await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n      $set: {\n        state: IdentityState.PROCESSING,\n      },\n    });\n    if (!options?.async) {\n      let error: Error;\n      try {\n        const response = await job.waitUntilFinished(this.queueEvents, options.syncTimeout || DEFAULT_SYNC_TIMEOUT);\n        const jobStoreUpdated = await this.jobsService.update(jobStore._id, {\n          $set: {\n            state: JobState.COMPLETED,\n            processedAt: new Date(),\n            finishedAt: new Date(),\n            result: response,\n          },\n        });\n        await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n          $set: {\n            state: IdentityState.SYNCED,\n          },\n        });\n        return [jobStoreUpdated as unknown as Jobs, response];\n      } catch (err) {\n        error = err;\n      }\n      const jobFailed = await this.jobsService.update(jobStore._id, {\n        $set: {\n          state: JobState.FAILED,\n          finishedAt: new Date(),\n          result: error,\n        },\n      });\n      await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n        $set: {\n          state: IdentityState.ON_ERROR,\n        },\n      });\n      if (options?.timeoutDiscard !== false) {\n        job.discard();\n        throw new BadRequestException({\n          status: HttpStatus.BAD_REQUEST,\n          message: `Sync job ${job.id} failed to finish in time`,\n          error,\n          job: jobFailed as unknown as Jobs,\n        });\n      }\n      throw new RequestTimeoutException({\n        status: HttpStatus.REQUEST_TIMEOUT,\n        message: `Job now continue to run in background ${job.id}, timeout wait until finish reached`,\n        error,\n        job: jobFailed as unknown as Jobs,\n      });\n    }\n    return [jobStore.toObject(), null];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsSyncallCommand.html":{"url":"classes/BackendsSyncallCommand.html","title":"class - BackendsSyncallCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsSyncallCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, backendsService: BackendsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendsService\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsString } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @IsMongoId()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old password', type: String })\n  public oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentCreateQuestions, AgentsCommand } from './agents.command';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bullmq';\nimport { RedisOptions } from 'ioredis';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport config, { MongoosePlugin } from '~/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { KeyringsCommand, KeyringsCreateQuestions } from './keyrings.command';\nimport { KeyringsModule } from '~/core/keyrings/keyrings.module';\nimport { BackendsCommand } from './backends.command';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { AuthModule } from '~/core/auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        config: {\n          ...config.get('ioredis.options'),\n          url: config.get('ioredis.uri'),\n        },\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n    BackendsModule,\n    AuthModule,\n  ],\n  providers: [\n    ...AgentsCommand.registerWithSubCommands(),\n    ...KeyringsCommand.registerWithSubCommands(),\n    ...BackendsCommand.registerWithSubCommands(),\n    AgentCreateQuestions,\n    KeyringsCreateQuestions,\n  ],\n})\nexport class CliModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                required\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly displayName: string = 'Console';\n\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AgentsModule } from './agents/agents.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BackendsModule } from './backends/backends.module';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { TasksModule } from './tasks/tasks.module';\n\n@Module({\n  imports: [AuthModule, BackendsModule, LoggerModule, KeyringsModule, AgentsModule, JobsModule, TasksModule],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPart.html":{"url":"classes/DataPart.html","title":"class - DataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/_parts/data.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_DATA_TYPE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport const DEFAULT_DATA_TYPE = 'default';\n\n@Schema({ _id: false })\nexport class DataPart extends Document {\n  @Prop({\n    type: String,\n    default: DEFAULT_DATA_TYPE,\n  })\n  public type?: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public message: string;\n}\n\nexport const DataPartSchema = SchemaFactory.createForClass(DataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecuteJobDto.html":{"url":"classes/ExecuteJobDto.html","title":"class - ExecuteJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecuteJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/execute-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ActionType)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional } from 'class-validator';\nimport { ActionType } from '../_enum/action-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ExecuteJobDto {\n  @IsNotEmpty()\n  @IsEnum(ActionType)\n  @ApiProperty({ type: String })\n  public action: ActionType;\n\n  @IsMongoId()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id: string;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: Object })\n  public payload: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecuteJobOptions.html":{"url":"interfaces/ExecuteJobOptions.html","title":"interface - ExecuteJobOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecuteJobOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/execute-job-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            job\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syncTimeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutDiscard\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job:         JobsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JobsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syncTimeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syncTimeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutDiscard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutDiscard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JobsOptions } from 'bullmq';\nimport { Types } from 'mongoose';\n\nexport interface ExecuteJobOptions {\n  job?: JobsOptions;\n  async?: boolean;\n  syncTimeout?: number;\n  timeoutDiscard?: boolean;\n  comment?: string;\n  task?: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@streamkits/nestjs_module_scrud';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:151\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:314\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:193\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:254\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                additionalFields\n                            \n                            \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  lifecycle: IdentityLifecycle;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  additionalFields: AdditionalFieldsPart;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesController.html":{"url":"controllers/IdentitiesController.html","title":"controller - IdentitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})/state')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { IdentitiesDto, IdentitiesCreateDto, IdentitiesUpdateDto } from './_dto/identities.dto';\nimport { IdentitiesService } from './identities.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { Identities } from './_schemas/identities.schema';\nimport { Types, Document } from 'mongoose';\nimport { IdentityState } from './_enums/states.enum';\n// import { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n// @UseFilters(new IdentitiesValidationFilter())\n@ApiTags('management')\n@Controller('identities')\nexport class IdentitiesController extends AbstractController {\n  constructor(\n    protected readonly _service: IdentitiesService,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as Identities).state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    const data = await this._service.upsert(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      IdentitiesController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.findById(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Get('count')\n  public async count(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const total = await this._service.count(searchFilterSchema, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: total,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})/state')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async updateState(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const identity = await this._service.findById(_id);\n    if (!identity) {\n      throw new BadRequestException('Identity not found');\n    }\n    if (identity.state !== IdentityState.TO_VALIDATE) {\n      throw new BadRequestException(\"La validation de l'identité est déjà complétée.\");\n    }\n    const data = await this._service.updateState(_id, body.state);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesJsonFormsController.html":{"url":"controllers/IdentitiesJsonFormsController.html","title":"controller - IdentitiesJsonFormsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesJsonFormsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/jsonforms\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                generate\n                            \n                            \n                                    \n                                    Async\n                                generateAll\n                            \n                            \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    Async\n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(res: Response, schema: string | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                schema\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateAll')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { Response } from 'express';\n\n@Controller('management/identities/jsonforms')\nexport class IdentitiesJsonFormsController extends AbstractController {\n  constructor(private readonly _service: IdentitiesJsonformsService) {\n    super();\n  }\n\n  @Post('generateAll')\n  async generateAll(@Res() res: Response): Promise {\n    const result = await this._service.generateAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Post('generate')\n  async generate(@Res() res: Response, @Body('schema') schema: string | null = null): Promise {\n    const result = await this._service.generate({ schema, path: './configs/identities/jsonforms' });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get()\n  async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesJsonformsModule.html":{"url":"modules/IdentitiesJsonformsModule.html","title":"module - IdentitiesJsonformsModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesJsonformsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesJsonFormsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { IdentitiesJsonFormsController } from './identities.jsonforms.controller';\n\n@Module({\n  controllers: [IdentitiesJsonFormsController],\n  providers: [IdentitiesJsonformsService],\n  exports: [IdentitiesJsonformsService],\n})\nexport class IdentitiesJsonformsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesJsonformsService.html":{"url":"injectables/IdentitiesJsonformsService.html","title":"injectable - IdentitiesJsonformsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesJsonformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generate\n                            \n                            \n                                    Async\n                                generateAll\n                            \n                            \n                                    Private\n                                resolveJsonFormPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveJsonFormPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveJsonFormPath(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { parse, stringify } from 'yaml';\nimport { existsSync, readFileSync, writeFileSync, readdirSync } from 'fs';\nimport Ajv from 'ajv';\nimport { ValidationConfigException } from '~/_common/errors/ValidationException';\n\n@Injectable()\nexport class IdentitiesJsonformsService extends AbstractService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n\n  constructor() {\n    super();\n    //this.validateSchema = this.ajv.compile(validSchema);\n  }\n\n  private resolveJsonFormPath(schema: string): string | null {\n    if (!schema.endsWith('.yml')) schema += '.yml';\n    const hardConfigPath = `./src/management/identities/jsonforms/_config/${schema}`;\n    const dynamicConfigPath = `./configs/identities/jsonforms/${schema}`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  async generate({ schema, path }): Promise {\n    if (schema) {\n      console.log(`Generating jsonforms for schema: ${schema}`);\n      if (!schema.endsWith('.yml')) schema += '.yml';\n      const filePath = `${path}/${schema}`;\n      console.log(`File path: ${filePath}`);\n      if (!existsSync(filePath)) {\n        console.log(`File not found: ${filePath}`);\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n\n      const jsonSchema = parse(readFileSync(filePath, 'utf-8'));\n\n      // const jsonForm = {\n      //   type: 'VerticalLayout',\n      //   elements: Object.keys(jsonSchema.properties).map((key) => {\n      //     return {\n      //       type: 'Control',\n      //       label: key,\n      //       scope: `#/properties/${key}`,\n      //       options: {\n      //         required: jsonSchema.required && jsonSchema.required.includes(key),\n      //       },\n      //     };\n      //   }),\n      // };\n\n      const jsonForm = {\n        type: 'Group',\n        label: schema,\n        elements: Object.keys(jsonSchema.properties)\n          .reduce((acc, key, index) => {\n            const groupIndex = Math.floor(index / 3); // Determine the current group based on the index\n            if (!acc[groupIndex]) {\n              acc[groupIndex] = {\n                // Initialize a new HorizontalLayout group if it doesn't exist\n                type: 'HorizontalLayout',\n                elements: [],\n              };\n            }\n\n            acc[groupIndex].elements.push({\n              // Add the current element to its corresponding group\n              type: 'Control',\n              label: key,\n              scope: `#/properties/${key}`,\n              options: {\n                required: jsonSchema.required && jsonSchema.required.includes(key),\n                showUnfocusedDescription: false,\n              },\n            });\n\n            return acc;\n          }, [])\n          .map((group) => group), // Flatten the structure\n      };\n      if (!schema.endsWith('.ui.yml')) schema = schema.replace('.yml', '.ui.yml');\n      const jsonFormPath = `${path.replace('validations', 'jsonforms')}/${schema}`;\n      console.log(`Writing jsonform to: ${jsonFormPath}`);\n      writeFileSync(`${jsonFormPath}`, stringify(jsonForm));\n      return jsonForm;\n    }\n  }\n\n  async generateAll(): Promise {\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    const hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ schema: file, path: hardConfigPath }));\n    const dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n      schema: file,\n      path: dynamicConfigPath,\n    }));\n\n    console.log('Generating jsonforms for all schemas');\n    console.log('Hard config files:', hardConfigFiles);\n    console.log('Dynamic config files:', dynamicConfigFiles);\n    const files = [...hardConfigFiles, ...dynamicConfigFiles].filter((file) => file.schema.endsWith('.yml'));\n    for (const file of files) {\n      this.generate(file);\n    }\n    return files.length;\n  }\n\n  async findAll(): Promise {\n    const hardConfigPath = './src/management/identities/jsonforms/_config';\n    const dynamicConfigPath = './configs/identities/jsonforms';\n    const hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ file, path: hardConfigPath }));\n    const dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({ file, path: dynamicConfigPath }));\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.ui.yml', '');\n      result.push({ [key]: data });\n    }\n    return [result, files.length];\n  }\n\n  async findOne(schema): Promise {\n    if (schema.endsWith('.yml')) schema = schema.replace('.yml', '');\n    const filePath = this.resolveJsonFormPath(schema + '.ui');\n    if (!filePath) {\n      throw new ValidationConfigException({ message: `File not found: ${schema}.ui.yml` });\n    }\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\n\nIdentitiesService \n\nIdentitiesService \n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesService  -->\n\nIdentitiesModule->IdentitiesService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                        \n                            IdentitiesService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Identities, IdentitiesSchema } from './_schemas/identities.schema';\nimport { IdentitiesService } from './identities.service';\nimport { IdentitiesController } from './identities.controller';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentitiesJsonformsService } from './jsonforms/identities.jsonforms.service';\nimport { IdentitiesJsonformsModule } from './jsonforms/identities.jsonforms.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule, IdentitiesJsonformsModule],\n        inject: [IdentitiesValidationService, IdentitiesJsonformsService],\n        useFactory: () => IdentitiesSchema,\n      },\n    ]),\n  ],\n  providers: [\n    IdentitiesService,\n    IdentitiesValidationService,\n    {\n      provide: APP_FILTER,\n      useClass: IdentitiesValidationFilter,\n    },\n    IdentitiesJsonformsService,\n  ],\n  controllers: [IdentitiesController],\n  exports: [IdentitiesService],\n})\nexport class IdentitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesService.html":{"url":"injectables/IdentitiesService.html","title":"injectable - IdentitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Private\n                                handleValidationError\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, _validation: IdentitiesValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/identities.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _validation\n                                                  \n                                                        \n                                                                        IdentitiesValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:20\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:116\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleValidationError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleValidationError(error: Error | HttpException, identity: Identities, logPrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error | HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            Identities\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                logPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Identities\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:68\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId | any, state: IdentityState, options?)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities.service.ts:107\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                            IdentityState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(data?: any, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:29\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Identities } from './_schemas/identities.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { IdentityState } from './_enums/states.enum';\n\n@Injectable()\nexport class IdentitiesService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Identities.name) protected _model: Model,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n\n  public async create(\n    data?: any,\n    options?: SaveOptions,\n  ): Promise> {\n    const created: Document = await super.create(data, options);\n    return created;\n    //TODO: add backends service logic here\n  }\n\n  public async upsert(\n    data?: any,\n    options?: QueryOptions,\n  ): Promise>> {\n    Logger.log(`Upserting identity: ${JSON.stringify(data)}`);\n    const logPrefix = `Validation [${data.inetOrgPerson.cn}]:`;\n    data.additionalFields.validations = {};\n    try {\n      this.logger.log(`${logPrefix} Starting additionalFields validation.`);\n      const validations = await this._validation.validate(data.additionalFields);\n      this.logger.log(`${logPrefix} AdditionalFields validation successful.`);\n      this.logger.log(`Validations : ${validations}`);\n      data.state = IdentityState.TO_VALIDATE;\n    } catch (error) {\n      data = this.handleValidationError(error, data, logPrefix);\n    }\n\n    //TODO: ameliorer la logique d'upsert\n    const identity = await this._model.findOne({ 'inetOrgPerson.uid': data.inetOrgPerson.uid });\n    if (identity) {\n      this.logger.log(`${logPrefix} Identity already exists. Updating.`);\n      data.additionalFields.objectClasses = [\n        ...new Set([...identity.additionalFields.objectClasses, ...data.additionalFields.objectClasses]),\n      ];\n      data.additionalFields.attributes = {\n        ...identity.additionalFields.attributes,\n        ...data.additionalFields.attributes,\n      };\n      data.additionalFields.validations = {\n        ...identity.additionalFields.validations,\n        ...data.additionalFields.validations,\n      };\n    }\n\n    const upsert = await super.upsert({ 'inetOrgPerson.uid': data.inetOrgPerson.uid }, data, options);\n    return upsert;\n    //TODO: add backends service logic here\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions & { rawResult: true },\n  ): Promise>> {\n    // noinspection UnnecessaryLocalVariableJS\n    //TODO : add validation logic here\n    const logPrefix = `Validation [${update.inetOrgPerson.cn}]:`;\n    try {\n      this.logger.log(`${logPrefix} Starting additionalFields validation.`);\n      const validations = await this._validation.validate(update.additionalFields);\n      this.logger.log(`${logPrefix} AdditionalFields validation successful.`);\n      this.logger.log(`Validations : ${validations}`);\n    } catch (error) {\n      if (error instanceof ValidationConfigException) {\n        this.logger.error(`${logPrefix} Validation config error. ${JSON.stringify(error.getValidations())}`);\n        throw new ValidationConfigException(error.getPayload());\n      }\n      if (error instanceof ValidationSchemaException) {\n        this.logger.warn(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n        update.additionalFields.validations = error.getValidations();\n        throw new ValidationSchemaException(error.getPayload());\n      } else {\n        this.logger.error(`${logPrefix} Unhandled error: ${error.message}`);\n        throw error; // Rethrow the original error if it's not one of the handled types.\n      }\n    }\n    if (update.state === IdentityState.TO_COMPLETE) {\n      update = { ...update, state: IdentityState.TO_VALIDATE };\n    }\n    if (update.state === IdentityState.SYNCED) {\n      update = { ...update, state: IdentityState.TO_VALIDATE };\n    }\n    //update.state = IdentityState.TO_VALIDATE;\n    const updated = await super.update(_id, update, options);\n    //TODO: add backends service logic here (TO_SYNC)\n    return updated;\n  }\n\n  public async updateState(\n    _id: Types.ObjectId | any,\n    state: IdentityState,\n    options?: QueryOptions & { rawResult: true },\n  ): Promise>> {\n    const updated = await super.update(_id, { state }, options);\n    return updated;\n  }\n\n  public async delete(\n    _id: Types.ObjectId | any,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    // noinspection UnnecessaryLocalVariableJS\n    //TODO: soft delete\n    const deleted = await super.delete(_id, options);\n    //TODO: add backends service logic here (TO_SYNC)\n    return deleted;\n  }\n\n  private handleValidationError(error: Error | HttpException, identity: Identities, logPrefix: string) {\n    if (error instanceof ValidationConfigException) {\n      this.logger.error(`${logPrefix} Validation config error. ${JSON.stringify(error.getValidations())}`);\n      throw new ValidationConfigException(error.getPayload());\n    }\n\n    if (error instanceof ValidationSchemaException) {\n      this.logger.warn(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n      identity.additionalFields.validations = error.getValidations();\n      if (identity.state === IdentityState.TO_CREATE) {\n        this.logger.warn(`${logPrefix} State set to TO_COMPLETE.`);\n        identity.state = IdentityState.TO_COMPLETE;\n        return identity;\n      } else {\n        this.logger.error(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n        throw new ValidationSchemaException(error.getPayload());\n      }\n    } else {\n      this.logger.error(`${logPrefix} Unhandled error: ${error.message}`);\n      throw error; // Rethrow the original error if it's not one of the handled types.\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    Async\n                                searchAll\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management')\n@Controller('management/identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                resolveConfigPath\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveConfigPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveConfigPath(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync, readdirSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport { buildYup } from 'schema-to-yup';\nimport ajvErrors from 'ajv-errors';\nimport validSchema from './_config/validSchema';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  constructor() {\n    ajvErrors(this.ajv);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger();\n  }\n\n  private resolveConfigPath(key: string): string | null {\n    const hardConfigPath = `./src/management/identities/validations/_config/${key}.yml`;\n    const dynamicConfigPath = `./configs/identities/validations/${key}.yml`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  async validate(data: AdditionalFieldsPart): Promise {\n    const objectClasses = data.objectClasses;\n    const attributes = data.attributes;\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = this.resolveConfigPath(key);\n      if (!existsSync(path)) {\n        validations[key] = `Fichier de config '${key}.yml' introuvable`;\n        reject = true;\n        continue;\n      }\n\n      // Check for invalid schema\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations[key] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        reject = true;\n        continue;\n      }\n    }\n\n    if (reject) {\n      throw new ValidationConfigException({ validations });\n    }\n\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key]);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any): Promise {\n    const path = this.resolveConfigPath(key);\n    const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n\n    const yupSchema = buildYup(schema, { noSortEdges: true });\n    try {\n      await yupSchema.validate(attribute, { strict: true, abortEarly: false });\n      return null;\n    } catch (error) {\n      return error.inner.reduce((acc, err) => {\n        acc[err.path] = err.message;\n        return acc;\n      }, {});\n    }\n  }\n\n  async findAll(): Promise {\n    this.logger.debug(['findAll', JSON.stringify(Object.values(arguments))].join(' '));\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    // Retrieve files from each directory and tag them with their source\n    const hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({\n      file,\n      path: hardConfigPath,\n      source: 'hardConfig',\n    }));\n    const dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n      file,\n      path: dynamicConfigPath,\n      source: 'dynamicConfig',\n    }));\n\n    // Combine the file arrays\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.yml', '');\n      result.push({ [key]: data, source: fileObj.source });\n    }\n    return [result, files.length];\n  }\n\n  async findOne(schema): Promise {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '));\n    const filePath = this.resolveConfigPath(schema);\n    if (!existsSync(filePath)) {\n      const message = `File not found: ${filePath}`;\n      throw new ValidationConfigException({ message });\n    }\n\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/jobs.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                concernedTo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                finishedAt\n                            \n                            \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                params\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                processedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                result\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        processedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: JobState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { JobState } from '../_enums/state.enum';\n\nexport type JobsDocument = Jobs & Document;\n\n@Schema({ versionKey: false })\nexport class Jobs extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public jobId: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public action: string;\n\n  @Prop({\n    type: Types.ObjectId,\n    required: true,\n  })\n  public concernedTo?: Types.ObjectId;\n\n  @Prop({ type: Types.ObjectId })\n  public task?: Types.ObjectId;\n\n  @Prop({ type: String })\n  public comment?: string;\n\n  @Prop({ type: Object, default: {} })\n  public params?: object;\n\n  @Prop({ type: Object, default: {} })\n  public result?: object;\n\n  @Prop({ type: Date })\n  public processedAt?: Date;\n\n  @Prop({ type: Date })\n  public finishedAt?: Date;\n\n  @Prop({ type: Number, enum: JobState, default: JobState.CREATED })\n  state: JobState;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JobsSchema, Jobs } from './_schemas/jobs.schema';\nimport { JobsService } from './jobs.service';\nimport { TasksController } from './jobs.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Jobs.name,\n        useFactory: () => JobsSchema,\n      },\n    ]),\n  ],\n  providers: [JobsService],\n  controllers: [TasksController],\n  exports: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:151\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:314\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:193\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:254\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Jobs } from './_schemas/jobs.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JobsService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Jobs.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    Logger.debug(`Atempt to authenticate with JTI: `, 'JwtStrategy');\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public name: string;\n\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n    default: ['0.0.0.0/0'],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCommand.html":{"url":"classes/KeyringsCommand.html","title":"class - KeyringsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    token: 0,\n    // allowedNetworks: 1,\n    // suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      token: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateCommand.html":{"url":"classes/KeyringsCreateCommand.html","title":"class - KeyringsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, keyringsService: KeyringsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateQuestions.html":{"url":"classes/KeyringsCreateQuestions.html","title":"class - KeyringsCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseName\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseName(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Name ?', name: 'name'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\n\nKeyringsService \n\nKeyringsService \n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n  exports: [KeyringsService],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: KeyringsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:15\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:314\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:193\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:254\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model, SaveOptions, Document } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { KeyringsCreateDto } from './_dto/keyrings.dto';\nimport { randomBytes } from 'node:crypto';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: KeyringsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    const token = randomBytes(64).toString('hex');\n    return await super.create(\n      {\n        ...data,\n        token,\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.debug(`Try to authenticate user : ${username}`, 'LocalStrategy');\n    const user = await this.auth.authenticateWithLocal(username, password);\n    console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/logger.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                concerned\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                context\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concerned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:36\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:29\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DataPartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { DataPart, DataPartSchema } from './_parts/data.part.schema';\n\nexport const DEFAULT_CONTEXT = 'default';\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public level: string;\n\n  @Prop({\n    type: DataPartSchema,\n    required: true,\n    default: {},\n  })\n  public data: DataPart;\n\n  /**\n   * @description The context of the log message.\n   * @example 'identity'\n   */\n  @Prop({ type: String })\n  public context?: string;\n\n  /**\n   * @description The concerned document in collection of the log message.\n   * @example '5f7b1b3b7f7b1b3b7f7b1b3b'\n   */\n  @Prop({ type: String })\n  public concerned?: string;\n}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './_schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:151\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:314\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:193\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:254\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Logger } from './_schemas/logger.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoggerService extends AbstractServiceSchema {\n  constructor(@InjectModel(Logger.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\n\n@Module({\n  imports: [IdentitiesModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                gettoken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(cpwd: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'change password'})@ApiResponse({status: 200, description: 'Password has been successfully changed.'})@ApiResponse({status: 403, description: 'Old password wrong'})@ApiResponse({status: 500, description: 'Backend error'})@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpwd\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        gettoken\n                        \n                    \n                \n            \n            \n                \n                        \n                    gettoken(asktoken: AskTokenDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('gettoken')@ApiOperation({summary: 'ask token for reseting password'})@ApiResponse({status: 200, description: 'Token', content: undefined})@ApiResponse({status: 500, description: 'Backend error'})@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asktoken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(data: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'reset password'})@ApiResponse({status: 200, description: 'Reset OK'})@ApiResponse({status: 500, description: 'Reset KO'})@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: VerifyTokenDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verifytoken')@ApiOperation({summary: 'ask token for reseting password'})@ApiResponse({status: 201, description: 'Token OK'})@ApiResponse({status: 500, description: 'Token KO'})@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            VerifyTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Res, UseGuards, Logger } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { VerifyTokenDto } from './dto/verify-token.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\n\n@Controller('passwd')\n@ApiTags('passwd')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  public constructor(private passwdService: PasswdService) {}\n\n  @Post('change')\n  @ApiOperation({ summary: 'change password' })\n  @ApiResponse({ status: 200, description: 'Password has been successfully changed.' })\n  @ApiResponse({ status: 403, description: 'Old password wrong' })\n  @ApiResponse({ status: 500, description: 'Backend error' })\n  @UseGuards(AuthGuard('api-key'))\n  public async change(@Body() cpwd: ChangePasswordDto, @Res() res: Response): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, data] = await this.passwdService.change(cpwd);\n    data.data.uid = cpwd.id;\n    this.logger.log(`call passwd change for : ${cpwd.id}`);\n\n    if (data.data.status === 0) {\n      return res.status(200).json(data);\n    } else {\n      if (data.data.status === 1) {\n        return res.status(403).json(data);\n      }\n      return res.status(200).json(data);\n    }\n  }\n\n  @Post('gettoken')\n  @ApiOperation({ summary: 'ask token for reseting password' })\n  @ApiResponse({ status: 200, description: 'Token', content: {} })\n  @ApiResponse({ status: 500, description: 'Backend error' })\n  @UseGuards(AuthGuard('api-key'))\n  public async gettoken(@Body() asktoken: AskTokenDto, @Res() res: Response): Promise {\n    this.logger.log('GetToken for : ' + asktoken.id);\n    const data = await this.passwdService.askToken(asktoken);\n    return res.status(200).json({ token: data });\n  }\n\n  @Post('verifytoken')\n  @ApiOperation({ summary: 'ask token for reseting password' })\n  @ApiResponse({ status: 201, description: 'Token OK' })\n  @ApiResponse({ status: 500, description: 'Token KO' })\n  @UseGuards(AuthGuard('api-key'))\n  public async verifyToken(@Body() token: VerifyTokenDto, @Res() res: Response): Promise {\n    this.logger.log('Verify token : ' + token.token);\n    if (await this.passwdService.verifyToken(token.token)) {\n      return res.status(200).json({ status: 0 });\n    }\n    return res.status(200).json({ status: 1 });\n  }\n\n  @Post('reset')\n  @ApiOperation({ summary: 'reset password' })\n  @ApiResponse({ status: 200, description: 'Reset OK' })\n  @ApiResponse({ status: 500, description: 'Reset KO' })\n  @UseGuards(AuthGuard('api-key'))\n  public async reset(@Body() data: ResetPasswordDto, @Res() res: Response): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_, resetData] = await this.passwdService.reset(data);\n    if (resetData.status === 0) {\n      return res.status(200).json(resetData);\n    }\n    return res.status(200).json({ status: 1, error: 'invalid token' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_imports\n\n\n\ncluster_PasswdModule_providers\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nPasswdModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\n\n@Module({\n  imports: [PasswdModule],\n  controllers: [PasswdController],\n  providers: [PasswdService],\n})\nexport class PasswdModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswdService.html":{"url":"injectables/PasswdService.html","title":"injectable - PasswdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                askToken\n                            \n                            \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    Public\n                                    Async\n                                decryptToken\n                            \n                            \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    Public\n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(backends: BackendsService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/management/passwd/passwd.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backends\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        askToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    askToken(askToken: AskTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                askToken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(passwd: ChangePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwd\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decryptToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decryptToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(data: ResetPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { Injectable } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public constructor(\n    protected backends: BackendsService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async change(passwd: ChangePasswordDto): Promise {\n    return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, new Types.ObjectId(passwd.id), passwd, {\n      async: false,\n    });\n  }\n\n  public async askToken(askToken: AskTokenDto): Promise {\n    const iv = crypto.randomBytes(12).toString('base64');\n    const key = crypto.randomBytes(16).toString('hex');\n    const cipher = crypto.createCipheriv('aes-256-gcm', key, iv);\n    const dataStruct = { uid: askToken.id, mail: askToken.mail };\n    let ciphertext = cipher.update(JSON.stringify(dataStruct), 'utf8', 'base64');\n    ciphertext += cipher.final('base64');\n    const tag = cipher.getAuthTag();\n    const tokenStruct = JSON.stringify({ k: key, iv: iv, tag: tag });\n    await this.redis.set(ciphertext, tokenStruct);\n    await this.redis.expire(ciphertext, 3600);\n    return ciphertext;\n  }\n\n  public async verifyToken(token: string): Promise {\n    const data = await this.decryptToken(token);\n    return Object.keys(data).length === 0;\n  }\n\n  public async decryptToken(token: string): Promise {\n    if (!(await this.redis.exists(token))) {\n      throw new Error('Token not found');\n    }\n\n    const result = await this.redis.get(token);\n    const cypherData = JSON.parse(result);\n    const decipher = crypto.createDecipheriv('aes-256-gcm', cypherData.k, cypherData.iv);\n    decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n    const plaintext = decipher.update(token, 'base64', 'ascii');\n\n    return JSON.parse(plaintext);\n  }\n\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n    if (Object.keys(tokenData).length === 0) {\n      throw new Error('Invalid token');\n    }\n\n    const backendData = { uid: tokenData.uid, newPassword: data.newPassword };\n    return await this.backends.executeJob(\n      ActionType.IDENTITY_PASSWORD_RESET,\n      new Types.ObjectId(`${tokenData.id}`),\n      backendData,\n      {\n        async: false,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MyNewPassword', description: 'New Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/reset-password.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  token: string;\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  @IsString()\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: Boolean,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart).pre(\n  'save',\n  function (this: SecurityPart, next: () => void): void {\n    if (this.isNew) {\n      this.secretKey = Math.random().toString(36).slice(-8); //TODO: use crypto lib\n    }\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:22\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:16\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: QueryOptions | null | undefined): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyncIdentitiesDto.html":{"url":"classes/SyncIdentitiesDto.html","title":"class - SyncIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyncIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/sync-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/sync-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class SyncIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tasks.html":{"url":"classes/Tasks.html","title":"class - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/_schemas/tasks.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/tasks/_schemas/tasks.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type TasksDocument = Tasks & Document;\n\n@Schema({ versionKey: false })\nexport class Tasks extends AbstractSchema {\n  @Prop({ type: [Types.ObjectId] })\n  public jobs?: Types.ObjectId[];\n}\n\nexport const TasksSchema = SchemaFactory.createForClass(Tasks);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: JobsService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController-1.html":{"url":"controllers/TasksController-1.html","title":"controller - TasksController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: TasksService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TasksSchema, Tasks } from './_schemas/tasks.schema';\nimport { TasksService } from './tasks.service';\nimport { TasksController } from './tasks.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Tasks.name,\n        useFactory: () => TasksSchema,\n      },\n    ]),\n  ],\n  providers: [TasksService],\n  controllers: [TasksController],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:151\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:314\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:117\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:193\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:254\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Tasks } from './_schemas/tasks.schema';\n\n@Injectable()\nexport class TasksService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Tasks.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class VerifyTokenDto {\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  @IsString()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInfoInterface.html":{"url":"interfaces/WorkerResultInfoInterface.html","title":"interface - WorkerResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [backendName: string]:        Partial\n\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/_interfaces/worker-result.interface.ts:9\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInterface.html":{"url":"interfaces/WorkerResultInterface.html","title":"interface - WorkerResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         WorkerResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WorkerResultInfoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'attributes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'validations'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  objectClasses: string[];\n\n  @ApiProperty({\n    type: 'object',\n    name: 'attributes',\n  })\n  attributes: { [key: string]: any };\n\n  @ApiProperty({\n    type: 'object',\n    name: 'validations',\n  })\n  validations?: { [key: string]: { [key: string]: string } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @kradihsoy/lt-schematics : ^1.0.13\n        \n            @nestjs-modules/ioredis : ^1.0.1\n        \n            @nestjs/bullmq : ^10.0.1\n        \n            @nestjs/common : ^10.1.3\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.1.3\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.1\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @streamkits/nestjs_module_scrud : ^0.0.16\n        \n            ajv : ^8.12.0\n        \n            ajv-errors : ^3.0.0\n        \n            argon2 : ^0.40.1\n        \n            bullmq : ^4.14.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            helmet : ^7.1.0\n        \n            ioredis : ^5.3.2\n        \n            loglevel : ^1.8.1\n        \n            mongoose : ^8.0.2\n        \n            nest-commander : ^3.12.5\n        \n            nest-winston : ^1.9.4\n        \n            nestjs-request-context : ^3.0.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^11.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            swagger-themes : ^1.4.2\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.11.0\n        \n            winston-mongodb : ^5.1.1\n        \n            winston-transport : ^4.6.0\n        \n            yaml : ^2.3.4\n        \n            yup : ^1.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../action-type.enum.ts)\n                        \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            BackendCodesEnum   (src/.../backend-codes.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                        \n                            JobState   (src/.../state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/backends/_enum/action-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                Value : LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                 PING_TARGET\n                            \n                        \n                        \n                            \n                                Value : PING_TARGET\n                            \n                        \n                        \n                            \n                                 IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_CHANGE\n                            \n                        \n            \n        \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/core/backends/_interfaces/backend-codes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        BackendCodesEnum\n                    \n                \n                    \n                        \n                            BackendCodesEnum\n\n                        \n                    \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 GENERIC_ERROR\n                            \n                        \n                        \n                            \n                                 GENERIC_STOPPED\n                            \n                        \n                        \n                            \n                                 CONNECTION_ERROR\n                            \n                        \n                        \n                            \n                                 INVALID_LOGIN\n                            \n                        \n                        \n                            \n                                 INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 INVALID_JSON_RESPONSE\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n    src/core/jobs/_enums/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobState\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nArchitecture du projet\nFigma\nModules\nOrchestrateur\n\nGère la synchronisation des identités.\nMaintient une base d'identités pour faciliter la synchronisation.\nPermet la configuration de schémas additionnels pour une flexibilité totale.\nExpose des entrypoints via une API REST avec des tokens JWT.\n\nDeamon\n\nDéclenche les scripts backend pour effectuer les opérations de synchronisation.\nUtilise BullMQ et Redis pour communiquer avec l'orchestrateur.\n\nSchémas d'Identité\n\nUtilise le schéma LDAP InetOrgPerson pour stocker les informations dans une base de données MongoDB.\nPossibilité de configurer des schémas additionnels pour des champs différents dans chaque enregistrement.\nPermet de définir le typage, les règles, et la présence des champs dans les identités.\nSchémas optionnels tels que Supann et/ou Renater pour une utilisation fréquente.\n\nTechnologies utilisées\n\nLangages : NodeJS et NestJS.\nCommunication Démon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, mots de passe dans un serveur tiers (OpenLDAP).\nBackends : Scripts système en Python, PowerShell, Perl, Bash, etc.\n\nInterfaces Utilisateur\n\nFrontend : Interfaces permettant la configuration de l'orchestrateur et la manipulation des données à importer.\n\nConclusion\nSésame offre une solution puissante et flexible pour la synchronisation d'identités à partir de diverses sources vers des serveurs cibles. Son architecture modulaire et ses fonctionnalités avancées en font un outil idéal pour les environnements complexes nécessitant une gestion fine des schémas et des processus de synchronisation.\nVariables d'environnements\nExample :#Host Redis\nREDIS_HOST=redis\n#Port Redis\nREDIS_PORT=6379\n# redis credentials (si ces variables n existe pas, pas d'authentification par defaut\nREDIS_USER=monUser\nREDIS_PASSWORD=xx\n#Log level  ( fatal,error,warn,info,debug)\nLOG_LEVEL=info\n#Nom de la queue (bullMQ) Redis\nNAME_QUEUE=backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cn\n                            \n                            \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                sn\n                            \n                            \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                uid\n                            \n                            \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ _id: false })\nexport class inetOrgPerson {\n  @Prop({ required: true })\n  cn: string;\n\n  @Prop()\n  displayName?: string;\n\n  @Prop()\n  facsimileTelephoneNumber?: string;\n\n  @Prop()\n  givenName?: string;\n\n  @Prop()\n  labeledURI?: string;\n\n  @Prop()\n  mail?: string;\n\n  @Prop()\n  mobile?: string;\n\n  @Prop()\n  postalAddress?: string;\n\n  @Prop()\n  preferredLanguage?: string;\n\n  @Prop({ required: true })\n  sn: string;\n\n  @Prop()\n  telephoneNumber?: string;\n\n  @Prop()\n  title?: string;\n\n  @Prop({ required: true, unique: true })\n  uid: string;\n\n  @Prop()\n  userCertificate?: string;\n\n  @Prop()\n  userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:71\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:76\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesJsonformsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CliModule\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_imports\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\nKeyringsService \n\nKeyringsService \n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nIdentitiesService \n\nIdentitiesService \n\nIdentitiesService  -->\n\nIdentitiesModule->IdentitiesService \n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nPasswdModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    70 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.13\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            TasksDocument   (src/.../tasks.schema.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/jobs/_schemas/jobs.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/_schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/tasks/_schemas/tasks.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            additionalFieldsPartDtoStub   (src/.../addtionalFields.dto.stub.ts)\n                        \n                        \n                            AdditionalFieldsPartSchema   (src/.../additionalFields.part.schema.ts)\n                        \n                        \n                            AgentsSchema   (src/.../agents.schema.ts)\n                        \n                        \n                            AgentStateList   (src/.../agent-state.enum.ts)\n                        \n                        \n                            ApiBodyDecorator   (src/.../api-body.decorator.ts)\n                        \n                        \n                            ApiCreateDecorator   (src/.../api-create.decorator.ts)\n                        \n                        \n                            ApiCreatedResponseDecorator   (src/.../api-created-response.decorator.ts)\n                        \n                        \n                            ApiDeletedResponseDecorator   (src/.../api-deleted-response.decorator.ts)\n                        \n                        \n                            ApiPaginatedDecorator   (src/.../api-paginated.decorator.ts)\n                        \n                        \n                            ApiPaginatedResponseDecorator   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            ApiReadResponseDecorator   (src/.../api-read-response.decorator.ts)\n                        \n                        \n                            ApiUpdateDecorator   (src/.../api-update.decorator.ts)\n                        \n                        \n                            ApiUpdatedResponseDecorator   (src/.../api-updated-response.decorator.ts)\n                        \n                        \n                            AutoIncrementIDSkipSymbol   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            DataPartSchema   (src/.../data.part.schema.ts)\n                        \n                        \n                            DEFAULT_CONTEXT   (src/.../logger.schema.ts)\n                        \n                        \n                            DEFAULT_DATA_TYPE   (src/.../data.part.schema.ts)\n                        \n                        \n                            DEFAULT_INCREMENT   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            DEFAULT_MESSAGE   (src/.../ValidationException.ts)\n                        \n                        \n                            DEFAULT_STATUS_CODE   (src/.../ValidationException.ts)\n                        \n                        \n                            DEFAULT_SYNC_TIMEOUT   (src/.../backends.service.ts)\n                        \n                        \n                            DEFAULT_THIRD_PARTY_AUTH   (src/.../agents.schema.ts)\n                        \n                        \n                            DEFAULT_VALIDATIONS   (src/.../ValidationException.ts)\n                        \n                        \n                            EventEmitterSeparator   (src/.../event-emitter.constant.ts)\n                        \n                        \n                            ExcludeAgentType   (src/.../agent.type.ts)\n                        \n                        \n                            FormFieldPartSchema   (src/.../field.part.schema.ts)\n                        \n                        \n                            FormSchema   (src/.../form.schema.ts)\n                        \n                        \n                            FormSectionPartSchema   (src/.../section.part.schema.ts)\n                        \n                        \n                            FormTypeList   (src/.../types.ts)\n                        \n                        \n                            IdentitiesDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IdentitiesSchema   (src/.../identities.schema.ts)\n                        \n                        \n                            IdentitiesUpdateDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IDSchema   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            inetOrgPersonDtoStub   (src/.../inetOrgPerson.dto.stub.ts)\n                        \n                        \n                            inetOrgPersonSchema   (src/.../inetOrgPerson.part.ts)\n                        \n                        \n                            invalidObjectClassAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidRequiredAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidSchemaStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidTypeAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            JobsSchema   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsSchema   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerSchema   (src/.../logger.schema.ts)\n                        \n                        \n                            LogLevels   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            META_UNPROTECTED   (src/.../public.decorator.ts)\n                        \n                        \n                            MetadataPartSchema   (src/.../metadata.part.schema.ts)\n                        \n                        \n                            missingAttributeAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            ReqIdentity   (src/.../req-identity.decorator.ts)\n                        \n                        \n                            SecurityPartSchema   (src/.../security.part.schema.ts)\n                        \n                        \n                            seedRequestContextId   (src/.../contextId.ts)\n                        \n                        \n                            setLogLevel   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            StatePartSchema   (src/.../state.part.schema.ts)\n                        \n                        \n                            TasksSchema   (src/.../tasks.schema.ts)\n                        \n                        \n                            validAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            validSchema   (src/.../validSchema.ts)\n                        \n                        \n                            validSchemaStub   (src/.../identities.validation.stub.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/management/identities/_stubs/_parts/addtionalFields.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        additionalFieldsPartDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): additionalFieldsPartDto => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdditionalFieldsPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AdditionalFieldsPart)\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/agents.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AgentsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Agents).pre(\n  'save',\n  function (this: Agents, next: () => void): void {\n    if (this.isNew) {\n      this.displayName = this.displayName || this.username;\n    }\n    next();\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_THIRD_PARTY_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'local'\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AgentStateList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(AgentState)\n  // eslint-disable-next-line\n  .filter((k) => typeof AgentState[k as any] === 'number')\n  // eslint-disable-next-line\n  .map((k) => parseInt(AgentState[k as any], 10))\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-body.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiBodyDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiBodyOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiBody({\n      schema: {\n        $ref: getSchemaPath(model),\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-create.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiCreatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-created-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiCreatedResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.CREATED],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...options,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-deleted-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiDeletedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiQuery({ name: 'limit', type: Number, required: false }),\n    ApiQuery({ name: 'skip', type: Number, required: false }),\n    ApiExtraModels(PaginatedFilterDto),\n    ApiQuery({\n      required: false,\n      name: 'filters',\n      style: 'deepObject',\n      explode: true,\n      type: 'object',\n      schema: {\n        $ref: getSchemaPath(PaginatedFilterDto),\n      },\n    }),\n    ApiPaginatedResponseDecorator(model, options),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PaginatedResponseDto) },\n          {\n            properties: {\n              statusCode: {\n                type: 'number',\n                enum: [HttpStatus.OK],\n              },\n              data: {\n                type: 'array',\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-read-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiReadResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-update.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiUpdatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-updated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  badRequestOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n      ...badRequestOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AutoIncrementIDSkipSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('AutoIncrementIDSkip')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_INCREMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema(\n  {\n    field: String,\n    modelName: String,\n    count: Number,\n  },\n  { versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n    src/core/logger/_schemas/_parts/data.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DataPart)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_DATA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n\n\n        \n    \n\n    src/core/logger/_schemas/logger.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CONTEXT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/_common/errors/ValidationException.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Validation failed'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_STATUS_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_VALIDATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/core/backends/backends.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYNC_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30_000\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/event-emitter.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EventEmitterSeparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n\n\n        \n    \n\n    src/_common/types/agent.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExcludeAgentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['password']\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/parts/field.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormFieldPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FormFieldPart)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/form.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Form)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/parts/section.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormSectionPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FormSectionPart)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_enum/types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormTypeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(FormTypes)\n  .filter((k) => typeof FormTypes[k as any] === 'number') // eslint-disable-line\n  .map((k) => parseInt(FormTypes[k as any], 10))\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/identities.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IdentitiesUpdateDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_COMPLETE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/identities.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Identities)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/_parts/inetOrgPerson.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(inetOrgPerson)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/validations/_stubs/identities.validation.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        invalidObjectClassAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['testClass'],\n    attributes: { supann: { test: 'test' } },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidRequiredAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidSchemaStub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'invalid',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidTypeAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 123,\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        missingAttributeAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['class1'],\n    attributes: {},\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validSchemaStub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    supannEmpId: {\n      type: 'string',\n      description: 'Employee ID',\n    },\n    supannCivilite: {\n      type: 'string',\n      description: 'Title (Mr, Ms, etc.)',\n    },\n    supannBirthName: {\n      type: 'string',\n      description: 'Birth name',\n    },\n  },\n  required: ['supannEmpId', 'supannCivilite'],\n}\n                    \n                \n\n\n        \n    \n\n    src/core/jobs/_schemas/jobs.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Jobs)\n                    \n                \n\n\n        \n    \n\n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        KeyringsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Keyrings)\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogLevels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.levels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLogLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.setLevel\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        META_UNPROTECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'unprotected'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => applyDecorators(SetMetadata(META_UNPROTECTED, true))\n                    \n                \n\n\n        \n    \n\n    src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MetadataPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MetadataPart)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/params/req-identity.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqIdentity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, ctx: ExecutionContext): AgentType => {\n  const request = ctx.switchToHttp().getRequest();\n  return request.user;\n})\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/_parts/security.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SecurityPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SecurityPart).pre(\n  'save',\n  function (this: SecurityPart, next: () => void): void {\n    if (this.isNew) {\n      this.secretKey = Math.random().toString(36).slice(-8); //TODO: use crypto lib\n    }\n    next();\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/contextId.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seedRequestContextId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplicationContext | ModuleRef, req?: T) => {\n  const contextId = ContextIdFactory.create();\n  app.registerRequestByContextId(\n    {\n      ...req,\n      user: {\n        _id: '000000000000000000000000',\n        ...req?.user,\n      },\n    },\n    contextId,\n  );\n  return contextId;\n}\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/_parts/state.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StatePartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StatePart)\n                    \n                \n\n\n        \n    \n\n    src/core/tasks/_schemas/tasks.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TasksSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Tasks)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/validations/_config/validSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    $schema: {\n      type: 'string',\n      errorMessage: \"Le champ '$schema' doit être une chaîne de caractères.\",\n    },\n    type: {\n      type: 'string',\n      const: 'object',\n      errorMessage: \"Le champ 'type' doit être 'object'.\",\n    },\n    properties: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          properties: {\n            type: {\n              type: 'string',\n              enum: ['string', 'integer', 'number', 'boolean', 'array', 'object', 'date'],\n              errorMessage: \"Chaque propriété doit avoir un 'type' de 'string'.\",\n            },\n            description: {\n              type: 'string',\n              errorMessage: \"La 'description' doit être une chaîne de caractères.\",\n            },\n            format: {\n              type: 'string',\n              enum: ['date', 'email'],\n              errorMessage: \"Le 'format' doit être 'date' ou 'email'.\",\n            },\n            items: {\n              type: 'object',\n              errorMessage: \"Le champ 'required' doit être un booléen.\",\n            },\n          },\n          required: ['type'],\n          additionalProperties: false,\n          errorMessage: {\n            required: \"Le champ 'type' est requis pour chaque propriété.\",\n            additionalProperties: 'Propriétés supplémentaires non autorisées.',\n          },\n        },\n      },\n      additionalProperties: false,\n      errorMessage: \"Propriétés supplémentaires non autorisées dans 'properties'.\",\n    },\n    required: {\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      errorMessage: \"Le champ 'required' doit être un tableau de chaînes de caractères.\",\n    },\n  },\n  required: ['type'],\n  additionalProperties: false,\n  errorMessage: {\n    required: \"Le champ 'type' est requis.\",\n    additionalProperties: 'Propriétés supplémentaires non autorisées au niveau racine.',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), et uid (Identifiant Unique). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nA venir.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nemail: true\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nurl: true\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nJSON de Validation\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
