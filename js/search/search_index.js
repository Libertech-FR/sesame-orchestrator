var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.151,1,2.774]],["body/classes/AbstractController.html",[0,0.168,1,4.061,2,0.988,3,0.189,4,0.189,5,0.156,6,3.6,7,0.425,8,0.953,9,3.416,10,3.438,11,1.504,12,4.998,13,4.741,14,5.866,15,1.83,16,4.061,17,5.184,18,0.796,19,6.014,20,1.64,21,0.013,22,1.206,23,0.687,24,2.73,25,2.894,26,4.568,27,4.568,28,4.568,29,0.295,30,2.346,31,3.985,32,1.333,33,3.084,34,3.985,35,3.985,36,0.834,37,0.227,38,1.476,39,1.7,40,0.853,41,1.763,42,1.902,43,1.902,44,2.059,45,2.73,46,2.894,47,2.894,48,3.985,49,2.588,50,3.314,51,3.314,52,3.314,53,1.7,54,3.985,55,1.056,56,1.247,57,3.985,58,0.009,59,0.009]],["title/interfaces/AbstractControllerContext.html",[17,2.98,38,1.328]],["body/interfaces/AbstractControllerContext.html",[0,0.18,1,3.294,3,0.202,4,0.202,5,0.167,6,3.845,7,0.454,8,0.995,9,3.005,10,3.129,11,1.404,12,5.161,14,4.255,16,3.294,17,5.035,18,0.544,21,0.013,23,0.498,29,0.303,30,2.506,31,4.255,32,1.424,33,3.294,34,4.255,35,4.255,36,0.89,37,0.237,38,1.576,39,2.336,40,0.984,41,2.423,42,2.031,43,2.031,44,2.199,45,2.916,46,3.09,47,3.09,48,4.255,49,2.763,50,3.538,51,3.538,52,3.538,53,1.815,54,4.255,55,1.128,56,1.332,57,4.255,58,0.01,59,0.01,60,2.506,61,3.538,62,4.878]],["title/classes/AbstractQueueProcessor.html",[0,0.151,63,2.603]],["body/classes/AbstractQueueProcessor.html",[0,0.176,2,1.033,3,0.197,4,0.197,5,0.163,7,0.444,8,0.981,9,3.448,11,1.068,15,2.481,18,0.766,20,1.714,21,0.013,22,1.261,23,0.701,29,0.284,37,0.18,49,2.704,53,2.304,55,1.432,58,0.009,59,0.009,63,3.922,64,4.165,65,2.759,66,4.889,67,5.598,68,4.774,69,4.605,70,4.696,71,6.191,72,4.491,73,4.774,74,2.452,75,3.463,76,2.704,77,4.165,78,4.165,79,4.491,80,5.4,81,4.165,82,4.165]],["title/classes/AbstractSchema.html",[0,0.151,83,2.603]],["body/classes/AbstractSchema.html",[0,0.19,2,1.116,3,0.213,4,0.213,5,0.177,7,0.48,8,1.031,18,0.725,21,0.013,23,0.727,29,0.294,37,0.195,42,2.147,43,2.147,44,2.325,49,2.922,55,1.822,58,0.01,59,0.01,65,2.468,83,4.121,84,4.499,85,2.335,86,4.036,87,3.498,88,5.168,89,3.685,90,5.158,91,5.168,92,1.408,93,3.742,94,5.168,95,5.158,96,4.392,97,2.532,98,3.083,99,1.991,100,5.158]],["title/injectables/AbstractService.html",[101,0.95,102,2.603]],["body/injectables/AbstractService.html",[0,0.13,3,0.146,4,0.146,5,0.121,7,0.329,8,0.799,9,3.39,10,3.179,11,1.517,12,4.701,13,3.976,15,1.416,16,3.406,18,0.842,20,1.269,21,0.013,22,0.933,23,0.655,24,3.015,25,2.239,29,0.28,30,1.815,36,0.645,37,0.19,38,1.142,39,1.315,40,0.834,41,1.364,42,2.448,43,2.448,44,2.651,45,2.113,46,2.239,47,2.239,49,2.002,50,2.564,51,2.564,52,2.564,53,1.877,55,1.167,56,1.606,58,0.008,59,0.008,65,2.037,101,1.167,102,3.195,103,1.471,104,2.786,105,3.331,106,4.266,107,4.652,108,4.701,109,5.915,110,5.13,111,4.331,112,5.044,113,3.534,114,4.652,115,3.534,116,3.534,117,3.534,118,3.534,119,3.534,120,3.534,121,3.534,122,3.534,123,1.904,124,2.786,125,2.564,126,3.083,127,2.113,128,3.083,129,3.726,130,5.13,131,4.4,132,3.083,133,3.083,134,1.904,135,3.083,136,2.786,137,2.564,138,1.182,139,2.786,140,3.083,141,2.387,142,3.083,143,3.083,144,1.182,145,3.083,146,3.083,147,3.083,148,3.083]],["title/interfaces/AbstractServiceContext.html",[38,1.328,111,2.774]],["body/interfaces/AbstractServiceContext.html",[0,0.141,3,0.159,4,0.159,5,0.131,7,0.357,8,0.847,9,3.028,10,2.772,11,1.62,12,4.938,16,2.59,18,0.596,21,0.013,23,0.546,24,2.293,29,0.289,30,1.971,36,0.7,37,0.202,38,1.24,39,1.988,40,0.943,41,2.063,42,2.56,43,2.56,44,2.772,45,2.293,46,2.43,47,2.43,49,2.173,50,2.783,51,2.783,52,2.783,53,1.988,55,1.236,56,1.679,58,0.008,59,0.008,60,1.971,61,2.783,65,1.329,101,1.236,102,2.43,104,3.024,105,2.173,106,2.783,107,5.072,108,4.587,109,5.364,110,3.346,111,4.152,114,5.072,123,2.067,124,3.024,125,2.783,126,3.346,127,2.293,128,5.801,129,3.896,130,5.364,131,4.661,132,3.346,133,3.346,134,2.067,135,3.346,136,3.024,137,2.783,138,1.283,139,3.024,140,3.346,141,2.59,142,3.346,143,3.346,144,1.283,145,3.346,146,3.346,147,3.346,148,3.346,149,3.836]],["title/injectables/AbstractServiceSchema.html",[101,0.95,150,2.98]],["body/injectables/AbstractServiceSchema.html",[0,0.042,3,0.047,4,0.047,5,0.039,7,0.107,8,0.321,9,2.371,10,1.229,11,1.301,12,1.728,13,1.598,15,0.459,16,1.369,18,0.679,20,2.268,21,0.013,22,1.334,23,0.682,24,0.685,25,4.067,29,0.172,36,0.209,37,0.043,41,0.442,42,0.844,43,0.477,49,1.867,53,1.88,55,1.607,56,1.379,58,0.003,59,0.003,65,0.702,83,0.726,85,0.728,86,1.545,87,2.59,88,0.831,89,2.861,98,0.685,99,0.442,101,0.469,102,2.853,103,0.477,105,1.148,106,1.471,107,1.471,111,2.225,114,0.831,125,1.471,134,3.801,136,1.598,141,3.563,144,2.361,150,1.471,151,0.999,152,2.379,153,0.754,154,3.237,155,2.638,156,1.471,157,1.092,158,2.149,159,2.149,160,2.149,161,2.149,162,3.827,163,2.853,164,2.027,165,1.598,166,4.582,167,4.554,168,5.263,169,1.146,170,3.697,171,4.582,172,1.721,173,3.517,174,1.598,175,2.598,176,1.146,177,3.246,178,1.598,179,3.225,180,1.146,181,0.903,182,5.155,183,4.582,184,1.146,185,0.903,186,1.146,187,0.999,188,1.146,189,0.903,190,1.146,191,0.831,192,2.598,193,1.146,194,2.088,195,0.999,196,0.999,197,0.999,198,0.999,199,0.999,200,1.146,201,3.767,202,0.999,203,0.999,204,0.999,205,1.146,206,1.471,207,1.146,208,0.903,209,1.146,210,1.146,211,0.903,212,1.146,213,2.727,214,2.027,215,2.027,216,1.146,217,4.164,218,3.389,219,1.146,220,1.146,221,4.164,222,1.146,223,1.146,224,1.146,225,5.654,226,5.654,227,5.654,228,5.654,229,5.654,230,4.101,231,1.146,232,0.903,233,1.146,234,4.164,235,5.654,236,2.027,237,2.027,238,2.727,239,3.767,240,2.386,241,2.727,242,4.164,243,4.164,244,1.146,245,2.969,246,1.146,247,5.654,248,3.296,249,4.164,250,1.146,251,1.146,252,1.146,253,1.146,254,1.146,255,1.146,256,1.146,257,1.146,258,2.027,259,2.027,260,1.146,261,1.146,262,1.146,263,1.146,264,2.027,265,1.598,266,2.027,267,0.588,268,2.727,269,4.164,270,1.146,271,2.027,272,1.146,273,2.027,274,1.146,275,0.903,276,2.727,277,2.727,278,0.903,279,1.728,280,0.903,281,0.903,282,2.969,283,1.146,284,1.146,285,1.146,286,1.146,287,1.226,288,0.999,289,2.727,290,1.146,291,1.146,292,1.146,293,3.282,294,1.146,295,0.831,296,1.146,297,1.146,298,1.146,299,1.146,300,1.146,301,1.146,302,1.146,303,1.146,304,1.146,305,1.146,306,2.812,307,1.146,308,1.146,309,1.146,310,0.999]],["title/classes/AdditionalFieldsPart.html",[0,0.151,311,2.774]],["body/classes/AdditionalFieldsPart.html",[0,0.184,2,1.079,3,0.206,4,0.206,5,0.171,7,0.464,8,1.009,18,0.709,21,0.013,23,0.779,29,0.263,37,0.24,39,1.855,40,1.082,58,0.01,59,0.01,87,2.448,92,1.738,93,4.618,96,4.736,97,2.448,144,1.668,179,2.248,240,4.033,287,2.75,311,4.299,312,3.93,313,3.603,314,3.603,315,3.159,316,3.199,317,4.986,318,4.299,319,3.125,320,4.986,321,3.125,322,3.617,323,4.618,324,3.93,325,3.93,326,2.159,327,2.561,328,3.617,329,4.349]],["title/controllers/AppController.html",[330,1.71,331,3.238]],["body/controllers/AppController.html",[0,0.209,3,0.234,4,0.234,5,0.194,7,0.527,18,0.631,21,0.013,29,0.285,36,1.034,37,0.214,40,0.977,56,1.546,58,0.011,59,0.011,65,1.962,92,1.546,153,2.564,172,2.032,330,2.869,331,5.432,332,2.452,333,4.939,334,6.744,335,5.662,336,5.389,337,5.662,338,3.384,339,5.662]],["title/modules/AppModule.html",[138,1.374,340,2.98]],["body/modules/AppModule.html",[0,0.147,3,0.165,4,0.165,5,0.137,21,0.013,29,0.325,36,0.73,37,0.151,56,1.092,58,0.008,59,0.008,69,4.849,72,5.32,74,2.054,76,2.265,79,2.901,97,1.963,99,2.123,127,2.39,138,2.103,144,1.338,154,2.955,287,1.488,340,5.552,341,1.963,342,1.963,343,2.154,344,2.154,345,2.154,346,2.154,347,2.154,348,3.488,349,3.488,350,4.793,351,4.793,352,2.962,353,1.963,354,2.154,355,3.998,356,4.242,357,3.998,358,3.488,359,4.911,360,3.998,361,3.998,362,2.7,363,3.488,364,3.152,365,3.998,366,2.901,367,3.152,368,3.998,369,3.998,370,3.998,371,3.998,372,4.56,373,5.483,374,2.7,375,3.998,376,2.901,377,3.998,378,3.998,379,5.499,380,3.998,381,3.998,382,3.998,383,3.998,384,3.998,385,3.998,386,2.901,387,3.998,388,3.998,389,3.998,390,3.998,391,3.998,392,3.998,393,3.998]],["title/injectables/AppService.html",[101,0.95,336,2.98]],["body/injectables/AppService.html",[0,0.216,3,0.242,4,0.242,5,0.201,7,0.546,18,0.654,21,0.013,29,0.242,36,1.071,37,0.221,40,0.998,56,1.601,58,0.011,59,0.011,101,1.628,103,2.442,153,2.62,172,2.105,334,6.824,336,5.107,394,5.116,395,5.865,396,5.865,397,5.865]],["title/classes/AskTokenDto.html",[0,0.151,398,2.774]],["body/classes/AskTokenDto.html",[0,0.24,2,1.119,3,0.214,4,0.214,5,0.177,7,0.482,8,1.032,18,0.726,21,0.013,23,0.665,29,0.269,32,1.51,37,0.195,40,1.062,58,0.01,59,0.01,92,1.779,129,4.128,398,4.4,399,6.223,400,4.077,401,4.614,402,4.373,403,4.727,404,6.516,405,3.376,406,6.516,407,5.173,408,5.684,409,5.173,410,3.502,411,1.857,412,2.859,413,3.51]],["title/controllers/AuthController.html",[330,1.71,414,2.98]],["body/controllers/AuthController.html",[0,0.229,3,0.257,4,0.257,5,0.213,21,0.012,29,0.257,36,1.134,37,0.235,58,0.011,59,0.011,330,2.585,332,2.689,414,5.283,415,5.417,416,3.345,417,4.895,418,5.417]],["title/injectables/AuthGuard.html",[101,0.95,419,2.774]],["body/injectables/AuthGuard.html",[0,0.172,3,0.193,4,0.193,5,0.16,7,0.435,11,1.366,15,1.873,18,0.681,20,2.192,21,0.013,22,1.613,23,0.623,24,3.65,29,0.309,30,2.401,36,0.853,37,0.177,55,1.73,56,1.276,58,0.009,59,0.009,65,1.62,85,2.192,101,1.412,103,1.946,144,1.564,153,2.272,172,1.678,173,3.459,338,2.794,419,4.592,420,4.078,421,6.106,422,6.801,423,4.675,424,7.673,425,4.675,426,4.675,427,7.211,428,4.675,429,3.459,430,6.801,431,4.675,432,2.962,433,4.078,434,4.813,435,4.675,436,2.962,437,6.106,438,4.675,439,4.675,440,4.675,441,4.675]],["title/modules/AuthModule.html",[138,1.374,442,2.774]],["body/modules/AuthModule.html",[0,0.186,3,0.208,4,0.208,5,0.173,21,0.013,29,0.324,36,0.92,37,0.19,58,0.01,59,0.01,74,2.59,138,2.359,332,2.776,341,2.475,342,2.475,343,2.716,344,2.716,345,2.716,346,3.798,347,2.716,352,3.454,353,2.475,354,2.716,356,3.014,359,4.651,414,5.114,432,3.194,442,5.437,443,4.398,444,4.398,445,5.287,446,5.287,447,5.042,448,5.042,449,5.042,450,6.412,451,5.042,452,3.974,453,3.405,454,5.042]],["title/injectables/AuthService.html",[101,0.95,445,2.774]],["body/injectables/AuthService.html",[0,0.231,3,0.258,4,0.258,5,0.214,21,0.012,29,0.258,36,1.141,37,0.236,58,0.011,59,0.011,101,1.691,103,2.603,445,4.938,455,5.455]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.328,456,2.98]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.136,4,0.136,5,0.113,7,0.307,8,0.761,11,1.729,21,0.013,22,1.495,23,0.726,29,0.136,37,0.214,38,1.552,40,1.13,41,2.744,42,1.374,43,1.374,44,1.488,58,0.007,59,0.007,60,1.695,86,2.72,87,3.05,99,1.274,155,3.936,163,4.364,267,2.466,295,4.507,319,3.704,321,1.62,456,3.483,457,2.091,458,2.394,459,5.545,460,5.42,461,5.42,462,5.42,463,5.42,464,5.42,465,3.74,466,5.204,467,6.355,468,4.188,469,4.898,470,4.188,471,4.997,472,3.784,473,6.479,474,4.188,475,4.188,476,4.188,477,4.188,478,4.188,479,4.188,480,4.188,481,2.72,482,3.483,483,4.188,484,4.188,485,4.188,486,4.188,487,4.188,488,3.042,489,4.188,490,2.091,491,2.602,492,2.394,493,2.602,494,1.973,495,2.394,496,4.188]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.328,495,2.98]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.162,4,0.162,5,0.134,7,0.365,8,0.859,21,0.013,22,1.433,23,0.685,29,0.162,37,0.235,38,1.753,40,1.131,41,2.72,42,1.632,43,1.632,44,1.767,58,0.008,59,0.008,60,2.014,86,2.221,87,2.663,99,1.513,155,4.734,163,4.618,267,2.014,295,3.935,319,3.46,321,2.663,456,2.844,457,2.483,458,2.844,459,5.678,460,3.419,461,3.419,462,3.419,463,3.419,464,3.419,466,4.903,467,5.855,468,3.419,469,4.276,470,3.419,471,5.609,472,3.09,473,6.359,474,3.419,475,3.419,476,3.419,477,3.419,478,3.419,479,3.419,480,3.419,481,2.221,482,2.844,483,3.419,484,3.419,485,3.419,486,3.419,487,3.419,488,2.483,489,3.419,490,2.483,491,3.09,492,2.844,493,3.09,494,2.343,495,3.935,496,5.855]],["title/controllers/BackendsController.html",[330,1.71,497,2.98]],["body/controllers/BackendsController.html",[0,0.146,3,0.164,4,0.164,5,0.136,7,0.37,10,2.468,11,1.225,18,0.61,20,1.965,21,0.013,22,1.446,23,0.559,29,0.293,32,1.159,36,0.725,37,0.15,39,2.037,53,1.478,56,1.495,58,0.008,59,0.008,65,1.376,92,1.495,105,2.25,123,2.14,144,1.831,153,2.037,154,3.441,172,1.965,173,3.824,218,2.812,330,1.654,332,1.72,338,2.374,405,3.043,416,2.14,419,2.682,432,2.516,497,3.971,498,3.465,499,7.08,500,4.775,501,6.385,502,3.972,503,5.441,504,3.972,505,5.474,506,3.972,507,5.888,508,5.474,509,5.474,510,5.474,511,3.972,512,5.581,513,3.972,514,3.972,515,3.972,516,3.971,517,3.972,518,3.465,519,3.968,520,3.465,521,5.464,522,5.464,523,5.464,524,2.682,525,3.972,526,3.465,527,3.972,528,3.972,529,4.775,530,3.465,531,4.315,532,4.775,533,3.972,534,3.971,535,3.972,536,5.474,537,3.972,538,3.972,539,3.972]],["title/modules/BackendsModule.html",[138,1.374,540,2.774]],["body/modules/BackendsModule.html",[0,0.198,3,0.222,4,0.222,5,0.184,21,0.013,29,0.314,36,0.981,37,0.203,58,0.01,59,0.01,74,2.76,138,2.429,332,2.89,341,2.638,342,2.638,343,2.895,344,2.895,345,2.895,346,3.91,347,2.895,352,3.595,353,2.638,354,2.895,356,3.212,359,4.841,497,5.266,519,5.041,520,4.688,540,5.373,541,4.688,542,4.688,543,5.374,544,5.374]],["title/injectables/BackendsService.html",[101,0.95,519,2.603]],["body/injectables/BackendsService.html",[0,0.152,3,0.171,4,0.171,5,0.141,7,0.384,8,0.89,9,3.206,11,0.923,15,2.252,18,0.8,20,1.481,21,0.013,22,1.09,23,0.652,29,0.297,36,0.753,37,0.156,56,1.534,58,0.009,59,0.009,63,4.547,65,2.565,66,4.048,67,4.635,69,4.691,70,4.609,74,2.12,76,2.338,85,2.017,101,1.3,103,1.718,127,2.467,144,1.88,153,2.091,154,3.481,172,2.017,194,3.56,218,3.524,366,2.994,500,5.984,501,5.984,519,3.56,545,3.6,546,3.253,547,4.127,548,4.127,549,4.077,550,4.127,551,3.6,552,3.6,553,3.253,554,4.429,555,3.253,556,4.429,557,4.127,558,5.619,559,4.429,560,3.795,561,4.429,562,4.429,563,4.429,564,4.127]],["title/classes/ChangePasswordDto.html",[0,0.151,565,2.774]],["body/classes/ChangePasswordDto.html",[0,0.219,2,0.971,3,0.186,4,0.186,5,0.154,7,0.418,8,0.942,18,0.743,21,0.013,23,0.725,29,0.246,32,1.31,37,0.252,40,1.076,53,2.212,58,0.009,59,0.009,92,1.82,129,3.766,402,4.182,403,4.836,405,3.421,408,5.186,410,3.484,411,1.611,412,2.844,413,3.591,565,4.502,566,5.148,567,3.031,568,5.255,569,6.666,570,5.186,571,4.792,572,4.488,573,5.945,574,5.186,575,4.488,576,3.915,577,2.418,578,3.915,579,5.815,580,5.815,581,5.815,582,5.815,583,3.915]],["title/interfaces/ConfigInstance.html",[38,1.328,584,2.98]],["body/interfaces/ConfigInstance.html",[3,0.208,4,0.145,5,0.12,7,0.327,8,0.796,21,0.013,23,0.799,29,0.242,32,1.026,37,0.221,38,1.623,40,1.127,42,1.463,43,1.463,44,1.584,45,2.1,46,2.226,47,2.226,58,0.008,59,0.008,60,1.805,70,2.1,76,3.986,97,1.725,99,2.716,129,2.226,157,1.893,167,4.429,267,1.805,287,2.619,315,4.458,319,1.725,362,3.392,364,3.959,367,3.959,374,2.373,376,2.549,386,4.64,429,1.99,453,3.392,534,2.549,571,2.373,584,4.252,585,2.77,586,4.908,587,5.333,588,5.902,589,5.105,590,4.381,591,3.643,592,4.381,593,2.77,594,4.381,595,3.392,596,3.065,597,3.065,598,3.065,599,3.065,600,3.065,601,3.065,602,3.065,603,3.065,604,3.065,605,3.065,606,3.065,607,3.065,608,3.065,609,3.065,610,3.065,611,3.065,612,3.065,613,3.065,614,3.065,615,3.065,616,3.065,617,3.065,618,3.065,619,3.065]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.151,620,2.603]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.273,2,0.981,3,0.187,4,0.187,5,0.155,7,0.422,8,0.948,18,0.794,21,0.013,22,1.882,23,0.821,29,0.277,37,0.253,40,1.1,58,0.009,59,0.009,92,1.945,287,2.227,313,3.074,314,2.329,316,2.901,410,3.866,411,1.627,429,3.39,620,4.514,621,3.288,622,5.616,623,4.533,624,4.533,625,5.281,626,4.533,627,4.86,628,4.533,629,4.533,630,4.717,631,4.524,632,2.872,633,2.568,634,3.573,635,3.573,636,4.524,637,2.872,638,4.717]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.151,636,2.774]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.275,2,1.006,3,0.192,4,0.192,5,0.159,7,0.433,8,0.964,18,0.756,21,0.013,22,1.901,23,0.797,29,0.28,37,0.256,40,1.123,58,0.009,59,0.009,92,1.852,287,2.265,313,3.697,314,2.389,316,2.014,410,3.888,411,1.669,429,2.634,620,4.298,621,3.374,622,5.672,625,4.797,627,4.415,630,5.347,631,4.581,632,2.946,633,2.634,634,3.666,635,3.666,636,4.86,637,2.946,638,4.797,639,4.65,640,4.65,641,4.65]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.151,637,2.603]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.277,2,1.028,3,0.196,4,0.196,5,0.163,7,0.442,8,0.977,18,0.688,21,0.013,22,1.629,23,0.787,29,0.283,37,0.259,40,1.066,58,0.009,59,0.009,92,1.685,287,2.296,313,3.726,314,3.52,316,2.056,410,3.783,411,1.705,429,2.69,620,4.596,621,3.445,622,4.863,625,4.863,627,4.475,630,4.863,631,4.628,632,3.009,633,2.69,634,3.743,635,3.743,636,4.899,637,3.909,638,4.863,642,6.169,643,6.169,644,4.749,645,4.749]],["title/classes/ConsoleSession.html",[0,0.151,646,3.238]],["body/classes/ConsoleSession.html",[0,0.168,2,0.986,3,0.188,4,0.188,5,0.156,7,0.424,8,0.951,15,2.691,18,0.827,21,0.013,23,0.729,29,0.188,37,0.172,40,1.08,53,2.234,55,1.909,58,0.009,59,0.009,65,2.83,87,3.297,89,4.044,98,2.723,99,1.759,319,3.505,465,4.044,646,4.733,647,6.646,648,3.974,649,4.255,650,6.716,651,6.716,652,6.004,653,7.139,654,4.556,655,7.139,656,4.556,657,4.556]],["title/controllers/CoreController.html",[330,1.71,658,2.98]],["body/controllers/CoreController.html",[0,0.216,3,0.242,4,0.242,5,0.2,21,0.013,29,0.311,32,1.707,36,1.067,37,0.221,55,1.352,58,0.011,59,0.011,65,2.025,330,2.434,332,2.531,338,3.494,416,3.149,417,4.608,418,5.1,524,3.948,526,5.1,658,5.097,659,5.1,660,4.451,661,5.1,662,4.608]],["title/modules/CoreModule.html",[138,1.374,350,2.774]],["body/modules/CoreModule.html",[0,0.168,3,0.189,4,0.189,5,0.156,18,0.509,21,0.013,29,0.315,30,2.346,36,0.834,37,0.172,55,1.056,56,1.247,58,0.009,59,0.009,138,2.391,153,1.7,172,1.64,332,2.604,341,2.242,342,2.242,343,2.461,344,2.461,345,2.461,346,3.622,347,2.461,350,5.44,352,3.24,353,2.242,354,2.461,356,4.02,417,3.6,442,5.149,540,5.149,595,3.084,658,4.878,660,4.83,661,3.985,663,3.985,664,4.568,665,3.985,666,4.568,667,4.741,668,5.866,669,4.568,670,5.866,671,3.985,672,4.568,673,4.568,674,4.568,675,3.985,676,3.985,677,3.985]],["title/injectables/CoreService.html",[101,0.95,660,2.603]],["body/injectables/CoreService.html",[0,0.224,3,0.251,4,0.251,5,0.208,15,3.066,18,0.676,21,0.013,29,0.251,36,1.107,37,0.229,55,1.661,58,0.011,59,0.011,101,1.661,103,2.524,660,4.549,678,5.289,679,6.063]],["title/classes/CustomFieldsDto.html",[0,0.151,680,3.238]],["body/classes/CustomFieldsDto.html",[0,0.25,2,1.191,3,0.228,4,0.228,5,0.189,7,0.513,8,1.073,11,1.516,18,0.614,21,0.013,23,0.692,29,0.28,37,0.208,39,2.049,40,0.781,55,1.697,58,0.01,59,0.01,92,1.503,315,3.488,323,4.914,324,4.34,325,4.34,411,1.976,631,4.575,680,5.34,681,5.909,682,4.803,683,7.338,684,5.506,685,5.506,686,4.575,687,3.649]],["title/injectables/DtoValidationPipe.html",[101,0.95,688,2.98]],["body/injectables/DtoValidationPipe.html",[0,0.13,3,0.146,4,0.146,5,0.121,7,0.328,9,1.524,10,1.587,11,1.125,15,1.411,18,0.56,20,1.805,21,0.013,22,1.328,23,0.513,29,0.243,30,1.808,36,0.643,37,0.133,38,1.138,39,1.31,40,0.908,53,1.31,55,1.566,56,1.602,58,0.008,59,0.008,65,1.22,85,1.805,101,1.163,103,1.466,108,4.592,123,1.896,144,2.142,153,1.872,157,1.896,172,1.264,232,2.775,265,2.775,287,1.872,319,1.728,372,2.554,416,3.448,436,2.23,465,1.994,481,3.324,560,3.396,688,4.257,689,4.625,690,2.554,691,5.119,692,5.259,693,3.52,694,3.52,695,3.52,696,5.337,697,3.52,698,3.448,699,3.964,700,2.104,701,4.387,702,3.071,703,3.071,704,2.775,705,3.071,706,3.071,707,3.071,708,4.696,709,3.071,710,3.964,711,3.508,712,3.071,713,2.104,714,2.377,715,3.071,716,3.071,717,3.071,718,3.071,719,3.071,720,2.775,721,2.775,722,2.775,723,3.071,724,3.071,725,3.071,726,1.994,727,2.554,728,4.387,729,4.387,730,3.071,731,3.071,732,4.387,733,3.071,734,3.071,735,4.387,736,3.071,737,3.071,738,3.071]],["title/classes/ErrorSchemaDto.html",[0,0.151,739,3.238]],["body/classes/ErrorSchemaDto.html",[0,0.171,2,1.006,3,0.192,4,0.192,5,0.159,7,0.433,8,0.964,11,1.61,18,0.802,21,0.013,23,0.782,29,0.252,32,1.358,36,0.849,37,0.176,39,2.265,40,1.059,42,1.936,43,1.936,44,2.097,55,1.895,58,0.009,59,0.009,92,1.965,179,2.097,315,3.856,412,3.173,494,2.78,577,2.505,700,4.055,708,4.298,711,4.055,726,3.843,727,3.374,739,4.797,740,6.515,741,4.057,742,6.784,743,4.65,744,4.65,745,3.666,746,4.65,747,4.65]],["title/injectables/HeaderApiKeyStrategy.html",[101,0.95,446,2.774]],["body/injectables/HeaderApiKeyStrategy.html",[0,0.156,3,0.175,4,0.175,5,0.145,7,0.393,8,0.904,10,3.123,11,0.945,15,1.693,18,0.721,20,1.516,21,0.013,22,1.116,23,0.431,29,0.286,36,0.771,37,0.16,39,2.124,40,0.599,42,1.759,43,1.759,44,1.904,45,2.525,53,2.124,55,1.496,56,1.153,58,0.009,59,0.009,65,2.4,69,4.723,74,2.17,85,2.049,98,2.525,101,1.32,103,1.759,105,3.663,134,2.275,177,2.17,287,1.572,319,2.803,326,1.829,338,2.525,416,2.275,432,2.676,436,2.676,446,3.855,452,5.702,453,5.035,465,3.234,494,2.525,516,3.064,546,3.33,698,3.075,748,6.042,749,3.685,750,6.466,751,6.466,752,5.097,753,5.709,754,5.709,755,4.224,756,5.709,757,3.685,758,3.685,759,4.224,760,4.224,761,4.224,762,5.709,763,4.224,764,4.224,765,4.224,766,4.224,767,4.224,768,3.33,769,4.224]],["title/classes/Identities.html",[0,0.151,770,2.603]],["body/classes/Identities.html",[0,0.151,2,0.887,3,0.169,4,0.169,5,0.14,7,0.382,8,0.886,18,0.762,21,0.013,23,0.797,29,0.313,37,0.24,41,2.64,58,0.009,59,0.009,83,3.543,85,1.471,86,3.168,92,1.868,93,4.962,96,4.835,97,2.012,99,1.582,144,1.371,179,2.871,287,2.081,311,4.3,316,2.962,319,3.628,321,2.746,322,2.973,326,2.757,327,3.796,328,4.619,577,3.685,770,4.034,771,2.973,772,3.806,773,4.3,774,3.806,775,4.099,776,4.619,777,4.099,778,4.835,779,4.099,780,4.536,781,4.099,782,2.973,783,4.099,784,4.099,785,2.768,786,4.099,787,3.575,788,3.575,789,4.099,790,3.575,791,2.973,792,3.575]],["title/controllers/IdentitiesController.html",[330,1.71,793,2.98]],["body/controllers/IdentitiesController.html",[0,0.076,1,2.26,3,0.085,4,0.085,5,0.071,7,0.192,9,1.827,11,1.192,15,0.828,18,0.594,20,1.913,21,0.013,22,1.652,23,0.693,29,0.313,32,0.603,36,0.377,37,0.078,40,0.688,55,1.673,56,1.813,58,0.005,59,0.005,65,1.462,85,1.202,86,1.171,87,3.398,89,3.661,92,1.455,98,1.235,99,1.292,123,1.113,144,1.783,153,1.246,154,3.399,156,3.061,157,1.113,162,3.061,172,1.913,173,3.761,177,3.41,182,1.499,191,1.499,218,2.737,245,2.639,267,2.167,306,1.396,323,2.428,324,1.629,325,1.629,327,1.062,330,0.86,332,0.895,416,1.113,436,1.309,488,1.309,503,5.305,512,5.923,524,1.396,662,1.629,667,1.629,698,2.871,700,1.235,708,3.614,711,3.41,726,3.761,727,3.866,770,2.121,772,1.235,774,1.235,793,2.428,794,1.803,795,3.823,796,4.219,797,4.219,798,2.067,799,4.483,800,3.073,801,2.067,802,3.185,803,2.067,804,2.067,805,3.347,806,5.704,807,5.704,808,4.219,809,2.067,810,2.067,811,2.067,812,3.347,813,2.067,814,2.067,815,2.067,816,5.704,817,4.85,818,5.704,819,4.85,820,2.067,821,2.067,822,3.073,823,3.347,824,2.067,825,2.067,826,2.067,827,2.067,828,2.92,829,2.067,830,2.121,831,1.803,832,2.067,833,4.85,834,1.629,835,5.329,836,2.067,837,1.629,838,3.347,839,1.629,840,2.067,841,1.629,842,1.629,843,2.067,844,1.629,845,2.067,846,2.067,847,3.519,848,2.067,849,2.067,850,2.92,851,2.067,852,2.067,853,1.803,854,2.001,855,1.803,856,1.629,857,1.629,858,2.067,859,2.067,860,2.067,861,4.2,862,2.067,863,2.067,864,1.803,865,3.866,866,5.329,867,5.329,868,5.329,869,2.067,870,3.347,871,2.067,872,4.85,873,3.823,874,4.219,875,2.067,876,4.219,877,2.067,878,2.067,879,2.067,880,2.067,881,2.067]],["title/classes/IdentitiesCreateDto.html",[0,0.151,800,2.603]],["body/classes/IdentitiesCreateDto.html",[0,0.252,2,0.779,3,0.149,4,0.149,5,0.123,7,0.335,8,0.809,11,1.143,18,0.72,21,0.013,23,0.785,29,0.302,32,1.05,37,0.224,40,0.724,41,1.972,58,0.008,59,0.008,85,1.834,92,1.765,179,1.622,313,3.051,314,3.051,316,1.558,326,2.212,327,3.051,405,2.303,411,1.292,412,2.736,413,2.752,577,2.752,632,2.279,633,2.038,686,3.449,687,2.752,713,3.864,772,3.55,773,4.011,774,3.55,778,4.011,780,4.325,782,2.61,785,2.43,800,3.763,802,2.151,822,2.279,882,2.61,883,4.24,884,3.139,885,5.096,886,4.026,887,4.026,888,3.449,889,4.69,890,4.026,891,5.096,892,4.69,893,5.096,894,4.026,895,3.706,896,4.026,897,3.706,898,4.026,899,4.026,900,3.706,901,3.706,902,4.026,903,3.598,904,3.821,905,3.139,906,3.598,907,3.139,908,3.598,909,3.139,910,3.598,911,2.279,912,4.681,913,2.836,914,2.836,915,2.836,916,2.836,917,3.706,918,2.836,919,2.836,920,2.836,921,2.836,922,2.836]],["title/classes/IdentitiesDto.html",[0,0.151,802,2.456]],["body/classes/IdentitiesDto.html",[0,0.25,2,0.763,3,0.146,4,0.146,5,0.121,7,0.328,8,0.798,11,1.127,18,0.714,21,0.013,23,0.782,29,0.3,32,1.03,37,0.222,40,0.714,41,1.944,58,0.008,59,0.008,85,2.109,92,1.749,179,1.59,194,4.059,313,3.017,314,3.017,316,1.527,326,2.181,327,3.017,405,2.271,411,1.266,412,2.715,413,2.713,577,2.713,632,2.235,633,1.998,686,3.401,687,2.713,713,3.83,772,3.511,773,3.967,774,3.511,778,3.967,780,4.293,782,2.559,785,2.382,800,4.595,802,3.011,822,2.235,882,2.559,883,4.212,884,3.077,885,5.05,886,3.97,887,3.97,888,3.401,889,4.648,890,3.97,891,5.05,892,4.648,893,5.05,894,3.97,895,3.654,896,3.97,897,3.654,898,3.97,899,3.97,900,3.654,901,3.654,902,3.97,904,3.796,905,3.077,907,3.077,909,3.077,911,2.235,912,4.63,913,2.78,914,2.78,915,2.78,916,2.78,917,3.654,918,2.78,919,2.78,920,2.78,921,2.78,922,2.78,923,3.527,924,3.527,925,3.527,926,3.527]],["title/modules/IdentitiesModule.html",[138,1.374,927,2.774]],["body/modules/IdentitiesModule.html",[0,0.14,3,0.157,4,0.157,5,0.13,10,1.708,21,0.013,22,1,29,0.312,36,0.691,37,0.143,56,1.034,58,0.008,59,0.008,97,1.86,138,2.043,141,2.558,144,1.267,154,2.49,218,1.946,295,3.842,321,2.6,332,2.293,341,1.86,342,1.86,343,2.04,344,2.04,345,2.04,346,3.29,347,2.04,352,2.853,353,1.86,354,2.04,356,3.166,363,3.304,372,2.748,373,3.304,482,2.748,490,3.355,492,3.842,494,3.953,698,3.749,714,4.7,752,2.986,770,2.4,772,2.264,774,3.953,780,2.4,785,2.558,791,3.842,793,4.43,830,4.569,831,3.304,854,4.515,855,3.304,856,2.986,861,2.986,865,2.748,927,5.1,928,3.304,929,3.304,930,3.788,931,3.788,932,3.577,933,3.788,934,3.788,935,3.788,936,3.788,937,5.296,938,6.614,939,3.788,940,4.62,941,3.304,942,3.788,943,3.788,944,5.296,945,6.107,946,3.788,947,3.788,948,3.788,949,6.614,950,4.62,951,3.788,952,5.296,953,3.304,954,3.788,955,3.788,956,3.788]],["title/injectables/IdentitiesService.html",[101,0.95,830,2.603]],["body/injectables/IdentitiesService.html",[0,0.089,3,0.099,4,0.099,5,0.082,7,0.224,8,0.598,9,2.942,10,2.103,11,1.635,12,2.955,15,0.963,18,0.824,20,2.732,21,0.013,22,1.794,23,0.798,25,4.822,29,0.237,36,0.439,37,0.091,49,2.139,55,1.746,58,0.006,59,0.006,65,1.308,85,1.356,87,2.29,89,3.454,97,1.18,99,0.928,101,0.874,102,3.349,103,1.001,105,2.139,106,2.74,107,2.74,114,1.744,134,4.131,150,5.227,152,4.611,153,1.405,154,3.548,155,2.393,156,2.74,157,2.034,158,2.977,159,2.977,160,2.977,161,2.977,162,3.834,163,3.639,165,1.895,166,5.206,167,4.511,168,5.679,170,4.46,171,4.166,172,2.371,173,3.742,174,1.895,175,2.977,177,1.235,178,1.895,179,3.458,181,1.895,182,4.792,183,5.206,185,1.895,187,2.097,189,1.895,191,1.744,192,2.977,194,4.629,195,2.097,196,2.097,197,2.097,198,2.097,436,1.523,770,1.523,830,2.393,856,1.895,957,2.097,958,2.404,959,2.404,960,2.404,961,2.404,962,2.404,963,2.404,964,2.404,965,2.404,966,2.404,967,2.404,968,2.404,969,2.404,970,2.404,971,2.404]],["title/classes/IdentitiesUpdateDto.html",[0,0.151,822,2.603]],["body/classes/IdentitiesUpdateDto.html",[0,0.268,2,0.927,3,0.177,4,0.177,5,0.147,21,0.013,23,0.742,29,0.316,32,1.251,37,0.246,40,0.607,41,1.654,58,0.009,59,0.009,85,2.338,313,2.961,314,2.961,316,1.855,326,1.855,327,2.201,405,1.932,411,1.538,412,2.913,413,2.308,577,3.105,632,2.714,633,2.427,686,3.892,687,3.105,713,3.445,772,2.561,773,2.893,774,2.561,778,3.892,780,4.126,782,3.108,785,2.893,800,3.651,802,2.561,822,3.651,882,3.108,883,4.164,885,4.543,886,3.377,887,3.377,888,2.893,889,4.181,890,3.377,891,4.543,892,4.181,893,4.543,894,3.377,895,3.108,896,3.377,897,3.108,898,3.377,899,3.377,900,3.108,901,3.108,902,3.377,904,3.753,911,2.714,912,5.134,913,3.377,914,3.377,915,3.377,916,3.377,917,4.181,918,3.377,919,3.377,920,3.377,921,3.377,922,4.543]],["title/modules/IdentitiesValidationModule.html",[138,1.374,932,2.774]],["body/modules/IdentitiesValidationModule.html",[0,0.201,3,0.225,4,0.225,5,0.187,21,0.013,29,0.278,36,0.996,37,0.206,58,0.01,59,0.01,138,2.445,341,2.678,342,2.678,343,2.939,344,2.939,345,2.939,346,3.937,347,3.937,352,3.629,353,2.678,354,2.939,854,5.006,932,5.465,972,4.759,973,4.759,974,5.455,975,5.455,976,5.455]],["title/injectables/IdentitiesValidationService.html",[101,0.95,854,2.456]],["body/injectables/IdentitiesValidationService.html",[0,0.161,2,0.626,3,0.12,4,0.12,5,0.099,7,0.269,11,1.171,15,2.098,18,0.649,20,1.879,21,0.013,22,1.383,23,0.595,24,1.728,29,0.282,36,0.528,37,0.109,39,1.948,40,0.617,41,1.116,56,1.706,58,0.007,59,0.007,72,2.098,101,1.007,103,1.204,105,2.966,144,2.516,153,1.62,154,3.087,172,1.879,173,3.3,177,1.485,218,2.236,240,3.317,279,1.832,287,2.168,311,3.934,313,2.236,314,1.485,316,2.522,318,1.953,319,2.137,321,2.137,326,2.522,411,2.624,429,1.638,465,1.638,481,1.638,595,1.953,620,3.691,637,2.758,698,2.345,708,2.758,711,1.728,714,3.535,752,3.431,768,2.279,854,2.602,861,2.279,865,2.098,977,2.522,978,4.353,979,4.353,980,2.892,981,4.353,982,2.892,983,4.353,984,2.892,985,5.235,986,4.353,987,2.892,988,2.892,989,2.522,990,2.892,991,2.892,992,2.892,993,2.892,994,3.797,995,2.892,996,2.892,997,2.522,998,2.892,999,2.892,1000,2.892,1001,5.235,1002,2.892,1003,4.353,1004,2.892,1005,2.892,1006,5.825,1007,2.892,1008,2.892,1009,6.248,1010,2.892,1011,4.567,1012,4.353,1013,2.892,1014,3.797,1015,2.892,1016,2.892,1017,2.892,1018,2.522,1019,2.892,1020,2.522,1021,2.892,1022,2.892,1023,2.892,1024,2.892,1025,2.892,1026,2.522,1027,2.892,1028,2.892,1029,2.892,1030,2.892,1031,2.892,1032,2.892,1033,2.892,1034,2.892,1035,6.566,1036,4.353,1037,6.813,1038,2.892,1039,2.892,1040,2.892,1041,2.892,1042,2.892,1043,2.892,1044,2.892,1045,2.892,1046,2.892,1047,2.892,1048,2.892,1049,2.892,1050,2.892]],["title/controllers/ManagementController.html",[330,1.71,1051,2.98]],["body/controllers/ManagementController.html",[0,0.216,3,0.242,4,0.242,5,0.2,21,0.013,29,0.311,32,1.707,36,1.067,37,0.221,55,1.352,58,0.011,59,0.011,65,2.025,330,2.434,332,2.531,338,3.494,416,3.149,524,3.948,662,4.608,857,4.608,1051,5.097,1052,5.1,1053,5.1,1054,4.451,1055,5.1,1056,5.846]],["title/modules/ManagementModule.html",[138,1.374,351,2.774]],["body/modules/ManagementModule.html",[0,0.168,3,0.189,4,0.189,5,0.156,18,0.509,21,0.013,29,0.315,30,2.346,36,0.834,37,0.172,55,1.056,56,1.247,58,0.009,59,0.009,138,2.391,153,1.7,172,1.64,332,2.604,341,2.242,342,2.242,343,2.461,344,2.461,345,2.461,346,3.622,347,2.461,351,5.44,352,3.24,353,2.242,354,2.461,356,4.02,595,3.084,667,4.741,668,5.866,670,5.866,671,3.985,675,3.985,676,3.985,677,3.985,927,5.149,1051,4.878,1053,3.985,1054,4.83,1055,3.985,1057,3.985,1058,3.985,1059,3.985,1060,5.149,1061,4.568,1062,4.568,1063,4.568,1064,4.568,1065,4.568]],["title/injectables/ManagementService.html",[101,0.95,1054,2.603]],["body/injectables/ManagementService.html",[0,0.224,3,0.251,4,0.251,5,0.208,15,3.066,18,0.676,21,0.013,29,0.251,36,1.107,37,0.229,55,1.661,58,0.011,59,0.011,101,1.661,103,2.524,1054,4.549,1066,5.289,1067,6.063]],["title/classes/MetadataDto.html",[0,0.151,1068,3.238]],["body/classes/MetadataDto.html",[0,0.267,2,1.152,3,0.22,4,0.22,5,0.182,7,0.496,8,1.052,11,1.485,18,0.594,21,0.013,23,0.773,29,0.313,32,1.555,37,0.201,55,1.672,58,0.01,59,0.01,88,5.245,92,1.454,411,1.912,412,2.659,631,4.482,633,3.017,686,4.482,687,3.575,1068,5.231,1069,4.646,1070,5.759,1071,5.326,1072,5.326,1073,5.326]],["title/classes/MetadataPart.html",[0,0.151,91,2.98]],["body/classes/MetadataPart.html",[0,0.171,2,1.001,3,0.191,4,0.191,5,0.158,7,0.431,8,0.961,18,0.8,21,0.013,23,0.808,29,0.251,37,0.229,40,1.121,55,1.894,58,0.009,59,0.009,85,1.661,86,3.436,87,2.271,91,4.4,92,1.961,93,5.21,94,3.356,96,5.035,97,2.271,99,1.786,144,1.548,275,5.334,278,5.334,279,5.011,280,5.334,281,5.334,321,2.978,322,3.356,326,2.003,1074,3.647,1075,4.627,1076,4.627,1077,4.627,1078,4.627,1079,4.036]],["title/classes/MetadataPartDto.html",[0,0.151,1070,2.98]],["body/classes/MetadataPartDto.html",[0,0.227,2,1.028,3,0.196,4,0.196,5,0.163,7,0.442,8,0.977,11,1.779,18,0.808,21,0.013,23,0.741,29,0.255,32,1.386,37,0.179,40,1.028,55,1.901,58,0.009,59,0.009,92,1.981,275,5.402,278,5.402,279,4.596,280,5.402,281,5.402,410,3.364,411,1.705,412,3.013,687,4.05,1070,4.475,1080,4.143,1081,6.169,1082,4.749,1083,6.169,1084,4.749,1085,4.749,1086,4.749,1087,6.853]],["title/classes/MongoDbTestInstance.html",[0,0.151,1088,3.238]],["body/classes/MongoDbTestInstance.html",[0,0.155,2,0.91,3,0.174,4,0.174,5,0.144,7,0.391,8,0.902,11,0.941,18,0.83,20,2.043,21,0.013,22,1.503,23,0.706,29,0.235,37,0.159,39,1.564,40,0.915,56,1.148,58,0.009,59,0.009,79,4.68,99,1.623,144,2.158,153,2.118,154,3.793,170,2.839,172,2.481,199,4.964,218,3.911,321,3.394,386,3.05,482,5.015,549,3.05,1088,4.486,1089,3.668,1090,6.451,1091,6.451,1092,6.913,1093,6.913,1094,4.204,1095,6.451,1096,4.204,1097,4.204,1098,5.691,1099,4.204,1100,4.204,1101,4.204,1102,4.204,1103,4.204,1104,3.668,1105,4.204,1106,5.691,1107,4.204,1108,4.204,1109,3.668,1110,4.204,1111,4.204,1112,4.204,1113,4.204,1114,4.204,1115,4.204,1116,4.204,1117,5.691,1118,4.204,1119,4.204,1120,4.204]],["title/interfaces/MongoosePlugin.html",[38,1.328,362,2.774]],["body/interfaces/MongoosePlugin.html",[3,0.214,4,0.152,5,0.126,7,0.342,8,0.822,11,1.461,21,0.013,23,0.614,29,0.249,32,1.074,37,0.227,38,1.677,40,1.095,42,1.532,43,1.532,44,1.659,45,2.199,46,2.331,47,2.331,58,0.008,59,0.008,60,1.89,70,2.199,76,3.406,97,1.806,99,2.321,129,2.331,157,1.982,167,4.671,267,1.89,287,2.659,319,1.806,362,4.06,364,4.09,367,4.09,374,2.484,376,2.669,386,4.737,429,3.406,453,3.504,534,2.669,571,2.484,584,3.764,585,2.9,586,3.764,587,4.09,588,4.527,589,4.361,590,4.527,591,4.995,592,6.006,593,4.739,594,4.527,595,3.504,596,3.209,597,3.209,598,3.209,599,3.209,600,3.209,601,3.209,602,3.209,603,3.209,604,3.209,605,3.209,606,3.209,607,3.209,608,3.209,609,3.209,610,3.209,611,3.209,612,3.209,613,3.209,614,3.209,615,3.209,616,3.209,617,3.209,618,3.209,619,3.209]],["title/classes/MongooseValidationFilter.html",[0,0.151,1121,3.238]],["body/classes/MongooseValidationFilter.html",[0,0.189,2,0.783,3,0.15,4,0.15,5,0.124,7,0.337,9,2.58,10,1.632,11,1.148,18,0.572,20,1.841,21,0.013,22,1.355,23,0.524,29,0.268,36,0.661,37,0.137,39,1.347,42,1.507,43,1.507,44,1.632,55,1.378,56,0.988,58,0.008,59,0.008,99,1.397,108,3.25,123,1.95,144,2.445,153,1.909,172,1.841,211,4.044,374,4.024,411,1.299,472,2.853,494,2.164,503,3.721,593,4.044,696,5.885,698,2.763,700,2.164,708,3.775,710,4.044,711,2.164,720,2.853,721,2.853,722,2.853,726,2.051,865,4.702,1011,3.158,1014,3.158,1026,4.475,1121,4.697,1122,5.198,1123,3.158,1124,5.959,1125,5.13,1126,3.62,1127,7.308,1128,7.466,1129,6.482,1130,3.62,1131,5.959,1132,3.158,1133,5.13,1134,3.62,1135,5.959,1136,3.62,1137,3.62,1138,3.62,1139,3.62,1140,3.62,1141,3.62,1142,3.62,1143,3.62,1144,3.62,1145,3.62,1146,3.62,1147,3.62,1148,5.13,1149,3.62,1150,3.62,1151,3.62,1152,3.62,1153,3.62,1154,3.62,1155,3.62,1156,3.62,1157,3.62,1158,3.62,1159,3.62,1160,3.62]],["title/classes/NotFoundDto.html",[0,0.151,1161,3.238]],["body/classes/NotFoundDto.html",[0,0.198,2,1.163,3,0.222,4,0.222,5,0.184,7,0.5,8,1.057,18,0.744,21,0.013,23,0.681,29,0.276,32,1.569,36,0.981,37,0.203,40,0.946,55,1.84,58,0.01,59,0.01,92,1.822,179,2.423,412,3.042,577,2.895,700,4.339,711,4.339,726,4.112,745,4.236,1161,5.26,1162,6.332,1163,4.688,1164,5.374,1165,5.374,1166,5.374]],["title/injectables/ObjectIdValidationPipe.html",[101,0.95,847,2.98]],["body/injectables/ObjectIdValidationPipe.html",[0,0.187,3,0.21,4,0.21,5,0.174,7,0.472,11,1.134,18,0.565,20,1.82,21,0.013,22,1.339,23,0.518,29,0.266,36,0.926,37,0.191,40,1.002,53,2.394,55,1.635,56,1.384,58,0.01,59,0.01,89,4.347,98,3.031,99,1.957,101,1.488,103,2.111,141,3.424,153,2.394,172,1.82,211,3.997,465,3.645,488,4.076,690,3.678,699,3.997,704,5.572,847,4.668,1167,5.613,1168,5.07,1169,7.068,1170,7.435,1171,5.07,1172,6.435,1173,5.07,1174,5.07,1175,5.07,1176,5.07]],["title/classes/PaginatedFilterDto.html",[0,0.151,1177,3.238]],["body/classes/PaginatedFilterDto.html",[0,0.224,2,1.312,3,0.251,4,0.251,5,0.208,18,0.676,21,0.012,37,0.229,39,2.672,40,1.018,42,2.524,43,2.524,44,2.734,58,0.011,59,0.011,61,4.398,494,3.624,1177,5.66,1178,5.66,1179,5.289,1180,6.063]],["title/classes/PaginatedResponseDto.html",[0,0.151,33,2.774]],["body/classes/PaginatedResponseDto.html",[0,0.189,2,1.106,3,0.211,4,0.211,5,0.175,7,0.476,8,1.025,18,0.791,21,0.013,23,0.725,29,0.267,32,1.493,33,4.369,36,0.934,37,0.193,41,2.497,55,1.885,58,0.01,59,0.01,92,1.938,177,3.645,179,2.306,245,5.594,412,3.149,577,2.755,700,4.242,726,4.02,745,4.031,873,4.031,1178,5.879,1181,4.461,1182,6.469,1183,5.114,1184,5.114,1185,5.114]],["title/controllers/PasswdController.html",[330,1.71,1186,2.98]],["body/controllers/PasswdController.html",[0,0.085,3,0.095,4,0.095,5,0.079,7,0.214,10,1.646,11,1.154,18,0.575,20,1.852,21,0.013,22,1.363,23,0.527,29,0.277,32,0.672,36,0.42,37,0.087,39,1.92,53,0.857,56,1.777,58,0.006,59,0.006,65,0.798,92,1.409,105,1.304,123,1.24,137,4.342,144,1.882,153,1.358,154,3.35,172,1.852,173,3.686,177,3.075,218,2.651,267,2.329,287,0.857,330,0.959,332,0.997,338,1.376,353,3.37,398,3.485,405,3.431,416,1.24,419,1.555,432,1.459,481,2.569,503,5.246,507,5.472,512,5.95,516,4.081,518,2.008,521,4.908,522,4.908,523,5.988,524,1.555,529,4.502,531,5.617,532,4.502,534,3.743,565,3.485,571,4.394,574,3.184,698,2.443,799,3.799,828,2.008,857,1.815,1186,2.648,1187,2.008,1188,3.184,1189,3.956,1190,3.956,1191,2.302,1192,2.302,1193,5.16,1194,3.65,1195,2.302,1196,3.65,1197,2.302,1198,6.506,1199,3.65,1200,2.302,1201,3.65,1202,2.302,1203,2.302,1204,5.16,1205,5.374,1206,5.16,1207,3.65,1208,2.302,1209,2.302,1210,3.184,1211,2.008,1212,3.485,1213,2.302,1214,3.65,1215,3.65,1216,2.302,1217,2.008,1218,3.743,1219,2.302,1220,3.65,1221,2.302,1222,2.873,1223,2.008,1224,2.008,1225,3.184,1226,2.008,1227,3.184,1228,2.302,1229,2.008,1230,2.302,1231,2.302,1232,2.302,1233,2.302,1234,2.302,1235,2.302,1236,2.008,1237,2.302,1238,3.65,1239,2.302,1240,3.65,1241,3.65,1242,2.302,1243,2.302,1244,2.302,1245,2.008,1246,2.302,1247,2.302,1248,2.302,1249,2.302,1250,2.302,1251,3.65,1252,2.302,1253,2.302,1254,2.302,1255,3.65,1256,4.535,1257,2.302,1258,2.302,1259,2.302,1260,2.302,1261,2.302,1262,2.302,1263,2.302,1264,2.008]],["title/modules/PasswdModule.html",[138,1.374,1060,2.774]],["body/modules/PasswdModule.html",[0,0.198,3,0.222,4,0.222,5,0.184,21,0.013,29,0.314,36,0.981,37,0.203,58,0.01,59,0.01,74,2.76,138,2.429,332,2.89,341,2.638,342,2.638,343,2.895,344,2.895,345,2.895,346,3.91,347,2.895,352,3.595,353,2.638,354,2.895,356,3.212,359,4.841,1060,5.373,1186,5.266,1222,5.041,1223,4.688,1265,4.688,1266,4.688,1267,5.374,1268,5.374]],["title/injectables/PasswdService.html",[101,0.95,1222,2.603]],["body/injectables/PasswdService.html",[0,0.094,3,0.106,4,0.106,5,0.088,7,0.238,8,0.629,9,2.711,11,1.401,15,1.59,18,0.752,20,2.247,21,0.013,22,1.654,23,0.667,29,0.286,36,0.468,37,0.097,39,2.036,40,0.689,56,1.842,58,0.006,59,0.006,63,3.75,65,2.169,66,3.466,67,3.524,69,3.966,70,4.034,74,1.316,76,1.451,85,1.425,101,0.918,103,1.067,127,1.531,137,2.879,144,2.556,153,1.477,154,3.56,157,1.38,172,2.125,177,2.039,194,2.514,218,3.636,230,1.858,267,2.039,287,1.477,326,1.109,353,1.948,366,1.858,398,3.694,401,1.531,402,2.248,481,2.248,516,2.879,531,2.019,546,2.019,549,4.294,551,2.235,552,2.235,553,2.019,554,3.128,555,2.019,556,3.128,559,3.128,560,2.68,561,3.128,562,3.128,563,3.128,565,3.694,568,2.019,698,1.38,1020,2.235,1188,3.462,1190,4.238,1205,3.524,1210,4.238,1211,3.462,1212,3.694,1217,3.462,1222,2.514,1224,2.235,1225,3.462,1226,2.235,1227,2.235,1229,2.235,1236,2.235,1245,2.235,1264,2.235,1269,2.235,1270,3.968,1271,2.562,1272,3.968,1273,2.562,1274,3.968,1275,2.562,1276,3.968,1277,2.562,1278,2.562,1279,2.562,1280,3.968,1281,2.562,1282,5.471,1283,2.562,1284,2.562,1285,2.562,1286,2.562,1287,3.968,1288,3.968,1289,2.562,1290,2.562,1291,4.858,1292,2.562,1293,4.858,1294,2.562,1295,4.858,1296,2.562,1297,3.968,1298,2.562,1299,2.562,1300,2.562,1301,2.562,1302,2.562,1303,2.562,1304,2.562,1305,2.562,1306,3.968,1307,2.562,1308,2.562,1309,2.562,1310,2.562,1311,2.562,1312,2.562,1313,2.562,1314,2.562,1315,2.562,1316,2.562,1317,2.562,1318,2.562,1319,3.968,1320,2.562,1321,2.562,1322,2.562,1323,2.562,1324,2.562,1325,2.562,1326,2.562,1327,2.562,1328,2.562,1329,3.968,1330,2.562,1331,2.562,1332,2.562,1333,2.562]],["title/interfaces/RawBodyBufferOptions.html",[38,1.328,1334,2.98]],["body/interfaces/RawBodyBufferOptions.html",[3,0.216,4,0.216,5,0.179,7,0.486,8,1.038,11,1.767,21,0.013,23,0.731,29,0.216,37,0.247,38,1.686,40,1.159,56,1.425,58,0.01,59,0.01,60,2.68,287,1.942,490,3.306,799,4.424,1334,5.196,1335,4.113,1336,4.113,1337,7.512,1338,6.89,1339,7.512,1340,5.218,1341,5.218,1342,4.552,1343,5.218,1344,6.552,1345,5.218,1346,5.218]],["title/classes/ResetPasswordDto.html",[0,0.151,1212,2.774]],["body/classes/ResetPasswordDto.html",[0,0.241,2,1.126,3,0.215,4,0.215,5,0.178,7,0.484,8,1.036,18,0.729,21,0.013,23,0.668,29,0.27,32,1.519,37,0.196,40,1.064,53,2.434,58,0.01,59,0.01,92,1.786,403,4.744,405,3.384,410,3.512,411,1.868,412,2.866,413,3.523,567,3.513,568,5.638,570,5.705,571,4.416,576,4.538,1205,5.609,1212,4.416,1347,6.24,1348,5.705,1349,5.203]],["title/interfaces/ServiceSchemaInterface.html",[38,1.328,206,2.98]],["body/interfaces/ServiceSchemaInterface.html",[3,0.099,4,0.099,5,0.082,7,0.222,11,1.474,18,0.734,20,2.705,21,0.013,22,1.74,23,0.769,25,4.815,29,0.155,37,0.09,38,0.771,41,0.921,42,1.562,43,0.993,58,0.006,59,0.006,60,1.225,83,1.511,86,1.351,87,2.278,89,3.839,98,1.426,99,0.921,134,4.412,153,1.397,155,2.378,156,2.723,157,2.022,158,3.658,159,3.658,160,3.658,161,3.658,162,4.409,165,2.958,166,5.749,167,4.731,168,6.182,170,4.684,171,5.012,172,2.364,173,4.269,174,2.958,175,4.148,177,1.225,178,2.958,179,3.693,181,1.88,182,5.216,183,5.749,185,1.88,189,1.88,191,1.73,192,4.148,202,2.08,203,2.08,204,2.08,206,2.723,310,2.08,488,2.378,1350,2.08,1351,2.385,1352,2.385,1353,2.385,1354,2.385,1355,2.385,1356,2.385,1357,2.385,1358,2.385,1359,2.385]],["title/interfaces/ValidationRecursive.html",[38,1.328,692,2.98]],["body/interfaces/ValidationRecursive.html",[0,0.14,3,0.157,4,0.157,5,0.13,9,1.647,10,1.715,18,0.424,21,0.013,29,0.253,30,1.954,36,0.694,37,0.144,38,1.229,39,1.977,40,0.939,53,1.415,55,1.229,56,1.671,58,0.008,59,0.008,60,1.954,61,2.759,65,1.318,85,1.365,101,1.229,108,4.198,123,2.049,144,2.217,157,2.049,232,2.998,265,2.998,287,1.977,372,2.759,416,2.862,436,2.41,481,3.468,560,3.587,688,3.854,689,4.187,690,2.759,691,4.634,692,5.057,696,4.825,698,3.297,699,4.187,700,2.274,701,4.634,702,3.318,703,3.318,704,2.998,705,3.318,706,3.318,707,3.318,708,4.79,709,3.318,710,4.187,711,3.659,712,3.318,713,2.274,714,2.569,715,3.318,716,3.318,717,3.318,718,3.318,719,3.318,720,2.998,721,2.998,722,2.998,723,3.318,724,3.318,725,3.318,726,2.155,727,2.759,728,4.634,729,4.634,730,3.318,731,3.318,732,4.634,733,3.318,734,3.318,735,4.634,736,3.318,737,3.318,738,3.318,1360,3.804]],["title/classes/VerifyTokenDto.html",[0,0.151,1218,2.98]],["body/classes/VerifyTokenDto.html",[0,0.251,2,1.199,3,0.229,4,0.229,5,0.19,7,0.516,8,1.077,18,0.617,21,0.013,23,0.566,29,0.281,32,1.617,37,0.209,40,0.964,58,0.01,59,0.01,92,1.513,400,4.366,403,4.019,405,3.066,410,3.338,411,1.988,412,2.725,413,2.984,1189,5.932,1205,5.713,1218,4.933,1348,5.932,1361,5.932,1362,6.8,1363,5.539]],["title/classes/additionalFieldsPartDto.html",[0,0.151,883,2.456]],["body/classes/additionalFieldsPartDto.html",[0,0.195,2,1.146,3,0.219,4,0.219,5,0.181,7,0.493,8,1.048,18,0.737,21,0.013,22,1.746,23,0.809,29,0.219,32,1.546,37,0.2,39,1.97,40,1.071,58,0.01,59,0.01,92,1.805,179,2.387,240,4.189,313,3.993,314,3.704,315,3.354,318,4.465,412,2.889,883,3.953,888,4.465,1364,4.619,1365,6.612,1366,5.295,1367,5.295]],["title/coverage.html",[1368,4.887]],["body/coverage.html",[0,0.293,1,1.358,5,0.069,6,2.581,17,1.459,21,0.013,23,0.205,33,1.358,38,2.069,53,0.748,55,0.465,58,0.005,59,0.005,63,1.274,64,1.754,83,1.274,84,1.754,91,1.459,94,1.459,101,1.64,102,1.274,104,2.581,111,1.358,138,0.673,150,1.459,151,1.754,206,1.459,208,1.585,282,1.585,293,1.585,306,1.358,311,1.358,312,2.581,327,1.033,328,1.459,330,2.472,331,1.585,333,1.754,336,1.459,362,1.358,394,1.754,398,1.358,399,1.754,400,2.581,414,1.459,415,1.754,419,1.358,420,1.754,434,1.585,445,1.358,446,1.358,452,1.585,453,1.358,455,1.754,456,1.459,457,4.055,458,2.375,481,4.81,488,1.274,490,3.921,495,1.459,497,1.459,498,1.754,519,1.274,545,1.754,565,1.358,566,1.459,567,2.211,584,1.459,585,2.581,589,1.459,620,1.274,621,3.004,636,1.358,637,1.274,646,1.585,647,1.754,648,1.754,658,1.459,659,1.754,660,1.274,678,1.754,680,1.585,681,1.754,682,1.754,688,1.459,689,2.581,690,3.004,692,1.459,739,1.585,740,1.754,741,1.754,748,1.754,749,1.754,770,1.274,771,2.375,776,1.459,791,1.459,793,1.459,794,1.754,795,1.585,799,2.211,800,1.274,802,1.202,822,1.274,830,1.274,834,1.585,837,1.585,839,1.585,841,1.585,842,1.585,844,1.585,847,1.459,854,1.202,882,3.004,883,1.202,904,1.083,957,1.754,977,1.754,1051,1.459,1052,1.754,1054,1.274,1066,1.754,1068,1.585,1069,1.754,1070,1.459,1074,2.581,1080,1.754,1088,1.585,1089,1.754,1121,1.585,1122,1.754,1123,1.754,1161,1.585,1162,1.754,1163,1.754,1167,1.754,1177,1.585,1178,2.581,1179,1.754,1181,1.754,1186,1.459,1187,1.754,1212,1.358,1218,1.459,1222,1.274,1269,1.754,1334,1.459,1335,2.581,1336,2.581,1347,1.754,1350,1.754,1361,1.754,1364,1.754,1368,1.754,1369,2.011,1370,2.011,1371,2.011,1372,6.401,1373,6.401,1374,3.274,1375,4.773,1376,6.401,1377,3.274,1378,6.735,1379,7.755,1380,8.133,1381,1.754,1382,1.754,1383,5.584,1384,1.754,1385,1.754,1386,1.754,1387,4.583,1388,1.754,1389,1.754,1390,1.754,1391,1.754,1392,1.754,1393,1.754,1394,2.856,1395,1.754,1396,1.754,1397,1.754,1398,1.754,1399,1.754,1400,1.754,1401,1.754,1402,2.011,1403,2.011,1404,2.011,1405,2.011,1406,2.856,1407,1.754,1408,2.581,1409,4.141,1410,1.754,1411,1.754,1412,1.754,1413,1.754,1414,1.754,1415,1.754,1416,1.754,1417,3.274,1418,2.581,1419,3.004,1420,1.358,1421,4.141,1422,1.358,1423,2.581,1424,1.754,1425,1.754,1426,1.754,1427,1.754,1428,1.754,1429,1.754,1430,1.754,1431,2.011,1432,2.011]],["title/dependencies.html",[342,2.425,591,2.49]],["body/dependencies.html",[0,0.234,21,0.013,24,2.972,30,2.554,36,0.908,58,0.01,59,0.01,74,2.554,75,3.607,76,2.817,88,3.607,97,2.441,99,1.919,108,4.026,123,2.678,124,3.919,125,3.607,127,3.799,342,2.441,358,4.337,366,3.607,411,1.785,432,3.15,433,4.337,586,3.607,633,2.817,757,5.544,758,4.337,853,4.337,989,4.337,994,4.337,997,4.337,1433,4.972,1434,4.972,1435,4.972,1436,4.972,1437,4.972,1438,6.355,1439,4.972,1440,4.972,1441,6.355,1442,4.972,1443,4.972,1444,4.972,1445,4.972,1446,4.972,1447,4.972,1448,4.972,1449,4.972,1450,4.972,1451,4.972,1452,4.972,1453,4.972,1454,4.972,1455,4.972,1456,4.972,1457,4.972,1458,4.972,1459,4.972,1460,4.972,1461,4.972]],["title/miscellaneous/enumerations.html",[1462,1.945,1463,4.309]],["body/miscellaneous/enumerations.html",[7,0.494,21,0.013,40,0.753,41,2.05,58,0.01,59,0.01,267,3.403,279,3.364,288,5.779,306,3.586,465,4.647,549,3.852,566,3.852,567,4.473,578,5.779,579,5.779,580,5.779,581,5.779,582,5.779,627,4.806,778,4.473,780,4.197,940,4.632,941,4.632,953,4.632,1462,3.008,1463,4.632,1464,4.632,1465,5.31,1466,5.31,1467,5.31,1468,5.31,1469,5.31,1470,5.31,1471,5.31,1472,5.31,1473,5.31,1474,5.31,1475,5.31,1476,5.31,1477,5.31,1478,5.31]],["title/miscellaneous/functions.html",[1462,1.945,1479,4.309]],["body/miscellaneous/functions.html",[7,0.409,11,1.722,20,2.763,21,0.013,22,2.033,23,0.817,25,3.711,40,0.83,58,0.009,59,0.009,134,2.364,163,4.456,167,3.941,172,2.706,179,1.979,321,3.237,457,2.781,586,3.184,589,4.249,799,3.956,844,4.617,1132,3.829,1334,4.249,1335,3.46,1336,4.617,1342,3.829,1395,3.829,1396,5.11,1397,3.829,1398,5.11,1399,5.11,1400,5.11,1401,5.11,1408,5.197,1409,5.197,1410,5.11,1411,5.11,1415,3.829,1416,5.11,1418,3.46,1430,3.829,1462,2.486,1479,3.829,1480,4.617,1481,4.389,1482,4.389,1483,4.389,1484,4.389,1485,3.829,1486,4.389,1487,4.389,1488,4.389,1489,4.389,1490,4.389,1491,5.858,1492,4.389,1493,5.858,1494,4.389,1495,4.389,1496,5.858,1497,4.389,1498,4.389,1499,5.858,1500,3.829]],["title/index.html",[7,0.32,1501,3.433,1502,3.433]],["body/index.html",[21,0.012,58,0.01,59,0.01,66,3.425,70,4.548,75,3.922,374,3.651,376,3.922,405,2.437,413,3.921,713,3.232,1104,4.716,1500,4.716,1503,5.406,1504,5.406,1505,5.406,1506,5.406,1507,5.406,1508,5.406,1509,5.406,1510,5.406,1511,5.406,1512,4.716,1513,5.406,1514,4.716,1515,5.406,1516,6.698,1517,5.406,1518,5.406,1519,5.406,1520,5.406,1521,5.406,1522,5.406,1523,5.406,1524,5.406,1525,5.406,1526,3.922,1527,5.406,1528,5.406,1529,5.843,1530,5.406,1531,5.406,1532,5.406,1533,5.406,1534,5.406,1535,5.406,1536,5.406,1537,5.406,1538,5.406,1539,4.716,1540,4.716,1541,5.406]],["title/classes/inetOrgPerson.html",[0,0.151,327,2.11]],["body/classes/inetOrgPerson.html",[0,0.124,2,0.725,3,0.138,4,0.138,5,0.115,7,0.312,8,0.769,11,1.844,18,0.885,21,0.013,23,0.811,29,0.138,37,0.183,40,1.184,58,0.007,59,0.007,87,1.645,92,2.168,96,5.618,97,1.645,144,1.121,287,2.722,316,2.471,321,2.382,322,2.43,326,1.45,327,2.493,401,3.411,402,3.233,649,3.615,776,2.43,1423,2.64,1542,3.853,1543,3.853,1544,3.853,1545,3.853,1546,3.853,1547,3.853,1548,3.853,1549,3.853,1550,3.853,1551,3.853,1552,3.853,1553,3.853,1554,5.706,1555,3.35,1556,3.35,1557,3.35,1558,3.35,1559,3.35,1560,3.35,1561,3.35,1562,3.35,1563,3.35,1564,3.35,1565,3.35,1566,3.35,1567,4.853,1568,3.35,1569,3.35,1570,3.35,1571,2.922]],["title/classes/inetOrgPersonCreateDto.html",[0,0.151,1420,2.774]],["body/classes/inetOrgPersonCreateDto.html",[0,0.217,2,0.641,3,0.122,4,0.122,5,0.101,7,0.276,8,0.702,11,1.82,18,0.867,21,0.013,23,0.794,29,0.183,32,0.865,37,0.201,40,1.171,58,0.007,59,0.007,85,1.592,92,2.124,316,3.274,326,3.274,401,3.176,402,3.01,410,3.82,411,1.064,412,3.141,649,3.366,687,4.157,904,1.596,911,1.877,1419,2.149,1420,3.588,1422,2.001,1542,3.588,1543,3.588,1544,3.588,1545,3.588,1546,3.588,1547,3.588,1548,3.588,1549,3.588,1550,3.588,1551,3.588,1552,3.588,1553,3.588,1572,4.634,1573,2.963,1574,6.415,1575,6.596,1576,2.963,1577,2.963,1578,2.963,1579,2.963,1580,2.585,1581,2.963,1582,2.585,1583,2.963,1584,2.963,1585,2.963,1586,2.963,1587,2.963,1588,2.963,1589,2.963,1590,2.963,1591,2.963,1592,3.495,1593,2.336]],["title/classes/inetOrgPersonDto.html",[0,0.151,904,2.213]],["body/classes/inetOrgPersonDto.html",[0,0.212,2,0.609,3,0.116,4,0.116,5,0.096,7,0.262,8,0.676,11,1.809,18,0.859,21,0.013,23,0.787,29,0.176,32,0.822,37,0.194,40,1.165,58,0.007,59,0.007,85,1.849,92,2.105,194,4.884,316,3.238,326,3.238,401,3.079,402,2.918,410,3.785,411,1.01,412,3.113,649,3.263,687,4.116,904,2.298,911,1.783,1419,2.042,1420,5.316,1422,1.901,1542,3.478,1543,3.478,1544,3.478,1545,3.478,1546,3.478,1547,3.478,1548,3.478,1549,3.478,1550,3.478,1551,3.478,1552,3.478,1553,3.478,1572,4.493,1574,6.332,1575,6.522,1580,2.455,1582,2.455,1592,3.362,1593,2.219,1594,2.815,1595,2.815,1596,2.815,1597,2.815,1598,2.815,1599,2.815,1600,2.815,1601,2.815,1602,2.815,1603,2.815,1604,2.815,1605,2.815,1606,2.815,1607,2.815,1608,2.815]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.151,1422,2.774]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.257,2,0.927,3,0.177,4,0.177,5,0.147,21,0.013,29,0.238,32,1.251,37,0.246,40,1.166,58,0.009,59,0.009,85,2.338,316,3.504,326,3.504,401,2.561,402,2.427,410,4.038,411,1.538,412,3.309,649,2.714,687,4.41,904,2.308,911,2.714,1419,3.108,1420,3.892,1422,3.892,1542,2.893,1543,2.893,1544,2.893,1545,2.893,1546,2.893,1547,2.893,1548,2.893,1549,2.893,1550,2.893,1551,2.893,1552,2.893,1553,2.893,1592,4.543,1593,4.543]],["title/modules.html",[341,2.75]],["body/modules.html",[21,0.011,58,0.011,59,0.011,340,4.173,341,2.824,350,3.884,351,3.884,442,3.884,540,3.884,927,3.884,932,3.884,1060,3.884,1609,8.256,1610,8.256,1611,8.256,1612,8.256]],["title/overview.html",[1613,4.887]],["body/overview.html",[2,0.952,21,0.013,58,0.009,59,0.009,60,2.26,103,1.832,138,1.472,332,1.905,340,5.473,341,2.16,342,2.16,343,2.37,344,2.37,345,2.37,346,2.37,347,2.37,348,3.838,349,3.838,350,5.35,351,5.35,352,3.161,353,2.16,354,2.37,442,5.201,443,3.838,444,3.838,445,4.457,446,4.457,519,4.182,540,4.953,541,3.838,542,3.838,660,4.182,663,3.838,665,3.838,830,4.182,854,4.677,927,5.201,928,3.838,929,3.838,932,4.953,972,3.838,973,3.838,1054,4.182,1057,3.838,1058,3.838,1059,3.838,1060,4.953,1222,4.182,1265,3.838,1266,3.838,1613,3.838,1614,4.4,1615,4.4,1616,4.4,1617,4.4,1618,4.4]],["title/properties.html",[8,0.783,591,2.49]],["body/properties.html",[8,1.008,21,0.013,58,0.011,59,0.011,405,2.869,1109,5.551,1619,6.364,1620,6.364,1621,6.364,1622,6.364]],["title/miscellaneous/typealiases.html",[1462,1.945,1623,4.94]],["body/miscellaneous/typealiases.html",[7,0.496,21,0.013,22,1.407,23,0.738,40,0.755,41,2.056,58,0.01,59,0.01,89,3.017,134,2.869,170,3.597,240,3.374,279,3.374,315,4.204,318,3.597,323,4.814,429,3.017,457,3.374,458,4.814,459,3.864,466,4.198,469,5.231,471,3.864,490,4.204,491,4.198,492,3.864,493,4.198,566,3.864,567,4.482,583,5.789,771,3.864,787,5.789,850,5.789,1462,3.017,1464,4.646,1480,4.198,1624,5.326,1625,4.646,1626,5.326,1627,6.637,1628,5.326,1629,6.637,1630,6.637,1631,5.326,1632,5.326,1633,5.326,1634,5.326]],["title/miscellaneous/variables.html",[1462,1.945,1526,3.583]],["body/miscellaneous/variables.html",[7,0.165,8,0.777,21,0.013,22,0.999,23,0.688,40,0.626,41,2.356,53,0.658,55,0.681,56,1.805,58,0.005,59,0.005,94,2.136,134,3.748,138,0.985,139,5.312,155,1.12,163,3.555,167,3.514,177,2.518,179,3.137,208,2.321,240,1.12,267,0.908,282,2.321,287,1.096,293,2.321,306,1.988,312,1.393,313,0.908,314,0.908,316,1.638,318,1.194,319,3.707,321,3.415,326,1.911,327,0.908,328,2.136,329,1.542,401,1.76,402,1.668,405,2.21,434,2.321,457,1.865,459,1.282,465,4.277,471,1.282,577,2.64,649,1.865,714,1.988,726,2.777,768,2.321,771,1.282,772,1.057,773,1.194,774,1.057,776,2.136,788,1.542,790,1.542,791,2.136,792,1.542,795,2.321,802,1.057,834,2.321,837,2.321,839,2.321,841,2.321,842,2.321,864,1.542,873,3.478,883,1.057,888,1.194,904,0.952,917,2.136,950,1.542,1018,3.301,1074,1.393,1079,1.542,1338,1.542,1381,1.542,1382,2.568,1383,5.324,1384,2.568,1385,2.568,1386,2.568,1387,5.493,1388,2.568,1389,2.568,1390,2.568,1391,2.568,1392,2.568,1393,2.568,1394,1.542,1406,3.301,1407,2.568,1408,2.321,1409,3.478,1412,2.568,1413,2.568,1414,2.568,1418,1.393,1423,1.393,1424,1.542,1425,3.301,1426,1.542,1427,3.301,1428,1.542,1429,2.568,1462,1.001,1480,3.864,1485,1.542,1526,1.282,1542,1.988,1543,1.988,1544,1.988,1545,1.988,1546,1.988,1547,1.988,1548,1.988,1549,1.988,1550,1.988,1551,1.988,1552,1.988,1553,1.988,1571,1.542,1625,1.542,1635,1.768,1636,1.768,1637,6.104,1638,1.768,1639,1.768,1640,1.768,1641,1.768,1642,2.944,1643,1.768,1644,2.944,1645,6.464,1646,3.784,1647,6.104,1648,5.292,1649,1.768,1650,5.292,1651,2.944,1652,2.944,1653,4.413,1654,6.297,1655,6.61,1656,2.944,1657,1.768,1658,2.944,1659,1.768,1660,2.944,1661,2.944,1662,5.292,1663,3.784,1664,4.413,1665,3.784,1666,3.784,1667,3.784,1668,3.784,1669,1.768,1670,1.768,1671,1.768,1672,1.768,1673,1.768,1674,1.768,1675,1.768,1676,1.768,1677,1.768,1678,1.768,1679,1.768,1680,2.944,1681,1.768,1682,1.768,1683,1.768,1684,1.768,1685,1.768]],["title/additional-documentation/demon.html",[1686,2.995,1687,2.995,1688,3.433]],["body/additional-documentation/demon.html",[21,0.011,58,0.011,59,0.011,530,6.484,1514,6.484,1689,6.432,1690,5.611,1691,6.432,1692,6.432]],["title/additional-documentation/queue-processor-service.html",[66,1.637,230,1.874,1686,2.254,1687,2.254,1693,2.584]],["body/additional-documentation/queue-processor-service.html",[0,0.114,2,0.67,5,0.239,9,2.609,15,1.836,21,0.013,29,0.266,36,0.565,37,0.117,53,1.705,55,0.716,56,0.845,58,0.007,59,0.007,63,2.902,65,2.088,66,4.075,67,4.666,69,4.266,70,4.686,72,3.323,74,2.353,75,3.955,76,2.595,77,2.701,78,2.701,79,3.323,80,3.996,81,2.701,82,2.701,85,1.111,101,1.059,127,2.738,144,1.036,154,1.455,218,2.353,230,3.955,405,1.396,413,2.468,553,2.44,554,3.611,555,2.44,556,2.44,559,2.44,560,2.091,561,2.44,562,2.44,563,2.44,587,2.44,713,4.872,889,2.246,892,3.323,895,4.666,897,3.955,900,4.371,901,3.323,1512,2.701,1526,3.323,1529,2.701,1539,2.701,1540,6.078,1690,2.701,1694,4.581,1695,3.096,1696,3.096,1697,4.581,1698,6.432,1699,5.452,1700,4.581,1701,3.096,1702,7.306,1703,3.096,1704,6.432,1705,3.096,1706,6.432,1707,4.581,1708,6.026,1709,3.096,1710,7.154,1711,3.096,1712,3.096,1713,3.096,1714,3.096,1715,3.096,1716,5.452,1717,4.581,1718,3.096,1719,4.581,1720,4.581,1721,3.096,1722,4.581,1723,4.581,1724,5.452,1725,3.096,1726,3.096,1727,3.096,1728,3.096,1729,3.096,1730,3.096,1731,3.096,1732,3.096,1733,3.096,1734,3.096,1735,3.096,1736,3.096,1737,3.096,1738,3.096,1739,3.096,1740,3.096,1741,3.096,1742,3.096,1743,4.581,1744,3.096,1745,3.096,1746,3.096,1747,3.096,1748,3.096,1749,4.581,1750,3.096,1751,3.096,1752,3.096,1753,3.096,1754,3.096,1755,3.096,1756,3.096,1757,3.096,1758,3.096,1759,3.096,1760,3.096,1761,3.096,1762,3.096,1763,3.096]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/demon.html":{},"additional-documentation/queue-processor-service.html":{}}}],["0",{"_index":481,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1619,"title":{},"body":{"properties.html":{}}}],["0.0.16",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["000000000000000000000000",{"_index":653,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["1",{"_index":267,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"controllers/IdentitiesController.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["1.0.13",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["10.1.3",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1616,"title":{},"body":{"overview.html":{}}}],["2",{"_index":288,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.3",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":507,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["201",{"_index":1220,"title":{},"body":{"controllers/PasswdController.html":{}}}],["256",{"_index":1287,"title":{},"body":{"injectables/PasswdService.html":{}}}],["3",{"_index":1471,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["30000",{"_index":563,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["31",{"_index":1617,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":1302,"title":{},"body":{"injectables/PasswdService.html":{}}}],["4.14.0",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":1196,"title":{},"body":{"controllers/PasswdController.html":{}}}],["5.0.22",{"_index":1110,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.3.2",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1198,"title":{},"body":{"controllers/PasswdController.html":{}}}],["6/7",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["6379",{"_index":599,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["7",{"_index":1615,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1614,"title":{},"body":{"overview.html":{}}}],["8.0.2",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1618,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":806,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_common/abstracts/abstract.controller",{"_index":832,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":553,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":970,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":784,"title":{},"body":{"classes/Identities.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":100,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/constants/event",{"_index":209,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["_common/decorators/api",{"_index":835,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_common/decorators/public.decorator",{"_index":435,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["_common/helpers/pick",{"_index":845,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_common/pipes/object",{"_index":848,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_common/types/mixed",{"_index":324,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/CustomFieldsDto.html":{},"controllers/IdentitiesController.html":{}}}],["_common/types/partial",{"_index":851,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_dto/config.dto",{"_index":993,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/identities.dto",{"_index":829,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_enums/config.object",{"_index":634,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":782,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_enums/states.enum",{"_index":785,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_exception",{"_index":742,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_id",{"_index":87,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConsoleSession.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/MetadataPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/inetOrgPerson.html":{}}}],["_metadata",{"_index":1169,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_model",{"_index":152,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["_parts/additionalfields.dto",{"_index":914,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":786,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/inetorgperson.dto",{"_index":913,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_parts/inetorgperson.part",{"_index":783,"title":{},"body":{"classes/Identities.html":{}}}],["_projection",{"_index":1496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_req",{"_index":106,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":998,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_schemas/identities.schema",{"_index":856,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["_service",{"_index":662,"title":{},"body":{"controllers/CoreController.html":{},"controllers/IdentitiesController.html":{},"controllers/ManagementController.html":{}}}],["_validation",{"_index":859,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["abortearly",{"_index":1025,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["abstract.service",{"_index":205,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/IdentitiesController.html":{},"coverage.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"coverage.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"coverage.html":{},"additional-documentation/queue-processor-service.html":{}}}],["abstractqueueprocessor:6",{"_index":551,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{}}}],["abstractqueueprocessor:7",{"_index":552,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{}}}],["abstractschema",{"_index":83,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Identities.html":{},"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["abstractservice",{"_index":102,"title":{"injectables/AbstractService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{}}}],["abstractservice:17",{"_index":197,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["abstractservice:18",{"_index":198,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["abstractservice:19",{"_index":195,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["abstractservice:20",{"_index":196,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["abstractservicecontext",{"_index":111,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"coverage.html":{}}}],["abstractserviceschema",{"_index":150,"title":{"injectables/AbstractServiceSchema.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{}}}],["abstractserviceschema:113",{"_index":966,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:145",{"_index":961,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:187",{"_index":967,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:21",{"_index":968,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:242",{"_index":962,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:32",{"_index":963,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:42",{"_index":960,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:48",{"_index":964,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:82",{"_index":965,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstraite",{"_index":1700,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["acc",{"_index":1049,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["acc[attribute.name",{"_index":1046,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{}}}],["accéder",{"_index":1719,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["actiontype",{"_index":578,"title":{},"body":{"classes/ChangePasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":1473,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":214,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["addident",{"_index":580,"title":{},"body":{"classes/ChangePasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["additional",{"_index":1686,"title":{"additional-documentation/demon.html":{},"additional-documentation/queue-processor-service.html":{}},"body":{}}],["additionalfields",{"_index":772,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["additionalfieldspart",{"_index":311,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{}}}],["additionalfieldspartdto",{"_index":883,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["additionalfieldspartdtostub",{"_index":1425,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["additionalfieldspartschema",{"_index":328,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["afterevent",{"_index":249,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.count",{"_index":253,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.created",{"_index":285,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.data",{"_index":259,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.deleted",{"_index":309,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.total",{"_index":251,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.updated",{"_index":303,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.count",{"_index":252,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.created",{"_index":284,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.data",{"_index":258,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.deleted",{"_index":308,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.total",{"_index":250,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.updated",{"_index":302,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevents",{"_index":247,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindandcount'].join(eventemitterseparator",{"_index":248,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindbyid'].join(eventemitterseparator",{"_index":257,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindone'].join(eventemitterseparator",{"_index":263,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["alias",{"_index":919,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["aliases",{"_index":1624,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":500,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["alive(@res",{"_index":538,"title":{},"body":{"controllers/BackendsController.html":{}}}],["alive(res",{"_index":502,"title":{},"body":{"controllers/BackendsController.html":{}}}],["allof",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anonymous",{"_index":277,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["api",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/HeaderApiKeyStrategy.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["apibadrequestresponse",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":521,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["apibearerauth()@useguards(undefined",{"_index":510,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apibody",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodydecorator",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibodydecorator(bodymodel",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodyoptions",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedecorator",{"_index":834,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":860,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedresponse",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator(responsemodel",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator",{"_index":837,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":880,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(errorschemadto",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(model",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(notfounddto",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedfilterdto",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apikey",{"_index":762,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["apinotfoundresponse",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apioperation",{"_index":522,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["apipaginateddecorator",{"_index":839,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":869,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apipaginatedresponsedecorator",{"_index":1390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponsedecorator(model",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiparam",{"_index":833,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiproperty",{"_index":412,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty({enum",{"_index":745,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({type",{"_index":1365,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apireadresponsedecorator",{"_index":841,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":875,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiresponse",{"_index":523,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["apiresponse({status",{"_index":506,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apiresponseoptions",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitags",{"_index":524,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/IdentitiesController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{}}}],["apitags('core",{"_index":526,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/CoreController.html":{}}}],["apitags('management",{"_index":857,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{}}}],["apiupdatedecorator",{"_index":842,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":878,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiupdatedresponsedecorator",{"_index":1393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiupdatedresponsedecorator(responsemodel",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1500,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.service",{"_index":337,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":331,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["application",{"_index":1711,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["applications",{"_index":1510,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(setmetadata(meta_unprotected",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":340,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":336,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["argumentmetadata",{"_index":1170,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["arguments",{"_index":266,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[1",{"_index":268,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[2",{"_index":289,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["argumentshost",{"_index":1129,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["array",{"_index":318,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arraynotempty",{"_index":630,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["ascii",{"_index":1321,"title":{},"body":{"injectables/PasswdService.html":{}}}],["ask",{"_index":1204,"title":{},"body":{"controllers/PasswdController.html":{}}}],["asktoken",{"_index":1210,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["asktoken(asktoken",{"_index":1272,"title":{},"body":{"injectables/PasswdService.html":{}}}],["asktoken.mail",{"_index":1290,"title":{},"body":{"injectables/PasswdService.html":{}}}],["asktoken.uid",{"_index":1245,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["asktokendto",{"_index":398,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"coverage.html":{}}}],["async",{"_index":154,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["attribute",{"_index":1006,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attribute.required",{"_index":1048,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributes",{"_index":313,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["attributes.reduce((acc",{"_index":1045,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":1001,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributs",{"_index":893,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["au",{"_index":1736,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["auth.controller",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":672,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":414,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":419,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"controllers/PasswdController.html":{},"coverage.html":{}}}],["authguardinternal",{"_index":431,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardinternal(['jwt",{"_index":421,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":442,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1622,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":759,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["authservice",{"_index":445,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":493,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autoincrementidskipsymbol",{"_index":1412,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["autoincrementplugin",{"_index":1410,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["autoincrementplugin(schema",{"_index":1487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["autoincrementpluginoptions",{"_index":456,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{}}}],["autoincrementplugintrackerspec",{"_index":495,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{}}}],["aux",{"_index":892,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["avec",{"_index":1690,"title":{},"body":{"additional-documentation/demon.html":{},"additional-documentation/queue-processor-service.html":{}}}],["await",{"_index":218,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["backend",{"_index":534,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{}}}],["backendactiontype",{"_index":583,"title":{},"body":{"classes/ChangePasswordDto.html":{},"miscellaneous/typealiases.html":{}}}],["backenddata",{"_index":1329,"title":{},"body":{"injectables/PasswdService.html":{}}}],["backends",{"_index":499,"title":{},"body":{"controllers/BackendsController.html":{}}}],["backends.controller",{"_index":544,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":520,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":674,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscontroller",{"_index":497,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"coverage.html":{}}}],["backendsmodule",{"_index":540,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":519,"title":{"injectables/BackendsService.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"coverage.html":{},"overview.html":{}}}],["badrequestexception",{"_index":699,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(`invalid",{"_index":1174,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["badrequestoptions",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":1705,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["base64",{"_index":1293,"title":{},"body":{"injectables/PasswdService.html":{}}}],["bearer",{"_index":760,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["beforecreate'].join(eventemitterseparator",{"_index":272,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforedelete'].join(eventemitterseparator",{"_index":305,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent",{"_index":234,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.data",{"_index":274,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.filter",{"_index":237,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.options",{"_index":243,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.projection",{"_index":241,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.update",{"_index":292,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.data",{"_index":273,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.filter",{"_index":236,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.options",{"_index":242,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.projection",{"_index":238,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.stop",{"_index":235,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevents",{"_index":226,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindandcount'].join(eventemitterseparator",{"_index":231,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindbyid'].join(eventemitterseparator",{"_index":255,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindone'].join(eventemitterseparator",{"_index":261,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupdate'].join(eventemitterseparator",{"_index":291,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["binary",{"_index":1108,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["blacklistedheaders",{"_index":1337,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["body",{"_index":799,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{},"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["body.decorator.ts",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["body.interceptor.ts",{"_index":1399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bodymodel",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyoptions",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyparser",{"_index":1340,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":1346,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":1343,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["boolean",{"_index":429,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["break",{"_index":1037,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["browse",{"_index":1612,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1609,"title":{},"body":{"modules.html":{}}}],["buffer.middleware.ts",{"_index":1336,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["building",{"_index":1506,"title":{},"body":{"index.html":{}}}],["bullmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.forrootasync",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmq",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["canactivate",{"_index":422,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":426,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["capacités",{"_index":1756,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["case",{"_index":1035,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["catch",{"_index":865,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(error.validationerror",{"_index":1137,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":1126,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ceci",{"_index":1744,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["ces",{"_index":1525,"title":{},"body":{"index.html":{}}}],["cette",{"_index":1753,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["champ",{"_index":902,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["champs",{"_index":885,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["change",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["change(cpwd",{"_index":1191,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwd",{"_index":1274,"title":{},"body":{"injectables/PasswdService.html":{}}}],["changed",{"_index":1233,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changed.'})@apiresponse({status",{"_index":1195,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changepassworddto",{"_index":565,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"coverage.html":{}}}],["changepwd",{"_index":579,"title":{},"body":{"classes/ChangePasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["children",{"_index":676,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["cipher",{"_index":1285,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cipher.final('base64",{"_index":1294,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cipher.getauthtag",{"_index":1296,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cipher.update(json.stringify(datastruct",{"_index":1292,"title":{},"body":{"injectables/PasswdService.html":{}}}],["ciphertext",{"_index":1291,"title":{},"body":{"injectables/PasswdService.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["classe",{"_index":1699,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/queue-processor-service.html":{}}}],["classref",{"_index":1497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cleardatabase",{"_index":1092,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["client",{"_index":1720,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["cluster_appmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":541,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":542,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":663,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":664,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_providers",{"_index":665,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":928,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_providers",{"_index":929,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":972,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":973,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":974,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_managementmodule",{"_index":1057,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":1059,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":1058,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":1265,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_providers",{"_index":1266,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":899,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["cn",{"_index":1542,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["collection",{"_index":484,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["collections",{"_index":1117,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":1119,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["command",{"_index":508,"title":{},"body":{"controllers/BackendsController.html":{}}}],["communication",{"_index":1689,"title":{},"body":{"additional-documentation/demon.html":{}}}],["compos",{"_index":886,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["config",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["config.get('ioredis.options",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('ioredis.uri",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongoose.options",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongoose.plugins",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongoose.uri",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["configinstance",{"_index":584,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["configmodule",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/PasswdModule.html":{}}}],["configmodule.forroot",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["configobjectattributedto",{"_index":620,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{}}}],["configobjectobjectclassdto",{"_index":636,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"coverage.html":{}}}],["configobjectschemadto",{"_index":637,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{}}}],["configobjecttype",{"_index":627,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configservice",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/BackendsService.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('ioredis.port",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1704,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["connect",{"_index":1105,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connect(uri)).connection",{"_index":1113,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":1735,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["connection",{"_index":79,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/queue-processor-service.html":{}}}],["connexion",{"_index":1742,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["console",{"_index":655,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["console.log('erreur",{"_index":1333,"title":{},"body":{"injectables/PasswdService.html":{}}}],["console.log('longueur",{"_index":1305,"title":{},"body":{"injectables/PasswdService.html":{}}}],["console.log('pre",{"_index":955,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["console.log('r",{"_index":1304,"title":{},"body":{"injectables/PasswdService.html":{}}}],["console.log('reponse",{"_index":1255,"title":{},"body":{"controllers/PasswdController.html":{}}}],["console.log('return",{"_index":1307,"title":{},"body":{"injectables/PasswdService.html":{}}}],["console.log('texte",{"_index":1322,"title":{},"body":{"injectables/PasswdService.html":{}}}],["console.log(cypherdata",{"_index":1313,"title":{},"body":{"injectables/PasswdService.html":{}}}],["console.log(data",{"_index":1236,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["console.log(errors",{"_index":561,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["console.log(ret",{"_index":1248,"title":{},"body":{"controllers/PasswdController.html":{}}}],["console.log(tokendata",{"_index":1327,"title":{},"body":{"injectables/PasswdService.html":{}}}],["consolesession",{"_index":646,"title":{"classes/ConsoleSession.html":{}},"body":{"classes/ConsoleSession.html":{},"coverage.html":{}}}],["const",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/queue-processor-service.html":{}}}],["construct",{"_index":995,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["construct(validations",{"_index":1032,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["constructeur",{"_index":1731,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"injectables/BackendsService.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ManagementService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":703,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectmodel(identities.name",{"_index":971,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["constructor(_model",{"_index":958,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["constructor(config",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["constructor(configservice",{"_index":546,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/PasswdService.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["constructor(private",{"_index":338,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{}}}],["constructor(reflector",{"_index":423,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(request",{"_index":693,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["contenant",{"_index":896,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["content",{"_index":1207,"title":{},"body":{"controllers/PasswdController.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["context.getclass",{"_index":439,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context.gethandler",{"_index":440,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":132,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["continue",{"_index":1014,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["controller",{"_index":330,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/IdentitiesController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/IdentitiesController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"coverage.html":{}}}],["controller('backends",{"_index":525,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CoreController.html":{}}}],["controller('identities",{"_index":858,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["controller('management",{"_index":1056,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('passwd",{"_index":1230,"title":{},"body":{"controllers/PasswdController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":332,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["conçue",{"_index":1701,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["core",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":673,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":661,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/core.module",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["corecontroller",{"_index":658,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["coremodule",{"_index":350,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":660,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"coverage.html":{},"overview.html":{}}}],["correspondant",{"_index":891,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["count",{"_index":155,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{}}}],["count(filter",{"_index":165,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["counter",{"_index":487,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["coverage",{"_index":1368,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpwd",{"_index":1201,"title":{},"body":{"controllers/PasswdController.html":{}}}],["cpwd.uid",{"_index":1238,"title":{},"body":{"controllers/PasswdController.html":{}}}],["create",{"_index":156,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["create(data",{"_index":174,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["create(res",{"_index":798,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["create.decorator",{"_index":836,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["create.decorator.ts",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":282,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":278,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":275,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createmockmodel",{"_index":1416,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmockmodel(model",{"_index":1490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createschema",{"_index":978,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["createschema(attributes",{"_index":981,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["credentials",{"_index":1523,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":1280,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.createcipheriv('aes",{"_index":1286,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.createdecipheriv('aes",{"_index":1315,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.randombytes(12).tostring('base64",{"_index":1283,"title":{},"body":{"injectables/PasswdService.html":{}}}],["crypto.randombytes(16).tostring('hex",{"_index":1284,"title":{},"body":{"injectables/PasswdService.html":{}}}],["créant",{"_index":1738,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["ctx",{"_index":1138,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getrequest",{"_index":1140,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":1141,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["current",{"_index":496,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["customfields",{"_index":683,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["customfieldsdto",{"_index":680,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/CustomFieldsDto.html":{},"coverage.html":{}}}],["cypherdata",{"_index":1311,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cypherdata.iv",{"_index":1317,"title":{},"body":{"injectables/PasswdService.html":{}}}],["cypherdata.k",{"_index":1316,"title":{},"body":{"injectables/PasswdService.html":{}}}],["d'attente",{"_index":1710,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["d'authentification",{"_index":1530,"title":{},"body":{"index.html":{}}}],["d'ensemble",{"_index":1696,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["d'environnements",{"_index":1520,"title":{},"body":{"index.html":{}}}],["daemon",{"_index":530,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/demon.html":{}}}],["daemon'})@apiresponse({status",{"_index":515,"title":{},"body":{"controllers/BackendsController.html":{}}}],["dans",{"_index":900,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["data",{"_index":177,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{}}}],["data.attributes",{"_index":1000,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.data.status",{"_index":1240,"title":{},"body":{"controllers/PasswdController.html":{}}}],["data.data.uid",{"_index":1237,"title":{},"body":{"controllers/PasswdController.html":{}}}],["data.newpassword",{"_index":1331,"title":{},"body":{"injectables/PasswdService.html":{}}}],["data.objectclasses",{"_index":999,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["datastruct",{"_index":1289,"title":{},"body":{"injectables/PasswdService.html":{}}}],["date",{"_index":279,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["de",{"_index":713,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["debug",{"_index":710,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_errors",{"_index":723,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":1143,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["decipher",{"_index":1314,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":1318,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decipher.update(token",{"_index":1320,"title":{},"body":{"injectables/PasswdService.html":{}}}],["declarations",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["decorators",{"_index":92,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypttoken",{"_index":1270,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decrypttoken(token",{"_index":1276,"title":{},"body":{"injectables/PasswdService.html":{}}}],["deepobject",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":319,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"miscellaneous/variables.html":{}}}],["default_increment",{"_index":1413,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":479,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaut",{"_index":1532,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["delete",{"_index":157,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{}}}],["delete(':_id([0",{"_index":812,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["delete(_id",{"_index":178,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["deleted",{"_index":306,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":610,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["delident",{"_index":582,"title":{},"body":{"classes/ChangePasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["demon",{"_index":1688,"title":{"additional-documentation/demon.html":{}},"body":{}}],["dependencies",{"_index":342,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":897,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["desc",{"_index":622,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["description",{"_index":405,"title":{},"body":{"classes/AskTokenDto.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/queue-processor-service.html":{}}}],["deux",{"_index":887,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["development",{"_index":1518,"title":{},"body":{"index.html":{}}}],["diff",{"_index":996,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":1004,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["directconnection",{"_index":608,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["displayname",{"_index":649,"title":{},"body":{"classes/ConsoleSession.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["doc",{"_index":1692,"title":{},"body":{"additional-documentation/demon.html":{}}}],["document",{"_index":86,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/MetadataPart.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["document.constructor.modelname",{"_index":480,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["document.save(options",{"_index":283,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["documentation",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["doivent",{"_index":1747,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["done",{"_index":763,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["done(new",{"_index":769,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["done(null",{"_index":766,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["dto/ask",{"_index":1226,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["dto/change",{"_index":1224,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["dto/reset",{"_index":1229,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["dto/verify",{"_index":1228,"title":{},"body":{"controllers/PasswdController.html":{}}}],["dtovalidationpipe",{"_index":688,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["du",{"_index":1512,"title":{},"body":{"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["duplicatedcode",{"_index":233,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["dynamicmodule",{"_index":670,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["dépendances",{"_index":1718,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["dérivées",{"_index":1746,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["each",{"_index":638,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["efficient",{"_index":1507,"title":{},"body":{"index.html":{}}}],["elle",{"_index":1712,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["emitter",{"_index":125,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"dependencies.html":{}}}],["emitter.constant",{"_index":210,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["emitter.constant.ts",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":1716,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["enable",{"_index":310,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["enabled",{"_index":592,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":706,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["end",{"_index":947,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["entite",{"_index":921,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["entityid",{"_index":650,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["enum",{"_index":577,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1463,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1135,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors",{"_index":1152,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[0",{"_index":1030,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["err.errors[key].message",{"_index":1158,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":1153,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":1157,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":1155,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":1160,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["erreur",{"_index":712,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error",{"_index":698,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{}}}],["error'})@apibearerauth()@useguards(undefined",{"_index":1199,"title":{},"body":{"controllers/PasswdController.html":{}}}],["error('request",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error.casterror",{"_index":1128,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":733,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":731,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":728,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.inner.foreach((err",{"_index":1028,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["error.message",{"_index":867,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["error.property",{"_index":730,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":735,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.validationerror",{"_index":1127,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":868,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["error['target",{"_index":725,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":732,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":737,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":734,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errors",{"_index":560,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/queue-processor-service.html":{}}}],["errors.map((error",{"_index":724,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":739,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{},"coverage.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["eslint/ban",{"_index":761,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["est",{"_index":1697,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["et",{"_index":895,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["event",{"_index":215,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["eventemitter",{"_index":107,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["eventemitter2",{"_index":114,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["eventemitterseparator",{"_index":208,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":413,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["example(params",{"_index":1761,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["examplequeueservice",{"_index":1760,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["exception",{"_index":1131,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.constructor.name",{"_index":1151,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception['message",{"_index":1149,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exceptionfactory",{"_index":707,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":1124,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exec",{"_index":301,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["executed",{"_index":509,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executioncontext",{"_index":427,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["existe",{"_index":1528,"title":{},"body":{"index.html":{}}}],["existssync",{"_index":990,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":1016,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":1146,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explode",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["exports",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["express",{"_index":123,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["express.user",{"_index":130,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["extended",{"_index":1345,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["extends",{"_index":85,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataPart.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["f]{24",{"_index":874,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["f]{24})')@apiparam({name",{"_index":808,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["fa",{"_index":807,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["facsimiletelephonenumber",{"_index":1543,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":768,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":939,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["false",{"_index":326,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataPart.html":{},"injectables/PasswdService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["false})@isoptional",{"_index":1575,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["fatal,error,warn,info,debug",{"_index":1537,"title":{},"body":{"index.html":{}}}],["field",{"_index":459,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fieldname",{"_index":1494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fields.dto.ts",{"_index":682,"title":{},"body":{"classes/CustomFieldsDto.html":{},"coverage.html":{}}}],["fields.dto.ts:8",{"_index":685,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["filerawbodyinterceptor",{"_index":1400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filerawbodyinterceptor(fieldname",{"_index":1492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":1709,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["filter",{"_index":171,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["filter.dto.ts",{"_index":1179,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:1",{"_index":1180,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":819,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filterquery",{"_index":166,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["filters",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterschema",{"_index":817,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["find",{"_index":158,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["find(filter",{"_index":181,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findandcount",{"_index":159,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findandcount(filter",{"_index":185,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findbyid",{"_index":160,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findbyid(_id",{"_index":187,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["findbyid(id",{"_index":1356,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidandupdate",{"_index":294,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findone",{"_index":161,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findone(filter",{"_index":189,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["fonctionnalités",{"_index":1714,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["found",{"_index":1018,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["found.dto.ts",{"_index":1163,"title":{},"body":{"classes/NotFoundDto.html":{},"coverage.html":{}}}],["found.dto.ts:6",{"_index":1165,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":1164,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["fournir",{"_index":1703,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["framework",{"_index":1505,"title":{},"body":{"index.html":{}}}],["fs",{"_index":992,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["function",{"_index":490,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/IdentitiesModule.html":{},"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1479,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gcm",{"_index":1288,"title":{},"body":{"injectables/PasswdService.html":{}}}],["generate",{"_index":491,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["gestion",{"_index":1715,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["get(':_id([0",{"_index":805,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["get('alive",{"_index":537,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('alive')@apioperation({summary",{"_index":504,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('list",{"_index":528,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('list')@apioperation({summary",{"_index":514,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":820,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["gethello",{"_index":334,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmodel",{"_index":199,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{}}}],["getmodel(name",{"_index":1098,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodulename",{"_index":119,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getrequest",{"_index":117,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath(errorschemadto",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(notfounddto",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedresponsedto",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getservicename",{"_index":121,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getting",{"_index":1501,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1189,"title":{},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{}}}],["gettoken(asktoken",{"_index":1202,"title":{},"body":{"controllers/PasswdController.html":{}}}],["getvalidationerrors",{"_index":1125,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":1133,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidator",{"_index":979,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["getvalidator(type",{"_index":983,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["givenname",{"_index":1544,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["gérer",{"_index":1728,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["header",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{},"injectables/HeaderApiKeyStrategy.html":{},"coverage.html":{}}}],["headerapikey",{"_index":758,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{},"dependencies.html":{}}}],["headerapikeystrategy",{"_index":446,"title":{"injectables/HeaderApiKeyStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/HeaderApiKeyStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["hello",{"_index":396,"title":{},"body":{"injectables/AppService.html":{}}}],["hook",{"_index":938,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["host",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"index.html":{}}}],["host.switchtohttp",{"_index":1139,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["httpexception",{"_index":1136,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["httpexception.createbody",{"_index":1147,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["httpstatus",{"_index":700,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.bad_request",{"_index":727,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":864,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.not_acceptable",{"_index":1148,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":1166,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":873,"title":{},"body":{"controllers/IdentitiesController.html":{},"classes/PaginatedResponseDto.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":488,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["identifier",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["identities",{"_index":770,"title":{"classes/Identities.html":{}},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{}}}],["identities.controller",{"_index":931,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.name",{"_index":935,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.service",{"_index":831,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["identities.validation.service",{"_index":976,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities/identities.module",{"_index":1065,"title":{},"body":{"modules/ManagementModule.html":{}}}],["identitiescontroller",{"_index":793,"title":{"controllers/IdentitiesController.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"coverage.html":{}}}],["identitiescontroller.projection",{"_index":870,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identitiescreatedto",{"_index":800,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{}}}],["identitiescreatedto:13",{"_index":926,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:18",{"_index":925,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:23",{"_index":924,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:42",{"_index":923,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiesdocument",{"_index":787,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdto",{"_index":802,"title":{"classes/IdentitiesDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitiesdtostub",{"_index":1429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitiesmodule",{"_index":927,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesschema",{"_index":791,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identitiesservice",{"_index":830,"title":{"injectables/IdentitiesService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{},"overview.html":{}}}],["identitiesupdatedto",{"_index":822,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{}}}],["identitiesvalidationmodule",{"_index":932,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesvalidationservice",{"_index":854,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["identitycounter",{"_index":489,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":483,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitylifecycle",{"_index":778,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["identitylifecycle.inactive",{"_index":790,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["identitystate",{"_index":780,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["identitystate.to_complete",{"_index":951,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identitystate.to_create",{"_index":950,"title":{},"body":{"modules/IdentitiesModule.html":{},"miscellaneous/variables.html":{}}}],["identitystate.to_synced",{"_index":956,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identitystate.unknown",{"_index":789,"title":{},"body":{"classes/Identities.html":{}}}],["idschema",{"_index":1414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":211,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["implémenter",{"_index":1748,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["implémentez",{"_index":1757,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["import(plugin.package).then((plugin",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["imported",{"_index":1470,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imports",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}}}],["inactive",{"_index":1475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includeresultmetadata",{"_index":300,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["increment",{"_index":466,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface.ts",{"_index":458,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["increment.logger.ts",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["increment.plugin.ts",{"_index":1409,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["incrementby",{"_index":460,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthGuard.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{}}}],["inetorgperson",{"_index":327,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersoncreatedto",{"_index":1420,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:11",{"_index":1603,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:15",{"_index":1606,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:20",{"_index":1595,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:25",{"_index":1596,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:30",{"_index":1597,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:35",{"_index":1598,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:40",{"_index":1599,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:46",{"_index":1600,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:51",{"_index":1601,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:56",{"_index":1602,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:61",{"_index":1604,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:66",{"_index":1605,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:7",{"_index":1594,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:71",{"_index":1607,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:76",{"_index":1608,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":904,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersondtostub",{"_index":1427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersonschema",{"_index":776,"title":{},"body":{"classes/Identities.html":{},"coverage.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersonupdatedto",{"_index":1422,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inherited",{"_index":194,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/BackendsService.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"injectables/PasswdService.html":{},"classes/inetOrgPersonDto.html":{}}}],["initialise",{"_index":1737,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["inject",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":101,"title":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"additional-documentation/queue-processor-service.html":{}}}],["injectables",{"_index":103,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"overview.html":{}}}],["injectmodel",{"_index":969,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["injectredis",{"_index":554,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["installation",{"_index":1515,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1517,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1724,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["instanceof",{"_index":1026,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":1740,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["interagir",{"_index":1721,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"overview.html":{}}}],["interfaces/service.schema.interface",{"_index":207,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["intègre",{"_index":1713,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["invalid",{"_index":1264,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["ioredis",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"dependencies.html":{},"additional-documentation/queue-processor-service.html":{}}}],["ip",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["isboolean",{"_index":625,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isdate",{"_index":1087,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":1081,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["isemail",{"_index":1592,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({required",{"_index":1580,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isenum",{"_index":632,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isenum(configobjecttype",{"_index":635,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(identitylifecycle",{"_index":916,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isenum(identitystate",{"_index":915,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isglobal",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["isnullorundefined",{"_index":1411,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnullorundefined(val",{"_index":1488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnumber",{"_index":912,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isnumber()@isenum(identitylifecycle)@apiproperty({enum",{"_index":907,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":909,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject",{"_index":686,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":684,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":1071,"title":{},"body":{"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":905,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isoptional",{"_index":687,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":1582,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":884,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":410,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/MetadataPartDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":1572,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":403,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["isstring()@apiproperty({required",{"_index":1574,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":628,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":1083,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["isunprotected",{"_index":437,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["item",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":888,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["iv",{"_index":1282,"title":{},"body":{"injectables/PasswdService.html":{}}}],["job",{"_index":556,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":562,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["json.parse(plaintext",{"_index":1324,"title":{},"body":{"injectables/PasswdService.html":{}}}],["json.parse(result",{"_index":1312,"title":{},"body":{"injectables/PasswdService.html":{}}}],["json.stringify",{"_index":1298,"title":{},"body":{"injectables/PasswdService.html":{}}}],["json.stringify(loginfos)].join",{"_index":271,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":217,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(validations",{"_index":718,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunresolvedreference",{"_index":719,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["k",{"_index":1299,"title":{},"body":{"injectables/PasswdService.html":{}}}],["keep",{"_index":485,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/BackendsController.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{}}}],["key.strategy",{"_index":454,"title":{},"body":{"modules/AuthModule.html":{}}}],["key.strategy.ts",{"_index":749,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{},"coverage.html":{}}}],["key.strategy.ts:11",{"_index":753,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["key.strategy.ts:16",{"_index":755,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["key}.yml",{"_index":1017,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ko",{"_index":1251,"title":{},"body":{"controllers/PasswdController.html":{}}}],["ko'})@apibearerauth()@useguards(undefined",{"_index":1215,"title":{},"body":{"controllers/PasswdController.html":{}}}],["kradihsoy/lt",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["l'application",{"_index":1733,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["l'instance",{"_index":1741,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["la",{"_index":1540,"title":{},"body":{"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["labeleduri",{"_index":1545,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["lastupdatedat",{"_index":281,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":280,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["le",{"_index":901,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["legend",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["les",{"_index":1706,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["level",{"_index":1536,"title":{},"body":{"index.html":{}}}],["license",{"_index":1620,"title":{},"body":{"properties.html":{}}}],["lifecycle",{"_index":773,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":1338,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{}}}],["list",{"_index":501,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["list(@res",{"_index":533,"title":{},"body":{"controllers/BackendsController.html":{}}}],["list(res",{"_index":513,"title":{},"body":{"controllers/BackendsController.html":{}}}],["literal",{"_index":315,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["liés",{"_index":1730,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["load",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost",{"_index":597,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["localoptions",{"_index":1493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["log",{"_index":1535,"title":{},"body":{"index.html":{}}}],["log.levels",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log.setlevel",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log_level=info",{"_index":1538,"title":{},"body":{"index.html":{}}}],["logger",{"_index":10,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger(backendscontroller.name",{"_index":527,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(headerapikeystrategy.name",{"_index":754,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["logger(passwdcontroller.name",{"_index":1231,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":133,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.debug",{"_index":717,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(exception['message",{"_index":1142,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["logger.error(`additionalfields",{"_index":948,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["logger.log(`additionalfields",{"_index":944,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["loginfos",{"_index":264,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["logique",{"_index":1749,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["loglevel",{"_index":586,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loglevels",{"_index":1407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["léments",{"_index":1758,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["mail",{"_index":401,"title":{},"body":{"classes/AskTokenDto.html":{},"injectables/PasswdService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1053,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":1063,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":1055,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/management.module",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["managementcontroller",{"_index":1051,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"coverage.html":{}}}],["managementmodule",{"_index":351,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":1054,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/demon.html":{},"additional-documentation/queue-processor-service.html":{}}}],["maxretriesperrequest",{"_index":605,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["memory",{"_index":1103,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["message",{"_index":711,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"interfaces/ValidationRecursive.html":{}}}],["meta_unprotected",{"_index":434,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":88,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["metadata.lastupdatedat",{"_index":298,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedby",{"_index":297,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadatadto",{"_index":1068,"title":{"classes/MetadataDto.html":{}},"body":{"classes/MetadataDto.html":{},"coverage.html":{}}}],["metadatapart",{"_index":91,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{},"coverage.html":{}}}],["metadatapartdto",{"_index":1070,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"coverage.html":{}}}],["metadatapartschema",{"_index":94,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":153,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["miscellaneous",{"_index":1462,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1008,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["missingatribute",{"_index":1003,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["missingatribute.length",{"_index":1005,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["mixedvalue",{"_index":323,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/CustomFieldsDto.html":{},"controllers/IdentitiesController.html":{},"miscellaneous/typealiases.html":{}}}],["mobile",{"_index":1546,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":163,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modelname",{"_index":471,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":478,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modifyresult",{"_index":203,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["module",{"_index":138,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulename",{"_index":109,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["modules",{"_index":341,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/ioredis",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"dependencies.html":{}}}],["monemail@mondomaine.com",{"_index":404,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongoconnection",{"_index":1090,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongod",{"_index":1091,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongodb",{"_index":1102,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongodb://localhost:27017/backend",{"_index":607,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":1088,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"coverage.html":{}}}],["mongomemoryserver",{"_index":1095,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongomemoryserver.create",{"_index":1107,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":99,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"dependencies.html":{}}}],["mongoose.plugin(plugin.default",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":934,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleoptions",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":362,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["mongoosevalidationfilter",{"_index":1121,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"classes/MongooseValidationFilter.html":{},"coverage.html":{}}}],["much",{"_index":468,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multiple",{"_index":477,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["mynewpassword",{"_index":570,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":573,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mysecret",{"_index":614,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["méthodes",{"_index":1743,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["n",{"_index":1527,"title":{},"body":{"index.html":{}}}],["n'implémente",{"_index":1745,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name_queue=backend",{"_index":1541,"title":{},"body":{"index.html":{}}}],["namequeue",{"_index":587,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/queue-processor-service.html":{}}}],["nestexpressapplication",{"_index":1499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs",{"_index":127,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"dependencies.html":{},"additional-documentation/queue-processor-service.html":{}}}],["nestjs/bullmq",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/queue-processor-service.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"injectables/HeaderApiKeyStrategy.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"dependencies.html":{},"additional-documentation/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AuthGuard.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/ManagementModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":124,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":97,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":432,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/PasswdController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AskTokenDto.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/queue-processor-service.html":{}}}],["newpassword",{"_index":568,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{}}}],["next",{"_index":494,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"modules/IdentitiesModule.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{}}}],["node.js",{"_index":1504,"title":{},"body":{"index.html":{}}}],["noinspection",{"_index":232,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":1539,"title":{},"body":{"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["notfounddto",{"_index":1161,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":201,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["notfoundoptions",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nouvelles",{"_index":1739,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["null",{"_index":134,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nécessitent",{"_index":1755,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["object",{"_index":240,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(attributes",{"_index":1002,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(data).length",{"_index":1306,"title":{},"body":{"injectables/PasswdService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":1154,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(tokendata).length",{"_index":1328,"title":{},"body":{"injectables/PasswdService.html":{}}}],["object.keys(validations).join",{"_index":715,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values",{"_index":265,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":736,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["objectclasses",{"_index":314,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["objectclasses.includes(key",{"_index":1010,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":1013,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":1175,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":847,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"coverage.html":{}}}],["observable",{"_index":430,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["official",{"_index":1472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":516,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["ok'})@apiresponse({status",{"_index":1214,"title":{},"body":{"controllers/PasswdController.html":{}}}],["old",{"_index":574,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/PasswdController.html":{}}}],["oldpassword",{"_index":569,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["on_error",{"_index":1478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/functions.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["options",{"_index":167,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options).exec",{"_index":221,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["options.limit",{"_index":1344,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["orchestrator",{"_index":1511,"title":{},"body":{"index.html":{}}}],["out",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["overridemethods",{"_index":609,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["overview",{"_index":1613,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":470,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":461,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":469,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":474,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["package",{"_index":591,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["page",{"_index":1687,"title":{"additional-documentation/demon.html":{},"additional-documentation/queue-processor-service.html":{}},"body":{}}],["paginated",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginated.decorator",{"_index":840,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["paginated.decorator.ts",{"_index":1391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginatedfilterdto",{"_index":1177,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"classes/PaginatedFilterDto.html":{},"coverage.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["pair",{"_index":898,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["par",{"_index":1531,"title":{},"body":{"index.html":{}}}],["param",{"_index":826,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["param('_id",{"_index":876,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1763,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["paramètres",{"_index":1732,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["parse",{"_index":988,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(path",{"_index":1019,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseint(process.env.redis_port",{"_index":598,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parser",{"_index":1341,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["partialprojectiontype",{"_index":850,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":911,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":922,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":1593,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["parts/metadata.part.dto",{"_index":1073,"title":{},"body":{"classes/MetadataDto.html":{}}}],["pas",{"_index":1529,"title":{},"body":{"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["passport",{"_index":757,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":750,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["passwd",{"_index":1188,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["passwd.controller",{"_index":1268,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":1223,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwd/passwd.module",{"_index":1064,"title":{},"body":{"modules/ManagementModule.html":{}}}],["passwdcontroller",{"_index":1186,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"coverage.html":{}}}],["passwdmodule",{"_index":1060,"title":{"modules/PasswdModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":1222,"title":{"injectables/PasswdService.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"coverage.html":{},"overview.html":{}}}],["password",{"_index":571,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{}}}],["password'})@apiresponse({status",{"_index":1193,"title":{},"body":{"controllers/PasswdController.html":{}}}],["password.dto",{"_index":1225,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["password.dto.ts",{"_index":567,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["password.dto.ts:10",{"_index":1349,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:14",{"_index":576,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:18",{"_index":575,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:22",{"_index":572,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["patch",{"_index":827,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["patch(':_id([0",{"_index":823,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["path",{"_index":595,"title":{},"body":{"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"interfaces/MongoosePlugin.html":{}}}],["paul.bismuth",{"_index":408,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{}}}],["persistauthorization",{"_index":619,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["pickprojectionhelper",{"_index":844,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pickprojectionhelper(classref",{"_index":1495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pipetransform",{"_index":1172,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["plaintext",{"_index":1319,"title":{},"body":{"injectables/PasswdService.html":{}}}],["plugin",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin.default",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin.options",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":594,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["port",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{}}}],["post",{"_index":828,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{}}}],["post('change",{"_index":1232,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":1192,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('gettoken",{"_index":1243,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('gettoken')@apioperation({summary",{"_index":1203,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset",{"_index":1257,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":1213,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('verifytoken",{"_index":1250,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('verifytoken')@apioperation({summary",{"_index":1219,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":801,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["postaladdress",{"_index":1547,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["pour",{"_index":1702,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["pre",{"_index":937,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["preferredlanguage",{"_index":1548,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["private",{"_index":105,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/BackendsController.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{}}}],["process.env.api_key",{"_index":764,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["process.env.node_env",{"_index":720,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env.redis_host",{"_index":596,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env.redis_password",{"_index":601,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env.redis_user",{"_index":600,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['log_level",{"_index":611,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['mongo_uri",{"_index":606,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['name_queue",{"_index":612,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['redis_uri",{"_index":602,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['secret",{"_index":613,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['swagger_api",{"_index":616,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['swagger_path",{"_index":615,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processor",{"_index":1693,"title":{"additional-documentation/queue-processor-service.html":{}},"body":{}}],["production",{"_index":721,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["progressive",{"_index":1503,"title":{},"body":{"index.html":{}}}],["projection",{"_index":182,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["projection.helper",{"_index":846,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["projection.helper.ts",{"_index":1396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projection.type",{"_index":852,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["projection.type.ts",{"_index":1629,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":183,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["projet",{"_index":1513,"title":{},"body":{"index.html":{}}}],["promise",{"_index":173,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["promise.reject",{"_index":1031,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["promise.resolve(construct(validations",{"_index":1033,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["prop",{"_index":96,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"classes/MetadataPart.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":1554,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["prop({type",{"_index":93,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"classes/MetadataPart.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":472,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongooseValidationFilter.html":{}}}],["propriétés",{"_index":1723,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/queue-processor-service.html":{}}}],["providers",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}],["provisional",{"_index":1474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthGuard.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/queue-processor-service.html":{}}}],["query",{"_index":204,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["queryoptions",{"_index":168,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["queue",{"_index":66,"title":{"additional-documentation/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["queue(this.config.get('namequeue",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/queue-processor-service.html":{}}}],["queueevents",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":1694,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["qui",{"_index":1754,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["radash",{"_index":997,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["raw",{"_index":1398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rawbodybuffer",{"_index":1401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rawbodybuffer(options",{"_index":1342,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/functions.html":{}}}],["rawbodybufferoptions",{"_index":1334,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rawresult",{"_index":286,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["read",{"_index":795,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["read(_id",{"_index":804,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["readfilesync",{"_index":991,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readonly",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AppController.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/queue-processor-service.html":{}}}],["received",{"_index":1362,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["record",{"_index":593,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{}}}],["redis",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"index.html":{},"additional-documentation/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":603,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redis_host=redis",{"_index":1521,"title":{},"body":{"index.html":{}}}],["redis_password=xx",{"_index":1534,"title":{},"body":{"index.html":{}}}],["redis_port=6379",{"_index":1522,"title":{},"body":{"index.html":{}}}],["redis_user=monuser",{"_index":1533,"title":{},"body":{"index.html":{}}}],["redismodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["redismodule.forrootasync",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["redisoptions",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ref",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":677,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reflector",{"_index":424,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["register",{"_index":668,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reject",{"_index":1009,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["remove",{"_index":796,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["remove(_id",{"_index":811,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["représentant",{"_index":1725,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["req",{"_index":128,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["request",{"_index":108,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["request.query['debug",{"_index":722,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["requestcontext",{"_index":126,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":135,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["required",{"_index":316,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["requis",{"_index":894,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["res",{"_index":512,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{}}}],["res.status(200).json",{"_index":1256,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(200).json(backend",{"_index":536,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(200).json(data",{"_index":1241,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(200).json(resetdata",{"_index":1263,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(200).json(ret",{"_index":1249,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(403).json(data",{"_index":1242,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":866,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["res.status(httpstatus.created).json",{"_index":863,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":872,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["reset",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"overview.html":{}}}],["reset(data",{"_index":1211,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["resetdata",{"_index":1259,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetdata.status",{"_index":1262,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reseting",{"_index":1206,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetpassworddto",{"_index":1212,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["response",{"_index":503,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{}}}],["response.decorator",{"_index":838,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["response.decorator.ts",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":1181,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":1183,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":1184,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":1185,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":1144,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["responsemodel",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responseoptions",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result",{"_index":1309,"title":{},"body":{"injectables/PasswdService.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/demon.html":{},"additional-documentation/queue-processor-service.html":{}}}],["ret",{"_index":1247,"title":{},"body":{"controllers/PasswdController.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{},"additional-documentation/queue-processor-service.html":{}}}],["returns",{"_index":172,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/functions.html":{}}}],["routermodule",{"_index":671,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["routermodule.register",{"_index":675,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["runvalidators",{"_index":299,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["rxjs",{"_index":433,"title":{},"body":{"injectables/AuthGuard.html":{},"dependencies.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":1348,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["save",{"_index":952,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["saveoptions",{"_index":175,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["scalable",{"_index":1508,"title":{},"body":{"index.html":{}}}],["schema",{"_index":321,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/functions.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["schema.dto.ts",{"_index":741,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"coverage.html":{}}}],["schema.dto.ts:12",{"_index":747,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":743,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":746,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":744,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.pre('save",{"_index":954,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["schema.pre('validate",{"_index":943,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["schemafactory",{"_index":322,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"classes/MetadataPart.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":329,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(identities",{"_index":792,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(inetorgperson",{"_index":1571,"title":{},"body":{"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":1079,"title":{},"body":{"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["schemas/abstract.schema",{"_index":202,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["schematics",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["scope",{"_index":701,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scope.request",{"_index":702,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["se",{"_index":1734,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["search",{"_index":797,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["search(res",{"_index":815,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["searchfilteroptions",{"_index":818,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["searchfilterschema",{"_index":816,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["secondary",{"_index":406,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secret",{"_index":588,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["server",{"_index":1104,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"index.html":{}}}],["serveur",{"_index":1722,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["service",{"_index":230,"title":{"additional-documentation/queue-processor-service.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["servicename",{"_index":110,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":1707,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["serviceschemainterface",{"_index":206,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["sesame",{"_index":1514,"title":{},"body":{"index.html":{},"additional-documentation/demon.html":{}}}],["session",{"_index":269,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["session.ts",{"_index":648,"title":{},"body":{"classes/ConsoleSession.html":{},"coverage.html":{}}}],["session.ts:4",{"_index":654,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":657,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["session.ts:6",{"_index":656,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["session.ts:9",{"_index":652,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["set",{"_index":295,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/IdentitiesModule.html":{}}}],["setloglevel",{"_index":1408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["showfriendlyerrorstack",{"_index":604,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["si",{"_index":1524,"title":{},"body":{"index.html":{}}}],["side",{"_index":1509,"title":{},"body":{"index.html":{}}}],["single",{"_index":476,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["skip",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sn",{"_index":1549,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["spécifique",{"_index":1750,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["src/.../additionalfields.part.schema.ts",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../addtionalfields.dto.stub.ts",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auto",{"_index":1480,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../change",{"_index":1464,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../config.object.ts",{"_index":1465,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../event",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":1482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../identities.dto.stub.ts",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.schema.ts",{"_index":1625,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.dto.stub.ts",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.part.ts",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":1466,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1485,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../metadata.part.schema.ts",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed",{"_index":1626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mock.model.ts",{"_index":1481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../partial",{"_index":1628,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../pick",{"_index":1483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../raw",{"_index":1484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../states.enum.ts",{"_index":1467,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../swagger.ts",{"_index":1486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../wrapper.type.ts",{"_index":1631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:6",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:7",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts",{"_index":151,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:113",{"_index":190,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:145",{"_index":176,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:187",{"_index":193,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:21",{"_index":164,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:242",{"_index":180,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:27",{"_index":200,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:32",{"_index":184,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:42",{"_index":169,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:48",{"_index":186,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:82",{"_index":188,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":104,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":115,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":116,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":113,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":112,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":118,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":120,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:44",{"_index":122,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":149,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":681,"title":{},"body":{"classes/CustomFieldsDto.html":{},"coverage.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":1069,"title":{},"body":{"classes/MetadataDto.html":{},"coverage.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":1072,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":1080,"title":{},"body":{"classes/MetadataPartDto.html":{},"coverage.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":1082,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":1086,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":1085,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":1084,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":1350,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:16",{"_index":1354,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:22",{"_index":1351,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":1355,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:30",{"_index":1357,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:36",{"_index":1358,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:42",{"_index":1352,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":1359,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:50",{"_index":1353,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":84,"title":{},"body":{"classes/AbstractSchema.html":{},"coverage.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":90,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":95,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":1074,"title":{},"body":{"classes/MetadataPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":1075,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":1078,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":1077,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":1076,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/constants/event",{"_index":1381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/data/console",{"_index":647,"title":{},"body":{"classes/ConsoleSession.html":{},"coverage.html":{}}}],["src/_common/decorators/api",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/decorators/public.decorator.ts",{"_index":1394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/dto/error",{"_index":740,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"coverage.html":{}}}],["src/_common/dto/not",{"_index":1162,"title":{},"body":{"classes/NotFoundDto.html":{},"coverage.html":{}}}],["src/_common/dto/paginated",{"_index":1178,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["src/_common/filters/mongoose",{"_index":1122,"title":{},"body":{"classes/MongooseValidationFilter.html":{},"coverage.html":{}}}],["src/_common/guards/auth.guard.ts",{"_index":420,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/_common/guards/auth.guard.ts:13",{"_index":428,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/guards/auth.guard.ts:8",{"_index":425,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/helpers/pick",{"_index":1395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/interceptors/file",{"_index":1397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/middlewares/raw",{"_index":1335,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/pipes/dto",{"_index":689,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["src/_common/pipes/object",{"_index":1167,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{},"coverage.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":457,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/testshelpers/mock.model.ts",{"_index":1415,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts",{"_index":1089,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"coverage.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts:19",{"_index":1101,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts:25",{"_index":1097,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts:32",{"_index":1099,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts:6",{"_index":1096,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts:7",{"_index":1094,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/testshelpers/mongo.mermory.server.ts:9",{"_index":1100,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/mixed",{"_index":1632,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":1633,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":1634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":333,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":335,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":394,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":395,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config.ts",{"_index":585,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/core/auth/auth.module.ts",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/core/auth/strategies/auth",{"_index":748,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{},"coverage.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":498,"title":{},"body":{"controllers/BackendsController.html":{},"coverage.html":{}}}],["src/core/backends/backends.controller.ts:24",{"_index":517,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:33",{"_index":511,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":543,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/backends/backends.service.ts",{"_index":545,"title":{},"body":{"injectables/BackendsService.html":{},"coverage.html":{}}}],["src/core/backends/backends.service.ts:15",{"_index":550,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:22",{"_index":548,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:8",{"_index":547,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/core.controller.ts",{"_index":659,"title":{},"body":{"controllers/CoreController.html":{},"coverage.html":{}}}],["src/core/core.module.ts",{"_index":666,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:14",{"_index":669,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":678,"title":{},"body":{"injectables/CoreService.html":{},"coverage.html":{}}}],["src/core/core.service.ts:4",{"_index":679,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/main.ts",{"_index":1418,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":1364,"title":{},"body":{"classes/additionalFieldsPartDto.html":{},"coverage.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:10",{"_index":1367,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:16",{"_index":1366,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":1419,"title":{},"body":{"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:11",{"_index":1586,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:15",{"_index":1589,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:20",{"_index":1576,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:25",{"_index":1577,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:30",{"_index":1578,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:35",{"_index":1579,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:40",{"_index":1581,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:46",{"_index":1583,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:51",{"_index":1584,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:56",{"_index":1585,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:61",{"_index":1587,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:66",{"_index":1588,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:7",{"_index":1573,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:71",{"_index":1590,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:76",{"_index":1591,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":882,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{}}}],["src/management/identities/_dto/identities.dto.ts:13",{"_index":910,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:18",{"_index":908,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:23",{"_index":906,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:42",{"_index":903,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":1469,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":1476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":312,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:10",{"_index":317,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:7",{"_index":320,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":1423,"title":{},"body":{"coverage.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:12",{"_index":1557,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:15",{"_index":1558,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:18",{"_index":1559,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:21",{"_index":1560,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:24",{"_index":1561,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:27",{"_index":1562,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:30",{"_index":1563,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:33",{"_index":1564,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:36",{"_index":1565,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:39",{"_index":1566,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:42",{"_index":1568,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:45",{"_index":1569,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:48",{"_index":1570,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:6",{"_index":1555,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:9",{"_index":1556,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":771,"title":{},"body":{"classes/Identities.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:14",{"_index":781,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:17",{"_index":779,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":777,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":775,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_stubs/_parts/addtionalfields.dto.stub.ts",{"_index":1424,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/_parts/inetorgperson.dto.stub.ts",{"_index":1426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/identities.dto.stub.ts",{"_index":1428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/identities.controller.ts",{"_index":794,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{}}}],["src/management/identities/identities.controller.ts:121",{"_index":825,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:144",{"_index":814,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:39",{"_index":803,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:71",{"_index":821,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:99",{"_index":810,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":930,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/identities.service.ts",{"_index":957,"title":{},"body":{"injectables/IdentitiesService.html":{},"coverage.html":{}}}],["src/management/identities/identities.service.ts:8",{"_index":959,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/validations/_config/${key}.yml",{"_index":1015,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":621,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"coverage.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":623,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":629,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":626,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:22",{"_index":641,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:25",{"_index":640,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:28",{"_index":639,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:34",{"_index":645,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":644,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":624,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":1468,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":975,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":977,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"coverage.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:10",{"_index":980,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:13",{"_index":987,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:65",{"_index":984,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:98",{"_index":982,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":1052,"title":{},"body":{"controllers/ManagementController.html":{},"coverage.html":{}}}],["src/management/management.module.ts",{"_index":1061,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:14",{"_index":1062,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":1066,"title":{},"body":{"injectables/ManagementService.html":{},"coverage.html":{}}}],["src/management/management.service.ts:4",{"_index":1067,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/dto/ask",{"_index":399,"title":{},"body":{"classes/AskTokenDto.html":{},"coverage.html":{}}}],["src/management/passwd/dto/change",{"_index":566,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/passwd/dto/reset",{"_index":1347,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/management/passwd/dto/verify",{"_index":1361,"title":{},"body":{"classes/VerifyTokenDto.html":{},"coverage.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":1187,"title":{},"body":{"controllers/PasswdController.html":{},"coverage.html":{}}}],["src/management/passwd/passwd.controller.ts:33",{"_index":1200,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:57",{"_index":1209,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:73",{"_index":1221,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:93",{"_index":1216,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":1267,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":1269,"title":{},"body":{"injectables/PasswdService.html":{},"coverage.html":{}}}],["src/management/passwd/passwd.service.ts:11",{"_index":1271,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:18",{"_index":1275,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:25",{"_index":1273,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:39",{"_index":1279,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:51",{"_index":1277,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:68",{"_index":1278,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/swagger.ts",{"_index":1430,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":482,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/IdentitiesModule.html":{},"classes/MongoDbTestInstance.html":{}}}],["start:devvariables",{"_index":1519,"title":{},"body":{"index.html":{}}}],["startat",{"_index":462,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["started",{"_index":1502,"title":{"index.html":{}},"body":{}}],["state",{"_index":774,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":667,"title":{},"body":{"modules/CoreModule.html":{},"controllers/IdentitiesController.html":{},"modules/ManagementModule.html":{}}}],["status",{"_index":531,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["statuscode",{"_index":726,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":1093,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["strategies/auth",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":751,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["streamkits/nestjs_module_scrud",{"_index":853,"title":{},"body":{"controllers/IdentitiesController.html":{},"dependencies.html":{}}}],["strict",{"_index":1024,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string})@apideletedresponsedecorator(identitiesdto",{"_index":813,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":809,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":824,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["stub",{"_index":1491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["style",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":1194,"title":{},"body":{"controllers/PasswdController.html":{}}}],["summary",{"_index":529,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["supann",{"_index":917,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["supannaliaslogin",{"_index":918,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["supannempid",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supannentiteaffectationprincipale",{"_index":920,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["super",{"_index":436,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":555,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["super(context",{"_index":212,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["super.canactivate(context",{"_index":441,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":1610,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1611,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":589,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["swagger(app",{"_index":1498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["swagger/json",{"_index":617,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":590,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":618,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["switch",{"_index":1034,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["symbol('autoincrementidskip",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synced",{"_index":1477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":170,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/typealiases.html":{}}}],["t>>(filter",{"_index":220,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["table",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":890,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1295,"title":{},"body":{"injectables/PasswdService.html":{}}}],["tdata",{"_index":1182,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["telephonenumber",{"_index":1550,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["tendez",{"_index":1752,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["tendu",{"_index":1759,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["test",{"_index":505,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this._model",{"_index":213,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter",{"_index":223,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter).exec",{"_index":244,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find",{"_index":219,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find>(filter",{"_index":246,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyid>(_id",{"_index":256,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyidanddelete",{"_index":307,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findone>(filter",{"_index":262,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._req",{"_index":131,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.create(body",{"_index":862,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.delete(_id",{"_index":881,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.findandcount",{"_index":871,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.findbyid(_id",{"_index":877,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.update(_id",{"_index":879,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this.appservice.gethello",{"_index":339,"title":{},"body":{"controllers/AppController.html":{}}}],["this.backendsservice.alive",{"_index":539,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.list",{"_index":535,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.constructor.name",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.createschema(schema.attributes",{"_index":1022,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.decrypttoken(data.token",{"_index":1326,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.decrypttoken(token",{"_index":1303,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.eventemitter",{"_index":225,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.eventemitter?.emitasync",{"_index":227,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.getvalidationerrors(exception",{"_index":1150,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.getvalidator(attribute.type",{"_index":1047,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.inetorgperson.cn",{"_index":945,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.logger.debug(['count",{"_index":222,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['create",{"_index":270,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['delete",{"_index":304,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['find",{"_index":216,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findandcount",{"_index":224,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findbyid",{"_index":254,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findone",{"_index":260,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['update",{"_index":290,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.log('auth",{"_index":765,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["this.logger.log('call",{"_index":1239,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('gettoken",{"_index":1244,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('password",{"_index":1258,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('verify",{"_index":1252,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(resetdata",{"_index":1261,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.warn('auth",{"_index":767,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["this.modulename.tolowercase",{"_index":228,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.mongoconnection",{"_index":1112,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":1115,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":1118,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":1114,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":1120,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":1106,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":1111,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":1116,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.passwdservice.asktoken(asktoken",{"_index":1246,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.change(cpwd",{"_index":1235,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(data",{"_index":1260,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.verifytoken(token.token",{"_index":1254,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.queue",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/queue-processor-service.html":{}}}],["this.queue.add('changepwd",{"_index":1281,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.queue.add('exemple",{"_index":1762,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["this.queue.add('listbackend",{"_index":557,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queue.add('ping",{"_index":564,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queue.add('resetpwd",{"_index":1332,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.queueevents",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/queue-processor-service.html":{}}}],["this.queueevents.on('failed",{"_index":559,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/PasswdService.html":{},"additional-documentation/queue-processor-service.html":{}}}],["this.redis",{"_index":80,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/queue-processor-service.html":{}}}],["this.redis.del([token",{"_index":1323,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.exists(token",{"_index":1308,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.expire(ciphertext",{"_index":1301,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.get(token",{"_index":1310,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.redis.set(ciphertext",{"_index":1300,"title":{},"body":{"injectables/PasswdService.html":{}}}],["this.reflector.getallandoverride",{"_index":438,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.request",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request?.user?.username",{"_index":276,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.servicename.tolowercase",{"_index":229,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.state",{"_index":949,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["this.validationrecursive",{"_index":738,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(error",{"_index":709,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["throw",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"modules/IdentitiesModule.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["thrown",{"_index":942,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["title",{"_index":1551,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["tmodel",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_complete",{"_index":941,"title":{},"body":{"modules/IdentitiesModule.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":940,"title":{},"body":{"modules/IdentitiesModule.html":{},"miscellaneous/enumerations.html":{}}}],["to_synced",{"_index":953,"title":{},"body":{"modules/IdentitiesModule.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":136,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["token",{"_index":1205,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto",{"_index":1227,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["token.dto.ts",{"_index":400,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:10",{"_index":1363,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:13",{"_index":407,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.dto.ts:6",{"_index":409,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.token",{"_index":1253,"title":{},"body":{"controllers/PasswdController.html":{}}}],["tokendata",{"_index":1325,"title":{},"body":{"injectables/PasswdService.html":{}}}],["tokendata.uid",{"_index":1330,"title":{},"body":{"injectables/PasswdService.html":{}}}],["tokenstruct",{"_index":1297,"title":{},"body":{"injectables/PasswdService.html":{}}}],["total",{"_index":245,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/IdentitiesController.html":{},"classes/PaginatedResponseDto.html":{}}}],["track",{"_index":486,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":473,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":463,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":464,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["traitement",{"_index":1708,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["traiter",{"_index":1726,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["transform",{"_index":704,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(value",{"_index":1168,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["transformer",{"_index":633,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["transformoptions",{"_index":705,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["trim",{"_index":716,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["true",{"_index":287,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":643,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["try",{"_index":861,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{}}}],["ts",{"_index":1145,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AskTokenDto.html":{},"injectables/AuthGuard.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"injectables/HeaderApiKeyStrategy.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetPasswordDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1623,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":239,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["types",{"_index":98,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/ConsoleSession.html":{},"injectables/HeaderApiKeyStrategy.html":{},"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["types.objectid",{"_index":89,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/ConsoleSession.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/typealiases.html":{}}}],["types.objectid(value",{"_index":1176,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":1173,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"injectables/HeaderApiKeyStrategy.html":{},"interfaces/MongoosePlugin.html":{}}}],["uid",{"_index":402,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"injectables/PasswdService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":889,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/queue-processor-service.html":{}}}],["unauthorizedexception",{"_index":756,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined})@apiresponse({status",{"_index":1208,"title":{},"body":{"controllers/PasswdController.html":{}}}],["une",{"_index":1698,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["unique",{"_index":1567,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["unknown",{"_index":549,"title":{},"body":{"injectables/BackendsService.html":{},"classes/MongoDbTestInstance.html":{},"injectables/PasswdService.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":1621,"title":{},"body":{"properties.html":{}}}],["unprotected",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":162,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["update(_id",{"_index":191,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["update.decorator",{"_index":843,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["update.decorator.ts",{"_index":1392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["update?.$set",{"_index":296,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["updated",{"_index":293,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateident",{"_index":581,"title":{},"body":{"classes/ChangePasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["updatequery",{"_index":192,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["uri",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":467,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["used",{"_index":492,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/IdentitiesModule.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["useguards",{"_index":518,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["useguards(authguard('api",{"_index":532,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["user",{"_index":129,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["usercertificate",{"_index":1552,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":651,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["userpassword",{"_index":1553,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{}}}],["utf8",{"_index":1020,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{}}}],["utilisant",{"_index":1717,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["utilisation",{"_index":1751,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["utilisée",{"_index":1727,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["val",{"_index":1489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1012,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validate",{"_index":752,"title":{},"body":{"injectables/HeaderApiKeyStrategy.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validate(data",{"_index":986,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validatenested",{"_index":631,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested({each",{"_index":642,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["validation",{"_index":714,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/variables.html":{}}}],["validation.filter.ts",{"_index":1123,"title":{},"body":{"classes/MongooseValidationFilter.html":{},"coverage.html":{}}}],["validation.filter.ts:15",{"_index":1130,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:43",{"_index":1134,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":849,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["validation.pipe.ts",{"_index":690,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["validation.pipe.ts:13",{"_index":1171,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validation.pipe.ts:14",{"_index":1360,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:19",{"_index":694,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:56",{"_index":697,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validationerror",{"_index":696,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationpipe",{"_index":691,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":692,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["validationrecursive(error",{"_index":695,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validations",{"_index":708,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations/identities.validation.module",{"_index":933,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":855,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["validations[`${key}.${err.path",{"_index":1029,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[`${key}.${property",{"_index":1156,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":729,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":1007,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":1159,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":1011,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationservice",{"_index":936,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validationservice.validate(this.additionalfields",{"_index":946,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validator",{"_index":411,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validator.required",{"_index":1043,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["value",{"_index":465,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"injectables/HeaderApiKeyStrategy.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.type",{"_index":325,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/CustomFieldsDto.html":{},"controllers/IdentitiesController.html":{}}}],["value.type.ts",{"_index":1627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variable",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1526,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/queue-processor-service.html":{}}}],["verifytoken",{"_index":1190,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["verifytoken(token",{"_index":1217,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["verifytokendto",{"_index":1218,"title":{"classes/VerifyTokenDto.html":{}},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{},"coverage.html":{}}}],["version",{"_index":1109,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"properties.html":{}}}],["versionkey",{"_index":788,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":1132,"title":{},"body":{"classes/MongooseValidationFilter.html":{},"miscellaneous/functions.html":{}}}],["voir",{"_index":1691,"title":{},"body":{"additional-documentation/demon.html":{}}}],["vue",{"_index":1695,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["vénements",{"_index":1729,"title":{},"body":{"additional-documentation/queue-processor-service.html":{}}}],["wanting",{"_index":475,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["whitelistedheaders",{"_index":1339,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["world",{"_index":397,"title":{},"body":{"injectables/AppService.html":{}}}],["wrappertype",{"_index":1630,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wrong",{"_index":1234,"title":{},"body":{"controllers/PasswdController.html":{}}}],["wrong'})@apiresponse({status",{"_index":1197,"title":{},"body":{"controllers/PasswdController.html":{}}}],["x",{"_index":558,"title":{},"body":{"injectables/BackendsService.html":{}}}],["yaml",{"_index":989,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["yarn",{"_index":1516,"title":{},"body":{"index.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/functions.html":{}}}],["yup",{"_index":994,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["yup.anyobject",{"_index":985,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.anyschema",{"_index":1044,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.array",{"_index":1041,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.boolean",{"_index":1039,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.date",{"_index":1040,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.number",{"_index":1038,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.object",{"_index":1042,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.object().shape(schema",{"_index":1050,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.string",{"_index":1036,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup.validationerror",{"_index":1027,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema",{"_index":1021,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema.validate(attributes[key",{"_index":1023,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["zoom",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                queue\n                            \n                            \n                                    Protected\n                                    Readonly\n                                queueEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: ConfigService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { Queue, QueueEvents } from 'bullmq';\nimport Redis from 'ioredis';\n\nexport abstract class AbstractQueueProcessor {\n  protected readonly queue: Queue;\n  protected readonly queueEvents: QueueEvents;\n  public constructor(\n    protected readonly config: ConfigService,\n    protected readonly redis: Redis,\n  ) {\n    this.queue = new Queue(this.config.get('nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request)\n      throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request)\n      throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractServiceSchema.html":{"url":"injectables/AbstractServiceSchema.html","title":"injectable - AbstractServiceSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractServiceSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:145\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:242\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:113\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:187\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.schema.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AbstractSchema } from './schemas/abstract.schema';\nimport {\n  Document,\n  FilterQuery,\n  Model,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { ServiceSchemaInterface } from './interfaces/service.schema.interface';\nimport { EventEmitterSeparator } from '~/_common/constants/event-emitter.constant';\n\n@Injectable()\nexport abstract class AbstractServiceSchema extends AbstractService implements ServiceSchemaInterface {\n  protected abstract _model: Model;\n\n  protected constructor(context?: AbstractServiceContext) {\n    super(context);\n  }\n\n  public get model(): Model {\n    return this._model;\n  }\n\n  /* eslint-disable */\n  public async find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]> {\n    //TODO: add event emitter\n    this.logger.debug(['find', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.find, T, any, T>>(filter, projection, options).exec()\n  }\n\n  public async count(filter?: FilterQuery, options?: QueryOptions): Promise {\n    //TODO: add event emitter\n    this.logger.debug(['count', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.countDocuments(filter, options).exec()\n  }\n\n  public async findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]> {\n    this.logger.debug(['findAndCount', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindAndCount'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      // noinspection DuplicatedCode\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let count = await this._model.countDocuments(filter).exec()\n    let total = await this._model.find>(filter, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { total, count },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.total) total = { ...total, ...afterEvent.total }\n        if (afterEvent?.count) count += afterEvent.count\n      }\n    }\n    return [total, count]\n  }\n\n  public async findById(\n    _id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindById'].join(EventEmitterSeparator),\n        { _id, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findById>(_id, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindById'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    if (!data) throw new NotFoundException()\n    return data\n  }\n\n  public async findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindOne'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findOne>(filter, projection, options).exec()\n    if (!data) throw new NotFoundException()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindOne'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    return data\n  }\n\n  public async create(data?: any, options?: SaveOptions): Promise> {\n    const logInfos = Object.values({\n      ...arguments,\n      1: {\n        ...arguments[1],\n        session: typeof arguments[1] === 'object' && 'session' in arguments[1] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['create', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeCreate'].join(EventEmitterSeparator),\n        { data, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) data = { ...data, ...beforeEvent.data }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    const document: Document = new this._model({\n      metadata: {\n        createdBy: this.request?.user?.username || 'anonymous',\n        createdAt: new Date(),\n        lastUpdatedBy: this.request?.user?.username || 'anonymous',\n        lastUpdatedAt: new Date(),\n      },\n      ...data,\n    })\n    let created = document.save(options)\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { created },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.created) created = { ...created, ...afterEvent.created }\n      }\n    }\n    return created\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions & { rawResult: true },\n  ): Promise>> {\n    const logInfos = Object.values({\n      ...arguments,\n      2: {\n        ...arguments[2],\n        session: typeof arguments[2] === 'object' && 'session' in arguments[2] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['update', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpdate'].join(EventEmitterSeparator),\n        { _id, update, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) update = { ...update, ...beforeEvent.update }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let updated = await this._model\n      .findByIdAndUpdate>(\n        { _id },\n        {\n          ...update,\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec()\n    if (!updated) throw new NotFoundException()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { updated },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.updated) updated = { ...updated, ...afterEvent.updated }\n      }\n    }\n    return updated\n  }\n\n  public async delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise> {\n    this.logger.debug(['delete', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeDelete'].join(EventEmitterSeparator),\n        { _id, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let deleted = await this._model.findByIdAndDelete>({ _id }, options).exec()\n    if (!deleted) throw new NotFoundException()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { deleted },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.deleted) deleted = { ...deleted, ...afterEvent.deleted }\n      }\n    }\n    return deleted\n  }\n\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart {\n  @Prop({ type: Array, of: String, required: true, default: ['inetOrgPerson'] })\n  objectClasses: string[];\n\n  @Prop({ type: Object, required: true })\n  attributes: { [key: string]: MixedValue };\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        config: {\n          ...config.get('ioredis.options'),\n          url: config.get('ioredis.uri'),\n        },\n      }),\n    }),\n    CoreModule.register(),\n    ManagementModule.register(),\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mail\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/ask-token.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User  Uid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/ask-token.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nexport class AskTokenDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User  Uid' })\n  uid: string;\n\n  @IsString()\n  @ApiProperty({\n    example: 'monemail@mondomaine.com',\n    description: 'secondary mail',\n  })\n  mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('core')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardInternal(['jwt'])\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/_common/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/guards/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard as AuthGuardInternal } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport { META_UNPROTECTED } from '~/_common/decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardInternal(['jwt']) {\n  public constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  public canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const isUnprotected = this.reflector.getAllAndOverride(\n      META_UNPROTECTED,\n      [context.getClass(), context.getHandler()],\n    );\n    return isUnprotected || super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nHeaderApiKeyStrategy\n\nHeaderApiKeyStrategy\n\nAuthModule -->\n\nHeaderApiKeyStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            HeaderApiKeyStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { HeaderApiKeyStrategy } from './strategies/auth-header-api-key.strategy';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [PassportModule, ConfigModule],\n  controllers: [AuthController],\n  providers: [AuthService, HeaderApiKeyStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                alive\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        alive\n                        \n                    \n                \n            \n            \n                \n                        \n                    alive(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('alive')@ApiOperation({summary: 'test backends '})@ApiResponse({status: 200, description: 'command executed '})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiOperation({summary: 'List backends from daemon'})@ApiResponse({status: 200, description: 'List ok '})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Logger, Get, Res, UseGuards } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\n\n@Controller('backends')\n@ApiTags('core')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(private backendsService: BackendsService) {}\n\n  @Get('list')\n  @ApiOperation({ summary: 'List backends from daemon' })\n  @ApiResponse({ status: 200, description: 'List ok ' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async list(@Res() res: Response): Promise {\n    const backend = await this.backendsService.list();\n    return res.status(200).json(backend);\n  }\n  @Get('alive')\n  @ApiOperation({ summary: 'test backends ' })\n  @ApiResponse({ status: 200, description: 'command executed ' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async alive(@Res() res: Response): Promise {\n    const backend = await this.backendsService.alive();\n    return res.status(200).json(backend);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\n\nBackendsService\n\nBackendsService\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\n@Module({\n  imports: [ConfigModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n})\nexport class BackendsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendsService.html":{"url":"injectables/BackendsService.html","title":"injectable - BackendsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueProcessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                queue\n                            \n                            \n                                    Protected\n                                    Readonly\n                                queueEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alive\n                            \n                            \n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/backends.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        alive\n                        \n                    \n                \n            \n            \n                \n                        \n                    alive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:7\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\nimport { Redis } from 'ioredis';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\n\n@Injectable()\nexport class BackendsService extends AbstractQueueProcessor {\n  constructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) {\n    super(configService, redis);\n  }\n  async list() {\n    const job = await this.queue.add('LISTBACKEND', 'x');\n    this.queueEvents.on('failed', (errors) => {\n      console.log(errors);\n    });\n    return await job.waitUntilFinished(this.queueEvents, 30000);\n  }\n  async alive() {\n    const job = await this.queue.add('PING', 'x');\n    this.queueEvents.on('failed', (errors) => {\n      console.log(errors);\n    });\n    return await job.waitUntilFinished(this.queueEvents, 30000);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User  Uid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/change-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport enum ActionType {\n  CHANGEPWD = 'CHANGEPWD',\n  ADDIDENT = 'ADDIDENT',\n  UPDATEIDENT = 'UPDATEIDENT',\n  DELIDENT = 'DELIDENT',\n}\n\nexport class ChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User  Uid' })\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old Password' })\n  oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  newPassword: string;\n}\n\nexport type BackendActionType = {\n  CHANGEPWD: ChangePasswordDto;\n  ADDIDENT: any;\n  UPDATEIDENT: any;\n  DELIDENT: any;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            nameQueue\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameQueue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameQueue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n  logLevel: string;\n  nameQueue: string;\n  secret: string;\n}\n\nexport default (): ConfigInstance => ({\n  // redis: {\n  //   host: process.env.REDIS_HOST || 'localhost',\n  //   port: parseInt(process.env.REDIS_PORT) || 6379,\n  //   user: process.env.REDIS_USER || '',\n  //   password: process.env.REDIS_PASSWORD || '',\n  // },\n  ioredis: {\n    uri: process.env['REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: 1,\n    },\n  },\n  mongoose: {\n    uri: process.env['MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n      // {\n      //   package: 'mongoose-delete',\n      //   enabled: true,\n      //   options: {\n      //     overrideMethods: true,\n      //     deletedAt: true,\n      //   },\n      // },\n    ],\n  },\n  logLevel: process.env['LOG_LEVEL'] || 'info',\n  nameQueue: process.env['NAME_QUEUE'] || 'backend',\n  secret: process.env['SECRET'] || 'mySecret',\n  swagger: {\n    path: process.env['SWAGGER_PATH'] || '/swagger',\n    api: process.env['SWAGGER_API'] || '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                required\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                entityId\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        entityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Default value : new Types.ObjectId(\n    '000000000000000000000000',\n  )\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly entityId: Types.ObjectId = new Types.ObjectId(\n    '000000000000000000000000',\n  );\n  public readonly displayName: string = 'Console';\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AuthModule } from './auth/auth.module';\nimport { CoreService } from './core.service';\nimport { CoreController } from './core.controller';\nimport { BackendsModule } from './backends/backends.module';\n\n@Module({\n  imports: [AuthModule, BackendsModule],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(\n          ', ',\n        )}`.trim();\n        Logger.debug(\n          `${message} (${JSON.stringify(validations)})`,\n          'DtoValidationPipe',\n        );\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(\n    error: ValidationError,\n    prefix = '',\n  ): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(\n        error.constraints,\n      )[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] =\n            Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(\n              errorChild,\n              `${prefix + error.property}.${errorChild.property}.`,\n            ),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeaderApiKeyStrategy.html":{"url":"injectables/HeaderApiKeyStrategy.html","title":"injectable - HeaderApiKeyStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HeaderApiKeyStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/strategies/auth-header-api-key.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(\n  Strategy,\n  'api-key',\n)\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/strategies/auth-header-api-key.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HeaderApiKeyStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/strategies/auth-header-api-key.strategy.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/strategies/auth-header-api-key.strategy.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ConfigService } from '@nestjs/config';\nimport Strategy from 'passport-headerapikey';\n\n@Injectable()\nexport class HeaderApiKeyStrategy extends PassportStrategy(\n  Strategy,\n  'api-key',\n) {\n  private readonly logger = new Logger(HeaderApiKeyStrategy.name);\n  constructor(private readonly configService: ConfigService) {\n    super({ header: 'Authorization', prefix: 'Bearer ' }, false);\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  public validate = (apiKey: string, done: (error: Error, data) => {}) => {\n    if (process.env.API_KEY === apiKey) {\n      this.logger.log('Auth OK');\n      done(null, true);\n      return;\n    }\n    this.logger.warn('Auth FAILED');\n    done(new UnauthorizedException(), null);\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                additionalFields\n                            \n                            \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  lifecycle: IdentityLifecycle;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  additionalFields: AdditionalFieldsPart;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesController.html":{"url":"controllers/IdentitiesController.html","title":"controller - IdentitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { IdentitiesDto, IdentitiesCreateDto, IdentitiesUpdateDto } from './_dto/identities.dto';\nimport { IdentitiesService } from './identities.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { Identities } from './_schemas/identities.schema';\nimport { Document } from 'mongoose';\n\n@ApiTags('management')\n@Controller('identities')\nexport class IdentitiesController extends AbstractController {\n  constructor(\n    protected readonly _service: IdentitiesService,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    try {\n      const data = await this._service.create(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    try {\n      const [data, total] = await this._service.findAndCount(\n        searchFilterSchema,\n        IdentitiesController.projection,\n        searchFilterOptions,\n      );\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        total,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.findById(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.update(_id, body);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\n\nexport class IdentitiesCreateDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\n\nexport class IdentitiesCreateDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { IdentitiesSchema, Identities } from './_schemas/identities.schema';\nimport { IdentitiesService } from './identities.service';\nimport { IdentitiesController } from './identities.controller';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentityState } from './_enums/states.enum';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule],\n        inject: [IdentitiesValidationService],\n        useFactory: (validationService: IdentitiesValidationService) => {\n          const schema = IdentitiesSchema;\n          // Pre validation hook\n          // This hook is used to validate the additionalFields\n          // If the validation fails and the state is TO_CREATE, the state is set to TO_COMPLETE\n          // Else the error is thrown\n          schema.pre('validate', async function (next) {\n            try {\n              Logger.log(`additionalFields validation start for ${this.inetOrgPerson.cn}  `);\n              await validationService.validate(this.additionalFields);\n              Logger.log(`additionalFields validation end for ${this.inetOrgPerson.cn}  `);\n            } catch (error) {\n              Logger.error(`additionalFields validation error for ${this.inetOrgPerson.cn}  `, error);\n              if (this.state === IdentityState.TO_CREATE) this.state = IdentityState.TO_COMPLETE;\n              else throw error;\n            }\n            next();\n          });\n\n          // Pre save hook\n          // This hook is used to set the state to TO_SYNCED if the state is TO_CREATE\n          schema.pre('save', async function (next) {\n            console.log('pre save');\n            if (this.state === IdentityState.TO_CREATE) this.state = IdentityState.TO_SYNCED;\n            next();\n          });\n\n          return schema;\n        },\n      },\n    ]),\n  ],\n  providers: [IdentitiesService, IdentitiesValidationService],\n  controllers: [IdentitiesController],\n})\nexport class IdentitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesService.html":{"url":"injectables/IdentitiesService.html","title":"injectable - IdentitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/identities.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:42\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:145\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:242\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:32\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:82\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:113\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:187\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Identities } from './_schemas/identities.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\n\n@Injectable()\nexport class IdentitiesService extends AbstractServiceSchema {\n  constructor(@InjectModel(Identities.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\n\nexport class IdentitiesCreateDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@Module({\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchema\n                            \n                            \n                                    Private\n                                getValidator\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSchema(attributes: ConfigObjectAttributeDTO[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attributes\n                                            \n                                                            ConfigObjectAttributeDTO[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getValidator\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidator(type, required)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                required\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     yup.AnyObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync } from 'fs';\nimport { ConfigObjectAttributeDTO, ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport * as yup from 'yup';\nimport { construct, diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\n\n@Injectable()\nexport class IdentitiesValidationService {\n  constructor() {}\n\n  async validate(data: AdditionalFieldsPart): Promise {\n    const objectClasses = data.objectClasses;\n    const attributes = data.attributes;\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n\n    const missingAtribute = diff(objectClasses, attributesKeys);\n    if (missingAtribute.length > 0) {\n      for (const attribute of missingAtribute) {\n        validations[attribute] = `Missing attribute '${attribute}'`;\n      }\n    }\n\n    let reject = false;\n    for (const key of attributesKeys) {\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} is not a valid object class in this context, valid object classes are: ${objectClasses.join(', ')}'`;\n        reject = true;\n        continue;\n      }\n\n      const path = `./src/management/identities/validations/_config/${key}.yml`;\n      if (!existsSync(path)) {\n        validations[key] = `Config '${key}.yml' not found`;\n        reject = true;\n        continue;\n      }\n\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      const yupSchema = await this.createSchema(schema.attributes);\n      try {\n        const validation = await yupSchema.validate(attributes[key], { strict: true, abortEarly: false });\n        validations[key] = validation;\n      } catch (error) {\n        if (error instanceof yup.ValidationError) {\n          error.inner.forEach((err) => {\n            validations[`${key}.${err.path}`] = err.errors[0];\n          });\n          reject = true;\n        }\n      }\n    }\n    if (reject) {\n      return Promise.reject({\n        message: 'Validation failed',\n        validations: construct(validations),\n      });\n    }\n    return Promise.resolve(construct(validations));\n  }\n\n  private getValidator(type, required = false): yup.AnyObject {\n    let validator: yup.AnyObject;\n    switch (type) {\n      case 'string':\n        validator = yup.string();\n        break;\n      case 'number':\n        validator = yup.number();\n        break;\n      case 'boolean':\n        validator = yup.boolean();\n        break;\n      case 'date':\n        validator = yup.date();\n        break;\n      case 'array':\n        validator = yup.array();\n        break;\n      case 'object':\n        validator = yup.object();\n        break;\n      default:\n        validator = yup.string();\n        break;\n    }\n\n    if (required) {\n      validator = validator.required();\n    }\n\n    return validator;\n  }\n\n  async createSchema(attributes: ConfigObjectAttributeDTO[]): Promise> {\n    const schema: { [key: string]: yup.AnySchema } = attributes.reduce((acc, attribute) => {\n      acc[attribute.name] = this.getValidator(attribute.type, attribute.required);\n      return acc;\n    }, {});\n    return yup.object().shape(schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { PasswdModule } from './passwd/passwd.module';\nimport { IdentitiesModule } from './identities/identities.module';\n\n@Module({\n  imports: [PasswdModule, IdentitiesModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/testsHelpers/mongo.mermory.server.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/testsHelpers/mongo.mermory.server.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/testsHelpers/mongo.mermory.server.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/testsHelpers/mongo.mermory.server.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/testsHelpers/mongo.mermory.server.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/testsHelpers/mongo.mermory.server.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/testsHelpers/mongo.mermory.server.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n  logLevel: string;\n  nameQueue: string;\n  secret: string;\n}\n\nexport default (): ConfigInstance => ({\n  // redis: {\n  //   host: process.env.REDIS_HOST || 'localhost',\n  //   port: parseInt(process.env.REDIS_PORT) || 6379,\n  //   user: process.env.REDIS_USER || '',\n  //   password: process.env.REDIS_PASSWORD || '',\n  // },\n  ioredis: {\n    uri: process.env['REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: 1,\n    },\n  },\n  mongoose: {\n    uri: process.env['MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n      // {\n      //   package: 'mongoose-delete',\n      //   enabled: true,\n      //   options: {\n      //     overrideMethods: true,\n      //     deletedAt: true,\n      //   },\n      // },\n    ],\n  },\n  logLevel: process.env['LOG_LEVEL'] || 'info',\n  nameQueue: process.env['NAME_QUEUE'] || 'backend',\n  secret: process.env['SECRET'] || 'mySecret',\n  swagger: {\n    path: process.env['SWAGGER_PATH'] || '/swagger',\n    api: process.env['SWAGGER_API'] || '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(\n    exception: Error.ValidationError | Error.CastError | ValidationError,\n    host: ArgumentsHost,\n  ) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] =\n              err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe\n  implements PipeTransform\n{\n  public transform(\n    value: string | Types.ObjectId,\n    _metadata: ArgumentMetadata,\n  ): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                gettoken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(cpwd: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'change password'})@ApiResponse({status: 200, description: 'Password has been successfully changed.'})@ApiResponse({status: 403, description: 'Old password wrong'})@ApiResponse({status: 500, description: 'Backend error'})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpwd\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        gettoken\n                        \n                    \n                \n            \n            \n                \n                        \n                    gettoken(asktoken: AskTokenDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('gettoken')@ApiOperation({summary: 'ask token for reseting password'})@ApiResponse({status: 200, description: 'Token', content: undefined})@ApiResponse({status: 500, description: 'Backend error'})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asktoken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(data: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'reset password'})@ApiResponse({status: 200, description: 'Reset OK'})@ApiResponse({status: 500, description: 'Reset KO'})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token: VerifyTokenDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verifytoken')@ApiOperation({summary: 'ask token for reseting password'})@ApiResponse({status: 201, description: 'Token OK'})@ApiResponse({status: 500, description: 'Token KO'})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            VerifyTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Res, UseGuards, Logger } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport { VerifyTokenDto } from './dto/verify-token.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\n\n@Controller('passwd')\n@ApiTags('management')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  constructor(private passwdService: PasswdService) {}\n\n  @Post('change')\n  @ApiOperation({ summary: 'change password' })\n  @ApiResponse({\n    status: 200,\n    description: 'Password has been successfully changed.',\n  })\n  @ApiResponse({ status: 403, description: 'Old password wrong' })\n  @ApiResponse({ status: 500, description: 'Backend error' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async change(\n    @Body() cpwd: ChangePasswordDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this.passwdService.change(cpwd);\n    console.log(data);\n    data.data.uid = cpwd.uid;\n    this.logger.log('call passwd change for : ' + cpwd.uid);\n    if (data.data.status === 0) {\n      return res.status(200).json(data);\n    } else {\n      if (data.data.status === 1) {\n        return res.status(403).json(data);\n      }\n      return res.status(200).json(data);\n    }\n  }\n\n  @Post('gettoken')\n  @ApiOperation({ summary: 'ask token for reseting password' })\n  @ApiResponse({ status: 200, description: 'Token', content: {} })\n  @ApiResponse({ status: 500, description: 'Backend error' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async gettoken(\n    @Body() asktoken: AskTokenDto,\n    @Res() res: Response,\n  ): Promise {\n    this.logger.log('GetToken for : ' + asktoken.uid);\n    const data = await this.passwdService.askToken(asktoken);\n    const ret = { token: data };\n    console.log(ret);\n    return res.status(200).json(ret);\n  }\n  @Post('verifytoken')\n  @ApiOperation({ summary: 'ask token for reseting password' })\n  @ApiResponse({ status: 201, description: 'Token OK' })\n  @ApiResponse({ status: 500, description: 'Token KO' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async verifyToken(\n    @Body() token: VerifyTokenDto,\n    @Res() res: Response,\n  ): Promise {\n    this.logger.log('Verify token : ' + token.token);\n    const ok = await this.passwdService.verifyToken(token.token);\n    console.log('reponse : ' + ok);\n    if (ok === true) {\n      console.log('reponse : 200');\n      return res.status(200).json({ status: 0 });\n    } else {\n      return res.status(200).json({ status: 1 });\n    }\n  }\n  @Post('reset')\n  @ApiOperation({ summary: 'reset password' })\n  @ApiResponse({ status: 200, description: 'Reset OK' })\n  @ApiResponse({ status: 500, description: 'Reset KO' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async reset(\n    @Body() data: ResetPasswordDto,\n    @Res() res: Response,\n  ): Promise {\n    //this.logger.log('password reset : ' + data)\n    const resetData = await this.passwdService.reset(data);\n    //this.logger.log(resetData)\n    if (resetData.status === 0) {\n      return res.status(200).json(resetData);\n    } else {\n      return res.status(200).json({ status: 1, error: 'invalid token' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\n\nPasswdService\n\nPasswdService\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [PasswdController],\n  providers: [PasswdService],\n})\nexport class PasswdModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswdService.html":{"url":"injectables/PasswdService.html","title":"injectable - PasswdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueProcessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                queue\n                            \n                            \n                                    Protected\n                                    Readonly\n                                queueEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                askToken\n                            \n                            \n                                    Async\n                                change\n                            \n                            \n                                    Async\n                                decryptToken\n                            \n                            \n                                    Async\n                                reset\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/management/passwd/passwd.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        askToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    askToken(askToken: AskTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                askToken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(passwd: ChangePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwd\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decryptToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decryptToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(data: ResetPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyToken(token)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:7\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { ConfigService } from '@nestjs/config';\nimport * as crypto from 'crypto';\nimport { AskTokenDto } from './dto/ask-token.dto';\nimport Redis from 'ioredis';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n@Injectable()\nexport class PasswdService extends AbstractQueueProcessor {\n  constructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) {\n    super(configService, redis);\n  }\n  async change(passwd: ChangePasswordDto) {\n    const job = await this.queue.add('CHANGEPWD', passwd);\n    this.queueEvents.on('failed', (errors) => {\n      console.log(errors);\n    });\n    return await job.waitUntilFinished(this.queueEvents, 30000);\n  }\n  async askToken(askToken: AskTokenDto) {\n    const iv = crypto.randomBytes(12).toString('base64');\n    const key = crypto.randomBytes(16).toString('hex');\n    const cipher = crypto.createCipheriv('aes-256-gcm', key, iv);\n    const dataStruct = { uid: askToken.uid, mail: askToken.mail };\n    let ciphertext = cipher.update(JSON.stringify(dataStruct), 'utf8', 'base64');\n\n    ciphertext += cipher.final('base64');\n    const tag = cipher.getAuthTag();\n    const tokenStruct = JSON.stringify({ k: key, iv: iv, tag: tag });\n    await this.redis.set(ciphertext, tokenStruct);\n    await this.redis.expire(ciphertext, 3600);\n    return ciphertext;\n  }\n  async verifyToken(token) {\n    const data = await this.decryptToken(token);\n    console.log('r (verifyToken service) :  ');\n    console.log(data);\n    console.log('longueur' + Object.keys(data).length);\n    if (Object.keys(data).length === 0) {\n      return false;\n    } else {\n      console.log('return true');\n      return true;\n    }\n  }\n  async decryptToken(token: string) {\n    const ok = await this.redis.exists(token);\n    if (ok === 1) {\n      const result = await this.redis.get(token);\n      const cypherData = JSON.parse(result);\n      console.log(cypherData);\n      const decipher = crypto.createDecipheriv('aes-256-gcm', cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      console.log('texte : ' + plaintext);\n      //delete key\n      //this.redis.del([token])\n      return JSON.parse(plaintext);\n    } else {\n      return {};\n    }\n  }\n  async reset(data: ResetPasswordDto) {\n    const tokenData = await this.decryptToken(data.token);\n    console.log(tokenData);\n    if (Object.keys(tokenData).length === 0) {\n      return { status: 1, error: 'invalid token' };\n    }\n    const backendData = { uid: tokenData.uid, newPassword: data.newPassword };\n    const job = await this.queue.add('RESETPWD', backendData);\n    this.queueEvents.on('failed', (errors) => {\n      console.log('Erreur queue');\n      console.log(errors);\n    });\n    return await job.waitUntilFinished(this.queueEvents, 30000);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [\n    bodyParser.urlencoded({ limit: options.limit, extended: true }),\n    bodyParser.json({ limit: options.limit }),\n  ];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/reset-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example:\n      'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  token: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:22\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:16\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: QueryOptions | null | undefined): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:14\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(\n          ', ',\n        )}`.trim();\n        Logger.debug(\n          `${message} (${JSON.stringify(validations)})`,\n          'DtoValidationPipe',\n        );\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(\n    error: ValidationError,\n    prefix = '',\n  ): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(\n        error.constraints,\n      )[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] =\n            Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(\n              errorChild,\n              `${prefix + error.property}.${errorChild.property}.`,\n            ),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nexport class VerifyTokenDto {\n  @IsString()\n  @ApiProperty({\n    example:\n      'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'attributes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  objectClasses: string[];\n\n  @ApiProperty({\n    type: 'object',\n    name: 'attributes',\n  })\n  attributes: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/_common/abstracts/abstract.controller.ts\n            \n            class\n            AbstractController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.controller.ts\n            \n            interface\n            AbstractControllerContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.queue.processor.ts\n            \n            class\n            AbstractQueueProcessor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.service.schema.ts\n            \n            injectable\n            AbstractServiceSchema\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.service.ts\n            \n            injectable\n            AbstractService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.service.ts\n            \n            interface\n            AbstractServiceContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/abstracts/dto/custom-fields.dto.ts\n            \n            class\n            CustomFieldsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/abstracts/dto/metadata.dto.ts\n            \n            class\n            MetadataDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/abstracts/dto/parts/metadata.part.dto.ts\n            \n            class\n            MetadataPartDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/abstracts/interfaces/service.schema.interface.ts\n            \n            interface\n            ServiceSchemaInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/_common/abstracts/schemas/abstract.schema.ts\n            \n            class\n            AbstractSchema\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n            \n            class\n            MetadataPart\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n            \n            variable\n            MetadataPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/constants/event-emitter.constant.ts\n            \n            variable\n            EventEmitterSeparator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/data/console-session.ts\n            \n            class\n            ConsoleSession\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-body.decorator.ts\n            \n            variable\n            ApiBodyDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-create.decorator.ts\n            \n            variable\n            ApiCreateDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-created-response.decorator.ts\n            \n            variable\n            ApiCreatedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-deleted-response.decorator.ts\n            \n            variable\n            ApiDeletedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-paginated.decorator.ts\n            \n            variable\n            ApiPaginatedDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-read-response.decorator.ts\n            \n            variable\n            ApiReadResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-update.decorator.ts\n            \n            variable\n            ApiUpdateDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-updated-response.decorator.ts\n            \n            variable\n            ApiUpdatedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/public.decorator.ts\n            \n            variable\n            META_UNPROTECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/dto/error-schema.dto.ts\n            \n            class\n            ErrorSchemaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/dto/not-found.dto.ts\n            \n            class\n            NotFoundDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/dto/paginated-filter.dto.ts\n            \n            class\n            PaginatedFilterDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/dto/paginated-response.dto.ts\n            \n            class\n            PaginatedResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/filters/mongoose-validation.filter.ts\n            \n            class\n            MongooseValidationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/guards/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/helpers/pick-projection.helper.ts\n            \n            function\n            PickProjectionHelper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/interceptors/file-raw-body.interceptor.ts\n            \n            function\n            FileRawBodyInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/middlewares/raw-body-buffer.middleware.ts\n            \n            interface\n            RawBodyBufferOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/middlewares/raw-body-buffer.middleware.ts\n            \n            function\n            rawBodyBuffer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/pipes/dto-validation.pipe.ts\n            \n            injectable\n            DtoValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/pipes/dto-validation.pipe.ts\n            \n            interface\n            ValidationRecursive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/pipes/object-id-validation.pipe.ts\n            \n            injectable\n            ObjectIdValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.interface.ts\n            \n            interface\n            AutoIncrementPluginOptions\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.interface.ts\n            \n            interface\n            AutoIncrementPluginTrackerSpec\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.logger.ts\n            \n            variable\n            LogLevels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.logger.ts\n            \n            variable\n            setLogLevel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            function\n            AutoIncrementPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            function\n            isNullOrUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            variable\n            AutoIncrementIDSkipSymbol\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            variable\n            DEFAULT_INCREMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            variable\n            IDSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/testsHelpers/mock.model.ts\n            \n            function\n            createMockModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/testsHelpers/mongo.mermory.server.ts\n            \n            class\n            MongoDbTestInstance\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            interface\n            ConfigInstance\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            interface\n            MongoosePlugin\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/auth/strategies/auth-header-api-key.strategy.ts\n            \n            injectable\n            HeaderApiKeyStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/backends/backends.controller.ts\n            \n            controller\n            BackendsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/backends/backends.service.ts\n            \n            injectable\n            BackendsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/core.controller.ts\n            \n            controller\n            CoreController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/core.service.ts\n            \n            injectable\n            CoreService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setLogLevel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/additionalFields.dto.ts\n            \n            class\n            additionalFieldsPartDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n            \n            class\n            inetOrgPersonCreateDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n            \n            class\n            inetOrgPersonDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n            \n            class\n            inetOrgPersonUpdateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/identities.dto.ts\n            \n            class\n            IdentitiesCreateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/identities.dto.ts\n            \n            class\n            IdentitiesDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/identities.dto.ts\n            \n            class\n            IdentitiesUpdateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n            \n            class\n            AdditionalFieldsPart\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n            \n            variable\n            AdditionalFieldsPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n            \n            class\n            inetOrgPerson\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n            \n            variable\n            inetOrgPersonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/identities.schema.ts\n            \n            class\n            Identities\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/identities.schema.ts\n            \n            variable\n            IdentitiesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/_parts/addtionalFields.dto.stub.ts\n            \n            variable\n            additionalFieldsPartDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/_parts/inetOrgPerson.dto.stub.ts\n            \n            variable\n            inetOrgPersonDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/identities.dto.stub.ts\n            \n            variable\n            IdentitiesDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/identities.controller.ts\n            \n            controller\n            IdentitiesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/management/identities/identities.service.ts\n            \n            injectable\n            IdentitiesService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_dto/config.dto.ts\n            \n            class\n            ConfigObjectAttributeDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_dto/config.dto.ts\n            \n            class\n            ConfigObjectObjectClassDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_dto/config.dto.ts\n            \n            class\n            ConfigObjectSchemaDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/identities/validations/identities.validation.service.ts\n            \n            injectable\n            IdentitiesValidationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/management.controller.ts\n            \n            controller\n            ManagementController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/management.service.ts\n            \n            injectable\n            ManagementService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/management/passwd/dto/ask-token.dto.ts\n            \n            class\n            AskTokenDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/passwd/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/management/passwd/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/passwd/dto/verify-token.dto.ts\n            \n            class\n            VerifyTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/management/passwd/passwd.controller.ts\n            \n            controller\n            PasswdController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/passwd/passwd.service.ts\n            \n            injectable\n            PasswdService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @kradihsoy/lt-schematics : ^1.0.13\n        \n            @nestjs-modules/ioredis : ^1.0.1\n        \n            @nestjs/bullmq : ^10.0.1\n        \n            @nestjs/common : ^10.1.3\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.1.3\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @streamkits/nestjs_module_scrud : ^0.0.16\n        \n            bullmq : ^4.14.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            ioredis : ^5.3.2\n        \n            loglevel : ^1.8.1\n        \n            mongoose : ^8.0.2\n        \n            nestjs-request-context : ^3.0.0\n        \n            passport : ^0.6.0\n        \n            passport-headerapikey : ^1.2.2\n        \n            radash : ^11.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            yaml : ^2.3.4\n        \n            yup : ^1.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../change-password.dto.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/management/passwd/dto/change-password.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 CHANGEPWD\n                            \n                        \n                        \n                            \n                                Value : CHANGEPWD\n                            \n                        \n                        \n                            \n                                 ADDIDENT\n                            \n                        \n                        \n                            \n                                Value : ADDIDENT\n                            \n                        \n                        \n                            \n                                 UPDATEIDENT\n                            \n                        \n                        \n                            \n                                Value : UPDATEIDENT\n                            \n                        \n                        \n                            \n                                 DELIDENT\n                            \n                        \n                        \n                            \n                                Value : DELIDENT\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_SYNCED\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AutoIncrementPlugin   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            createMockModel   (src/.../mock.model.ts)\n                        \n                        \n                            FileRawBodyInterceptor   (src/.../file-raw-body.interceptor.ts)\n                        \n                        \n                            isNullOrUndefined   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            PickProjectionHelper   (src/.../pick-projection.helper.ts)\n                        \n                        \n                            rawBodyBuffer   (src/.../raw-body-buffer.middleware.ts)\n                        \n                        \n                            setLogLevel   (src/.../main.ts)\n                        \n                        \n                            swagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/plugins/mongoose/auto-increment.plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AutoIncrementPlugin\n                        \n                    \n                \n            \n            \n                \nAutoIncrementPlugin(schema: Schema, options: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                        Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNullOrUndefined\n                        \n                    \n                \n            \n            \n                \nisNullOrUndefined(val)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     null | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/_common/testsHelpers/mock.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMockModel\n                        \n                    \n                \n            \n            \n                \ncreateMockModel(model: Model, stub)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Model\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stub\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Model\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/_common/interceptors/file-raw-body.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileRawBodyInterceptor\n                        \n                    \n                \n            \n            \n                \nFileRawBodyInterceptor(fieldName: string, localOptions?: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                localOptions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/_common/helpers/pick-projection.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PickProjectionHelper\n                        \n                    \n                \n            \n            \n                \nPickProjectionHelper(classRef: Type, _projection)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classRef\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _projection\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/_common/middlewares/raw-body-buffer.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rawBodyBuffer\n                        \n                    \n                \n            \n            \n                \nrawBodyBuffer(options?: RawBodyBufferOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RawBodyBufferOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setLogLevel\n                        \n                    \n                \n            \n            \n                \nsetLogLevel()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     LogLevel[]\n\n                        \n                \n            \n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swagger\n                        \n                    \n                \n            \n            \n                \nswagger(app: NestExpressApplication)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        NestExpressApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n  \n\nDescription\nOrchestrator du projet Sesame\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn start:devVariables d'environnements\nExample :#Host Redis\nREDIS_HOST=redis\n#Port Redis\nREDIS_PORT=6379\n# redis credentials (si ces variables n existe pas, pas d'authentification par defaut\nREDIS_USER=monUser\nREDIS_PASSWORD=xx\n#Log level  ( fatal,error,warn,info,debug)\nLOG_LEVEL=info\n#Nom de la queue (bullMQ) Redis\nNAME_QUEUE=backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cn\n                            \n                            \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                sn\n                            \n                            \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                uid\n                            \n                            \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ _id: false })\nexport class inetOrgPerson {\n  @Prop({ required: true })\n  cn: string;\n\n  @Prop()\n  displayName?: string;\n\n  @Prop()\n  facsimileTelephoneNumber?: string;\n\n  @Prop()\n  givenName?: string;\n\n  @Prop()\n  labeledURI?: string;\n\n  @Prop()\n  mail?: string;\n\n  @Prop()\n  mobile?: string;\n\n  @Prop()\n  postalAddress?: string;\n\n  @Prop()\n  preferredLanguage?: string;\n\n  @Prop({ required: true })\n  sn: string;\n\n  @Prop()\n  telephoneNumber?: string;\n\n  @Prop()\n  title?: string;\n\n  @Prop({ required: true, unique: true })\n  uid: string;\n\n  @Prop()\n  userCertificate?: string;\n\n  @Prop()\n  userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:71\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:76\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nHeaderApiKeyStrategy\n\nHeaderApiKeyStrategy\n\nAuthModule -->\n\nHeaderApiKeyStrategy->AuthModule\n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    31 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BackendActionType   (src/.../change-password.dto.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/management/passwd/dto/change-password.dto.ts\n    \n    \n        \n            \n                \n                    \n                    BackendActionType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            additionalFieldsPartDtoStub   (src/.../addtionalFields.dto.stub.ts)\n                        \n                        \n                            AdditionalFieldsPartSchema   (src/.../additionalFields.part.schema.ts)\n                        \n                        \n                            ApiBodyDecorator   (src/.../api-body.decorator.ts)\n                        \n                        \n                            ApiCreateDecorator   (src/.../api-create.decorator.ts)\n                        \n                        \n                            ApiCreatedResponseDecorator   (src/.../api-created-response.decorator.ts)\n                        \n                        \n                            ApiDeletedResponseDecorator   (src/.../api-deleted-response.decorator.ts)\n                        \n                        \n                            ApiPaginatedDecorator   (src/.../api-paginated.decorator.ts)\n                        \n                        \n                            ApiPaginatedResponseDecorator   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            ApiReadResponseDecorator   (src/.../api-read-response.decorator.ts)\n                        \n                        \n                            ApiUpdateDecorator   (src/.../api-update.decorator.ts)\n                        \n                        \n                            ApiUpdatedResponseDecorator   (src/.../api-updated-response.decorator.ts)\n                        \n                        \n                            AutoIncrementIDSkipSymbol   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            DEFAULT_INCREMENT   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            EventEmitterSeparator   (src/.../event-emitter.constant.ts)\n                        \n                        \n                            IdentitiesDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IdentitiesSchema   (src/.../identities.schema.ts)\n                        \n                        \n                            IDSchema   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            inetOrgPersonDtoStub   (src/.../inetOrgPerson.dto.stub.ts)\n                        \n                        \n                            inetOrgPersonSchema   (src/.../inetOrgPerson.part.ts)\n                        \n                        \n                            LogLevels   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            META_UNPROTECTED   (src/.../public.decorator.ts)\n                        \n                        \n                            MetadataPartSchema   (src/.../metadata.part.schema.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            setLogLevel   (src/.../auto-increment.logger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/management/identities/_stubs/_parts/addtionalFields.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        additionalFieldsPartDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): additionalFieldsPartDto => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: 'supannEmpId',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdditionalFieldsPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AdditionalFieldsPart)\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-body.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiBodyDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiBodyOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiBody({\n      schema: {\n        $ref: getSchemaPath(model),\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-create.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiCreatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-created-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiCreatedResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.CREATED],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...options,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-deleted-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiDeletedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >,\n>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiQuery({ name: 'limit', type: Number, required: false }),\n    ApiQuery({ name: 'skip', type: Number, required: false }),\n    ApiExtraModels(PaginatedFilterDto),\n    ApiQuery({\n      required: false,\n      name: 'filters',\n      style: 'deepObject',\n      explode: true,\n      type: 'object',\n      schema: {\n        $ref: getSchemaPath(PaginatedFilterDto),\n      },\n    }),\n    ApiPaginatedResponseDecorator(model, options),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PaginatedResponseDto) },\n          {\n            properties: {\n              statusCode: {\n                type: 'number',\n                enum: [HttpStatus.OK],\n              },\n              data: {\n                type: 'array',\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-read-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiReadResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >,\n>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-update.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiUpdatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-updated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >,\n>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  badRequestOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n      ...badRequestOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AutoIncrementIDSkipSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('AutoIncrementIDSkip')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_INCREMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema(\n  {\n    field: String,\n    modelName: String,\n    count: Number,\n  },\n  { versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/event-emitter.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EventEmitterSeparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/identities.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/identities.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Identities)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/_parts/inetOrgPerson.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(inetOrgPerson)\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogLevels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.levels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLogLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.setLevel\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        META_UNPROTECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'unprotected'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  applyDecorators(SetMetadata(META_UNPROTECTED, true))\n                    \n                \n\n\n        \n    \n\n    src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MetadataPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MetadataPart)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/demon.html":{"url":"additional-documentation/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/queue-processor-service.html":{"url":"additional-documentation/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
